<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="text_8c" kind="file" language="C++">
    <compoundname>text.c</compoundname>
    <includes refid="Yap_8h" local="yes">Yap.h</includes>
    <includes refid="YapEval_8h" local="yes">YapEval.h</includes>
    <includes refid="YapHeap_8h" local="yes">YapHeap.h</includes>
    <includes refid="YapStreams_8h" local="yes">YapStreams.h</includes>
    <includes refid="YapText_8h" local="yes">YapText.h</includes>
    <includes refid="Yatom_8h" local="yes">Yatom.h</includes>
    <includes refid="alloc_8h" local="yes">alloc.h</includes>
    <includes refid="yapio_8h" local="yes">yapio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">wchar.h</includes>
    <incdepgraph>
      <node id="1">
        <label>C/text.c</label>
        <link refid="text_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Atoms.h</label>
        <link refid="Atoms_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>Regs.h</label>
        <link refid="Regs_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ScannerTypes.h</label>
        <link refid="ScannerTypes_8h_source"/>
      </node>
      <node id="27">
        <label>TermExt.h</label>
        <link refid="TermExt_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Yap.h</label>
        <link refid="Yap_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>YapCompoundTerm.h</label>
        <link refid="YapCompoundTerm_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>YapEval.h</label>
        <link refid="YapEval_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>YapFlags.h</label>
        <link refid="YapFlags_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>YapGFlagInfo.h</label>
        <link refid="YapGFlagInfo_8h"/>
      </node>
      <node id="36">
        <label>YapHandles.h</label>
        <link refid="YapHandles_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>YapHeap.h</label>
        <link refid="YapHeap_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>YapLFlagInfo.h</label>
        <link refid="YapLFlagInfo_8h"/>
      </node>
      <node id="26">
        <label>YapOpcodes.h</label>
        <link refid="YapOpcodes_8h_source"/>
      </node>
      <node id="35">
        <label>YapSignals.h</label>
        <link refid="YapSignals_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>YapTags.h</label>
        <link refid="YapTags_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>YapText.h</label>
        <link refid="YapText_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>Yapproto.h</label>
        <link refid="Yapproto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>Yatom.h</label>
        <link refid="Yatom_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>alloc.h</label>
        <link refid="alloc_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>amidefs.h</label>
        <link refid="amidefs_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>amiops.h</label>
        <link refid="amiops_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>arrays.h</label>
        <link refid="arrays_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>corout.h</label>
        <link refid="corout_8h_source"/>
      </node>
      <node id="42">
        <label>generated/h0globals.h</label>
        <link refid="h0globals_8h_source"/>
      </node>
      <node id="41">
        <label>generated/h0struct.h</label>
        <link refid="h0struct_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>generated/hlocals.h</label>
        <link refid="hlocals_8h_source"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>generated/tatoms.h</label>
        <link refid="tatoms_8h_source"/>
      </node>
      <node id="34">
        <label>gprof.h</label>
        <link refid="gprof_8h_source"/>
      </node>
      <node id="5">
        <label>inline-only.h</label>
        <link refid="inline-only_8h_source"/>
      </node>
      <node id="44">
        <label>locals.h</label>
        <link refid="locals_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>nolocks.h</label>
        <link refid="nolocks_8h_source"/>
      </node>
      <node id="19">
        <label>threads.h</label>
        <link refid="threads_8h_source"/>
      </node>
      <node id="49">
        <label>GitSHA1.h</label>
        <link refid="GitSHA1_8h_source"/>
      </node>
      <node id="56">
        <label>VFS.h</label>
        <link refid="VFS_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>YapDefs.h</label>
        <link refid="YapDefs_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>YapEncoding.h</label>
        <link refid="YapEncoding_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>YapError.h</label>
        <link refid="YapError_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>YapErrors.h</label>
        <link refid="YapErrors_8h"/>
      </node>
      <node id="18">
        <label>YapFormat.h</label>
        <link refid="YapFormat_8h_source"/>
      </node>
      <node id="20">
        <label>YapInit.h</label>
        <link refid="YapInit_8h"/>
      </node>
      <node id="54">
        <label>YapStreams.h</label>
        <link refid="YapStreams_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>YapTerm.h</label>
        <link refid="YapTerm_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>YapUTF8.h</label>
        <link refid="YapUTF8_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>../os/encoding.h</label>
        <link refid="encoding_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>yapio.h</label>
        <link refid="yapio_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>YapConfig.h</label>
      </node>
      <node id="13">
        <label>YapIOConfig.h</label>
      </node>
      <node id="10">
        <label>YapTermConfig.h</label>
      </node>
      <node id="11">
        <label>config.h</label>
      </node>
      <node id="45">
        <label>dlocals.h</label>
      </node>
      <node id="28">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="14">
        <label>string.h</label>
      </node>
      <node id="52">
        <label>utf8proc.h</label>
      </node>
      <node id="22">
        <label>wchar.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__TextSup_1ga7b2ec7ced59009fa4eb0869d04f12041" prot="public" static="no">
        <name>wcsnlen</name>
        <param><defname>S</defname></param>
        <param><defname>N</defname></param>
        <initializer>min_size(N, wcslen(S))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="49" column="9" bodyfile="C/text.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__TextSup_1ga5c50a69fd5090325ab2ec15e20297e52" prot="public" static="no">
        <name>stpcpy</name>
        <initializer>__stpcpy</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="56" column="9" bodyfile="C/text.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="text_8c_1ad5eb9e02521ed7183431d4406c619c3c" prot="public" static="no">
        <name>POPRET</name>
        <param><defname>x</defname></param>
        <initializer>return pop_output_text_stack(lvl, x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="365" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__TextSup_1ga8714d7e4aeabc22ccb3415b54487d59b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ssize_t</type>
        <definition>static ssize_t min_size</definition>
        <argsstring>(ssize_t i, ssize_t j)</argsstring>
        <name>min_size</name>
        <param>
          <type>ssize_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>ssize_t</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="48" column="23" bodyfile="C/text.c" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1gac09645de1ff237c1ea1d37a1b28007a9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>static void * __stpcpy</definition>
        <argsstring>(void *i, const void *j)</argsstring>
        <name>__stpcpy</name>
        <param>
          <type>void *</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="53" column="20" bodyfile="C/text.c" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga011c7676da69c4b28a44a313419c6149" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char_kind_t</type>
        <definition>char_kind_t Yap_wide_chtype</definition>
        <argsstring>(int ch)</argsstring>
        <name>Yap_wide_chtype</name>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Other, not assigned</para>
<para>&lt; Letter, uppercase</para>
<para>&lt; Letter, lowercase</para>
<para>&lt; Letter, titlecase</para>
<para>&lt; Letter, modifier</para>
<para>&lt; Letter, other</para>
<para>&lt; Mark, nonspacing</para>
<para>&lt; Mark, spacing combining</para>
<para>&lt; Mark, enclosing</para>
<para>&lt; Number, decimal digit</para>
<para>&lt; Number, letter</para>
<para>&lt; Number, other</para>
<para>&lt; Punctuation, connector</para>
<para>&lt; Punctuation, dash</para>
<para>&lt; Punctuation, open</para>
<para>&lt; Punctuation, close</para>
<para>&lt; Punctuation, initial quote</para>
<para>&lt; Punctuation, final quote</para>
<para>&lt; Punctuation, other</para>
<para>&lt; Symbol, math</para>
<para>&lt; Symbol, currency</para>
<para>&lt; Symbol, modifier</para>
<para>unsure in YAP, let&apos;s assume a,c us treated as aç</para>
<para>&lt; Symbol, other</para>
<para>&lt; Separator, space</para>
<para>&lt; Separator, line</para>
<para>&lt; Separator, paragraph</para>
<para>&lt; Other, control</para>
<para>&lt; Other, format</para>
<para>&lt; Other, surrogate</para>
<para>&lt; Other, private use</para>
        </inbodydescription>
        <location file="C/text.c" line="63" column="20" bodyfile="C/text.c" bodystart="63" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga949e2d06199652bbacf7cc059a9d424b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Term</type>
        <definition>static Term Globalize</definition>
        <argsstring>(Term v USES_REGS)</argsstring>
        <name>Globalize</name>
        <param>
          <type>Term v</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="132" column="13" bodyfile="C/text.c" bodystart="132" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1gafcf4e699b0706f05e3409fdab6206026" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void * codes2buf</definition>
        <argsstring>(Term t0, void *b0, bool get_codes, bool fixed USES_REGS)</argsstring>
        <name>codes2buf</name>
        <param>
          <type>Term</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>b0</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>get_codes</declname>
        </param>
        <param>
          <type>bool fixed</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="143" column="13" bodyfile="C/text.c" bodystart="143" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga48ea4dc1f25f5c96f0a52ad10085a9a9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>static unsigned char * latin2utf8</definition>
        <argsstring>(seq_tv_t *inp)</argsstring>
        <name>latin2utf8</name>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *</type>
          <declname>inp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="268" column="22" bodyfile="C/text.c" bodystart="268" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga00f4b7b9f4a28c0d67cc870b3d8a02a7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>static unsigned char * wchar2utf8</definition>
        <argsstring>(seq_tv_t *inp)</argsstring>
        <name>wchar2utf8</name>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *</type>
          <declname>inp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="288" column="22" bodyfile="C/text.c" bodystart="288" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga50b2e988a301c59ea240081f47d92175" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void * slice</definition>
        <argsstring>(ssize_t min, ssize_t max, const unsigned char *buf USES_REGS)</argsstring>
        <name>slice</name>
        <param>
          <type>ssize_t</type>
          <declname>min</declname>
        </param>
        <param>
          <type>ssize_t</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const unsigned char *buf</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="303" column="13" bodyfile="C/text.c" bodystart="303" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1gae92f45f9270993a812a31410a3255eda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char * Yap_ListOfCodesToBuffer</definition>
        <argsstring>(unsigned char *buf, Term t, seq_tv_t *inp USES_REGS)</argsstring>
        <name>Yap_ListOfCodesToBuffer</name>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *inp</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="320" column="15" bodyfile="C/text.c" bodystart="320" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1gafc8bf62c92ca50e74de9e0e83798279c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char * Yap_ListOfCharsToBuffer</definition>
        <argsstring>(unsigned char *buf, Term t, seq_tv_t *inp USES_REGS)</argsstring>
        <name>Yap_ListOfCharsToBuffer</name>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *inp</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="327" column="16" bodyfile="C/text.c" bodystart="327" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga47a4291cb20bddcdfc17cb6330f755b9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>static unsigned char * Yap_ListToBuffer</definition>
        <argsstring>(unsigned char *buf, Term t, seq_tv_t *inp USES_REGS)</argsstring>
        <name>Yap_ListToBuffer</name>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *inp</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="334" column="22" bodyfile="C/text.c" bodystart="334" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga8beecf54eaa697666765368f0a482871" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>yap_error_number</type>
        <definition>static yap_error_number gen_type_error</definition>
        <argsstring>(int flags)</argsstring>
        <name>gen_type_error</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="339" column="25" bodyfile="C/text.c" bodystart="339" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga9e1c817aa296af63811d92c583fb6593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char * Yap_readText</definition>
        <argsstring>(seq_tv_t *inp USES_REGS)</argsstring>
        <name>Yap_readText</name>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *inp</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="364" column="15" bodyfile="C/text.c" bodystart="364" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1gacd83b2ada52f9e1d16fbe4cff7cf0910" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Term</type>
        <definition>static Term write_strings</definition>
        <argsstring>(unsigned char *s0, seq_tv_t *out USES_REGS)</argsstring>
        <name>write_strings</name>
        <param>
          <type>unsigned char *</type>
          <declname>s0</declname>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *out</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="523" column="13" bodyfile="C/text.c" bodystart="523" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga7dc9f47370f662583a9a1883513adc5b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Term</type>
        <definition>static Term write_atoms</definition>
        <argsstring>(void *s0, seq_tv_t *out USES_REGS)</argsstring>
        <name>write_atoms</name>
        <param>
          <type>void *</type>
          <declname>s0</declname>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *out</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="542" column="13" bodyfile="C/text.c" bodystart="542" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1gaea47051665d22bb153d94017ffcd41d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Term</type>
        <definition>static Term write_codes</definition>
        <argsstring>(void *s0, seq_tv_t *out USES_REGS)</argsstring>
        <name>write_codes</name>
        <param>
          <type>void *</type>
          <declname>s0</declname>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *out</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="594" column="13" bodyfile="C/text.c" bodystart="594" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga52719f3921eaccba86ba62e77caab383" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structAtomEntryStruct" kindref="compound">Atom</ref></type>
        <definition>static Atom write_atom</definition>
        <argsstring>(void *s0, seq_tv_t *out USES_REGS)</argsstring>
        <name>write_atom</name>
        <param>
          <type>void *</type>
          <declname>s0</declname>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *out</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="631" column="13" bodyfile="C/text.c" bodystart="631" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga7bae8c98410962c9fec733e0be5fc497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * write_buffer</definition>
        <argsstring>(unsigned char *s0, seq_tv_t *out USES_REGS)</argsstring>
        <name>write_buffer</name>
        <param>
          <type>unsigned char *</type>
          <declname>s0</declname>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *out</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="648" column="6" bodyfile="C/text.c" bodystart="648" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1gaadabacfb74e86a543ea987293087725a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t write_length</definition>
        <argsstring>(const unsigned char *s0, seq_tv_t *out USES_REGS)</argsstring>
        <name>write_length</name>
        <param>
          <type>const unsigned char *</type>
          <declname>s0</declname>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *out</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="724" column="15" bodyfile="C/text.c" bodystart="724" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga1615247d8fa80a6993c46a0cabd6aeab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Term</type>
        <definition>static Term write_number</definition>
        <argsstring>(unsigned char *s, seq_tv_t *out USES_REGS)</argsstring>
        <name>write_number</name>
        <param>
          <type>unsigned char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *out</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="728" column="13" bodyfile="C/text.c" bodystart="728" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga9ee2ffe8e1cba40e9a35d8a6cd7887bc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Term</type>
        <definition>static Term string_to_term</definition>
        <argsstring>(void *s, seq_tv_t *out USES_REGS)</argsstring>
        <name>string_to_term</name>
        <param>
          <type>void *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *out</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="736" column="13" bodyfile="C/text.c" bodystart="736" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga46413c177b2e96a82600fba4c4df8ce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool write_Text</definition>
        <argsstring>(unsigned char *inp, seq_tv_t *out USES_REGS)</argsstring>
        <name>write_Text</name>
        <param>
          <type>unsigned char *</type>
          <declname>inp</declname>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *out</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="747" column="6" bodyfile="C/text.c" bodystart="747" bodyend="824"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga571e847088fbbb083cfacda280b5beee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t upcase</definition>
        <argsstring>(void *s0, seq_tv_t *out USES_REGS)</argsstring>
        <name>upcase</name>
        <param>
          <type>void *</type>
          <declname>s0</declname>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *out</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="826" column="15" bodyfile="C/text.c" bodystart="826" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga850173492631f34319dbefe6bc42c005" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t downcase</definition>
        <argsstring>(void *s0, seq_tv_t *out USES_REGS)</argsstring>
        <name>downcase</name>
        <param>
          <type>void *</type>
          <declname>s0</declname>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *out</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="839" column="15" bodyfile="C/text.c" bodystart="839" bodyend="850"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1gada75cdc3442c193ff045b15d6475be57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Yap_CVT_Text</definition>
        <argsstring>(seq_tv_t *inp, seq_tv_t *out USES_REGS)</argsstring>
        <name>Yap_CVT_Text</name>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *</type>
          <declname>inp</declname>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *out</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="852" column="6" bodyfile="C/text.c" bodystart="852" bodyend="919"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga21da44c70f968db5c3ce75507ca71a82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Yap_Concat_Text</definition>
        <argsstring>(int tot, seq_tv_t inp[], seq_tv_t *out USES_REGS)</argsstring>
        <name>Yap_Concat_Text</name>
        <param>
          <type>int</type>
          <declname>tot</declname>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref></type>
          <declname>inp</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *out</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="927" column="6" bodyfile="C/text.c" bodystart="927" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga72447bb64b13e50e62fd6a667a58f9e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Yap_Splice_Text</definition>
        <argsstring>(int n, ssize_t cuts[], seq_tv_t *inp, seq_tv_t outv[] USES_REGS)</argsstring>
        <name>Yap_Splice_Text</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ssize_t</type>
          <declname>cuts</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> *</type>
          <declname>inp</declname>
        </param>
        <param>
          <type><ref refid="structtext__cvt" kindref="compound">seq_tv_t</ref> outv[]</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="972" column="6" bodyfile="C/text.c" bodystart="972" bodyend="1056"/>
      </memberdef>
      <memberdef kind="function" id="group__TextSup_1ga6752ab4b87c423f97aea3f9ba49b9182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * Yap_PredIndicatorToUTF8String</definition>
        <argsstring>(PredEntry *ap, char *s0, size_t sz)</argsstring>
        <name>Yap_PredIndicatorToUTF8String</name>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>s0</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
<para>Convert from a predicate structure to an UTF-8 string of the form. </para>
        </briefdescription>
        <detaileddescription>
<para>module:name/arity</para>
<para>The result is in very volatile memory</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the temporary string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/text.c" line="1069" column="12" bodyfile="C/text.c" bodystart="1069" bodyend="1123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Support routines for text processing. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C/text.c"/>
  </compounddef>
</doxygen>
