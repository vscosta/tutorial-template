<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classcopy__term_23" kind="class" language="Prolog" prot="public">
    <compoundname>copy_term/3</compoundname>
    <briefdescription>
<para><bold>copy_term</bold>(? <emphasis>TI</emphasis>,- <emphasis>TF</emphasis>,- <emphasis>Goals</emphasis>) </para>
    </briefdescription>
    <detaileddescription>
<para>Term <emphasis>TF</emphasis> is a varia of the original term <emphasis>TI</emphasis>, such that for each variable <emphasis>V</emphasis> in the term <emphasis>TI</emphasis> there is a new variable <emphasis>V&apos;</emphasis> in term <emphasis>TF</emphasis> without any attributes attached Attributed variables are thus converted to standard variables <emphasis>Goals</emphasis> is unified with a list that represents the attributes The goal <computeroutput>maplist(call, _Goals_)</computeroutput> can be called to recreate the attributes</para>
<para><computeroutput>attribute_goals/1 </computeroutput> in the module where the attribute is defined </para>
    </detaileddescription>
    <location file="/home/vsc/github/yap/pl/attributes.yap" line="1" column="1" bodyfile="/home/vsc/github/yap/pl/attributes.yap" bodystart="1" bodyend="-1"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
