<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classget_22" kind="predicate" language="Prolog" prot="public">
    <compoundname>get/2</compoundname>
    <briefdescription>
<para><bold>get</bold>(<emphasis>S</emphasis>, - <emphasis>C</emphasis>) </para>
    </briefdescription>
    <detaileddescription>
<para>The next non-blank character from the stream <emphasis>S</emphasis> is unified with <emphasis>C</emphasis> Blank characters are the ones whose ASCII codes are not greater than 32 If there are no more non-blank characters in the stream, <emphasis>C</emphasis> is unified with -1 If <computeroutput>end_of_stream</computeroutput> has already been reached in the previous reading, this call will give an error message </para>
    </detaileddescription>
    <location file="os/charsio.c" line="294" column="1" bodyfile="os/charsio.c" bodystart="294" bodyend="-1"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
