<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classvar_22" kind="predicate" language="Prolog" prot="public">
    <compoundname>var/2</compoundname>
    <briefdescription>
<para><bold>?_X_ == ?_Y_</bold> </para>
    </briefdescription>
    <detaileddescription>
<para>defined in the <emphasis>ISO</emphasis> standard</para>
<para>Succeeds if terms <emphasis>X</emphasis> and <emphasis>Y</emphasis> are strictly identical The difference between this predicate and =/2 is that, if one of the arguments is a free variable, it only succeeds when they have already been unified</para>
<para><programlisting filename=".prolog"><codeline><highlight class="keyword">?-<sp/></highlight><highlight class="charliteral">X</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">==</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">Y</highlight><highlight class="keyword">.</highlight></codeline>
</programlisting> fails, but,</para>
<para><programlisting filename=".prolog"><codeline><highlight class="keyword">?-</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">X</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">=</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">Y</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">X</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">==</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">Y</highlight><highlight class="keyword">.</highlight></codeline>
</programlisting> succeeds</para>
<para><programlisting filename=".prolog"><codeline><highlight class="keyword">?-</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">X</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">==</highlight><highlight class="normal"><sp/></highlight><highlight class="vhldigit">2</highlight><highlight class="keyword">.</highlight></codeline>
</programlisting> fails, but,</para>
<para><programlisting filename=".prolog"><codeline><highlight class="keyword">?-</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">X</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">=</highlight><highlight class="normal"><sp/></highlight><highlight class="vhldigit">2</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">X</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">==</highlight><highlight class="normal"><sp/></highlight><highlight class="vhldigit">2</highlight><highlight class="keyword">.</highlight></codeline>
</programlisting> succeeds </para>
    </detaileddescription>
    <location file="C/inlines.c" line="525" column="1" bodyfile="C/inlines.c" bodystart="525" bodyend="-1"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
