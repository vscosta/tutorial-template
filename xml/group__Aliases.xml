<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="group__Aliases" kind="group">
    <compoundname>Aliases</compoundname>
    <title>Aliases to Stream Names</title>
    <briefdescription>
<para>This file defines the main operations on aliases, a second name for an open stream. </para>
    </briefdescription>
    <detaileddescription>
<para>Aliases are always textual constants (atoms)</para>
<para>Their first advantage is that they allow cleaning up code, by separating name from operation, eg YAP has a loop stream used to run the main top-level, which can be std0 originally but then changed to a pipe, a file, or a memory region Other important streams are the user streams Finally, the debugger uses debugger input and output</para>
<para>P redefined stream aliases are:<itemizedlist>
<listitem><para>user: special alias, initially refers to all the three standard streams</para>
</listitem><listitem><para><computeroutput>user_input: initially refers to the stdandard input stream; +</computeroutput>user_output: initially refers to the stdandard output stream;</para>
</listitem><listitem><para><computeroutput>user_error: initially refers to the stdandard error stream Often this is the same device as</computeroutput>stderr`, just accessed in different ways</para>
</listitem><listitem><para>loop_stream: refers to the stream for the file or object being current consulted</para>
</listitem><listitem><para>debugger_input: refers to the stream used to send debugger commands, by default <computeroutput>user_input</computeroutput></para>
</listitem><listitem><para>debugger_output: refers to the stream used to output debugging, by default <computeroutput>user_error</computeroutput> It must always be interactive</para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
