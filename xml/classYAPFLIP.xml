<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classYAPFLIP" kind="class" language="C++" prot="public">
    <compoundname>YAPFLIP</compoundname>
    <basecompoundref refid="classYAPPredicate" prot="public" virt="non-virtual">YAPPredicate</basecompoundref>
    <includes refid="tmp_2yapdb_8hh" local="no">yapdb.hh</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classYAPFLIP_1ab6f3c269fc46c9c1c0f81b3431240138" prot="public" static="no" mutable="no">
        <type></type>
        <definition>__pad0__</definition>
        <argsstring></argsstring>
        <name>__pad0__</name>
        <qualifiedname>YAPFLIP::__pad0__</qualifiedname>
        <bitfield> YAPPredicate(YAPAtom(name)</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="306" column="3" bodyfile="/home/vsc/github/yap/CXX/yapdb.hh" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classYAPFLIP_1a2f6dcf8dfaa795c630d174c8e6fa0fff" prot="public" static="no" mutable="no">
        <type></type>
        <definition>arity</definition>
        <argsstring></argsstring>
        <name>arity</name>
        <qualifiedname>YAPFLIP::arity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="314" column="8" bodyfile="/home/vsc/github/yap/CXX/yapdb.hh" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classYAPFLIP_1a96e5f0eca87c2426370e0897ac7b8ca6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>module</definition>
        <argsstring></argsstring>
        <name>module</name>
        <qualifiedname>YAPFLIP::module</qualifiedname>
        <initializer>{
      YAP_UserCPredicate(<ref refid="classYAPPredicate_1aa81cc38dff90358b272f46b7f442b96f" kindref="member">name</ref>, 0, arity)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="314" column="14" bodyfile="/home/vsc/github/yap/CXX/yapdb.hh" bodystart="314" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classYAPFLIP_1a2119a95d799ca9493afbf8570395ce42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>YAPFLIP</definition>
        <argsstring>(YAP_UserCPred call, std::string name, YAP_Arity arity, const std::string module=std::string(RepAtom(AtomOfTerm(YAP_CurrentModule())) -&gt;StrOfAE), YAP_UserCPred retry=0, YAP_UserCPred cut=0, YAP_Arity extra=0, bool test=false)</argsstring>
        <name>YAPFLIP</name>
        <qualifiedname>YAPFLIP::YAPFLIP</qualifiedname>
        <param>
          <type>YAP_UserCPred</type>
          <declname>call</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>YAP_Arity</type>
          <declname>arity</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>module</declname>
          <defval>std::string(RepAtom(AtomOfTerm(YAP_CurrentModule())) -&gt;StrOfAE)</defval>
        </param>
        <param>
          <type>YAP_UserCPred</type>
          <declname>retry</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>YAP_UserCPred</type>
          <declname>cut</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>YAP_Arity</type>
          <declname>extra</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>test</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="328" column="3" bodyfile="/home/vsc/github/yap/CXX/tmp/yapdb.hh" bodystart="328" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1a020532d8a40ff528cf38adc95701eb0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>YAPFLIP</definition>
        <argsstring>(const char *name, uintptr_t arity, YAPModule module=YAPModule(), bool backtrackable=false)</argsstring>
        <name>YAPFLIP</name>
        <qualifiedname>YAPFLIP::YAPFLIP</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uintptr_t</type>
          <declname>arity</declname>
        </param>
        <param>
          <type><ref refid="classYAPModule" kindref="compound">YAPModule</ref></type>
          <declname>module</declname>
          <defval><ref refid="classYAPModule" kindref="compound">YAPModule</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>backtrackable</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="344" column="3" bodyfile="/home/vsc/github/yap/CXX/tmp/yapdb.hh" bodystart="344" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1a77b1866f45de33c6cc78f7cf48f89078" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool addCall</definition>
        <argsstring>(CPredicate call)</argsstring>
        <name>addCall</name>
        <qualifiedname>YAPFLIP::addCall</qualifiedname>
        <param>
          <type>CPredicate</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="353" column="8" bodyfile="/home/vsc/github/yap/CXX/tmp/yapdb.hh" bodystart="353" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1ada9a24fb244251fd7f466d081e77dc6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool addRetry</definition>
        <argsstring>(CPredicate call)</argsstring>
        <name>addRetry</name>
        <qualifiedname>YAPFLIP::addRetry</qualifiedname>
        <param>
          <type>CPredicate</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="354" column="8" bodyfile="/home/vsc/github/yap/CXX/tmp/yapdb.hh" bodystart="354" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1a6de293aec08905680c85d29ad1ab85c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool addCut</definition>
        <argsstring>(CPredicate call)</argsstring>
        <name>addCut</name>
        <qualifiedname>YAPFLIP::addCut</qualifiedname>
        <param>
          <type>CPredicate</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="355" column="8" bodyfile="/home/vsc/github/yap/CXX/tmp/yapdb.hh" bodystart="355" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1ac5aa208e07436f3097063bb9e6e4b56d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Term</type>
        <definition>Term x</definition>
        <argsstring>(int i)</argsstring>
        <name>x</name>
        <qualifiedname>YAPFLIP::x</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="358" column="8" bodyfile="/home/vsc/github/yap/CXX/tmp/yapdb.hh" bodystart="358" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1ab0a868d572f27e16271cfaeabacc39b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref></type>
        <definition>YAPTerm X</definition>
        <argsstring>(int i)</argsstring>
        <name>X</name>
        <qualifiedname>YAPFLIP::X</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="363" column="11" bodyfile="/home/vsc/github/yap/CXX/tmp/yapdb.hh" bodystart="363" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1a332049dd8db6d3fa2f7bbfe495416716" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool output</definition>
        <argsstring>(Term t, int i)</argsstring>
        <name>output</name>
        <qualifiedname>YAPFLIP::output</qualifiedname>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="370" column="8" bodyfile="/home/vsc/github/yap/CXX/tmp/yapdb.hh" bodystart="370" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1aa0c457ed241cb9d540abf006b8a20bd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool output</definition>
        <argsstring>(YAPTerm t, int i)</argsstring>
        <name>output</name>
        <qualifiedname>YAPFLIP::output</qualifiedname>
        <param>
          <type><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="374" column="8" bodyfile="/home/vsc/github/yap/CXX/tmp/yapdb.hh" bodystart="374" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1ae6943e81262540e480c95b2aa667e540" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ensureStorage</definition>
        <argsstring>(size_t cells)</argsstring>
        <name>ensureStorage</name>
        <qualifiedname>YAPFLIP::ensureStorage</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>cells</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="380" column="8" bodyfile="/home/vsc/github/yap/CXX/tmp/yapdb.hh" bodystart="380" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1aa009d01a30273193351ac26e197a2de9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ensureStorage</definition>
        <argsstring>(size_t cells, std::vector&lt; Term &gt; ts)</argsstring>
        <name>ensureStorage</name>
        <qualifiedname>YAPFLIP::ensureStorage</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>cells</declname>
        </param>
        <param>
          <type>std::vector&lt; Term &gt;</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="386" column="8" bodyfile="/home/vsc/github/yap/CXX/tmp/yapdb.hh" bodystart="386" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1a2119a95d799ca9493afbf8570395ce42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>YAPFLIP</definition>
        <argsstring>(YAP_UserCPred call, std::string name, YAP_Arity arity, const std::string module=std::string(RepAtom(AtomOfTerm(YAP_CurrentModule())) -&gt;StrOfAE), YAP_UserCPred retry=0, YAP_UserCPred cut=0, YAP_Arity extra=0, bool test=false)</argsstring>
        <name>YAPFLIP</name>
        <qualifiedname>YAPFLIP::YAPFLIP</qualifiedname>
        <param>
          <type>YAP_UserCPred</type>
          <declname>call</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>YAP_Arity</type>
          <declname>arity</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>module</declname>
          <defval>std::string(RepAtom(AtomOfTerm(YAP_CurrentModule())) -&gt;StrOfAE)</defval>
        </param>
        <param>
          <type>YAP_UserCPred</type>
          <declname>retry</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>YAP_UserCPred</type>
          <declname>cut</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>YAP_Arity</type>
          <declname>extra</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>test</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="306" column="3" bodyfile="/home/vsc/github/yap/CXX/yapdb.hh" bodystart="306" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1a77b1866f45de33c6cc78f7cf48f89078" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool addCall</definition>
        <argsstring>(CPredicate call)</argsstring>
        <name>addCall</name>
        <qualifiedname>YAPFLIP::addCall</qualifiedname>
        <param>
          <type>CPredicate</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="317" column="8" bodyfile="/home/vsc/github/yap/CXX/yapdb.hh" bodystart="317" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1ada9a24fb244251fd7f466d081e77dc6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool addRetry</definition>
        <argsstring>(CPredicate call)</argsstring>
        <name>addRetry</name>
        <qualifiedname>YAPFLIP::addRetry</qualifiedname>
        <param>
          <type>CPredicate</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="318" column="8" bodyfile="/home/vsc/github/yap/CXX/yapdb.hh" bodystart="318" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1a6de293aec08905680c85d29ad1ab85c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool addCut</definition>
        <argsstring>(CPredicate call)</argsstring>
        <name>addCut</name>
        <qualifiedname>YAPFLIP::addCut</qualifiedname>
        <param>
          <type>CPredicate</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="319" column="8" bodyfile="/home/vsc/github/yap/CXX/yapdb.hh" bodystart="319" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1ac5aa208e07436f3097063bb9e6e4b56d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Term</type>
        <definition>Term x</definition>
        <argsstring>(int i)</argsstring>
        <name>x</name>
        <qualifiedname>YAPFLIP::x</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="322" column="8" bodyfile="/home/vsc/github/yap/CXX/yapdb.hh" bodystart="322" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1ab0a868d572f27e16271cfaeabacc39b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref></type>
        <definition>YAPTerm X</definition>
        <argsstring>(int i)</argsstring>
        <name>X</name>
        <qualifiedname>YAPFLIP::X</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="328" column="11" bodyfile="/home/vsc/github/yap/CXX/yapdb.hh" bodystart="328" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1a332049dd8db6d3fa2f7bbfe495416716" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool output</definition>
        <argsstring>(Term t, int i)</argsstring>
        <name>output</name>
        <qualifiedname>YAPFLIP::output</qualifiedname>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="335" column="8" bodyfile="/home/vsc/github/yap/CXX/yapdb.hh" bodystart="335" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1aa0c457ed241cb9d540abf006b8a20bd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool output</definition>
        <argsstring>(YAPTerm t, int i)</argsstring>
        <name>output</name>
        <qualifiedname>YAPFLIP::output</qualifiedname>
        <param>
          <type><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="339" column="8" bodyfile="/home/vsc/github/yap/CXX/yapdb.hh" bodystart="339" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1ae6943e81262540e480c95b2aa667e540" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ensureStorage</definition>
        <argsstring>(size_t cells)</argsstring>
        <name>ensureStorage</name>
        <qualifiedname>YAPFLIP::ensureStorage</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>cells</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="345" column="8" bodyfile="/home/vsc/github/yap/CXX/yapdb.hh" bodystart="345" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classYAPFLIP_1aa009d01a30273193351ac26e197a2de9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ensureStorage</definition>
        <argsstring>(size_t cells, std::vector&lt; Term &gt; ts)</argsstring>
        <name>ensureStorage</name>
        <qualifiedname>YAPFLIP::ensureStorage</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>cells</declname>
        </param>
        <param>
          <type>std::vector&lt; Term &gt;</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="352" column="8" bodyfile="/home/vsc/github/yap/CXX/yapdb.hh" bodystart="352" bodyend="356"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>PrologPredicate. </para>
    </briefdescription>
    <detaileddescription>
<para>This class interfaces with Predicates Implemented in Prolog</para>
<para>This class interfaces with Predicates Implemented in Prolog </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>YAPFLIP</label>
        <link refid="classYAPFLIP"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>YAPModuleProp</label>
        <link refid="classYAPModuleProp"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>YAPPredicate</label>
        <link refid="classYAPPredicate"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>YAPProp</label>
        <link refid="classYAPProp"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>AtomEntryStruct</label>
        <link refid="structAtomEntryStruct"/>
        <childnode refid="10" relation="usage">
          <edgelabel>NextOfAE</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>PropsOfAE</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>blob</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>DB_STRUCT</label>
        <link refid="structDB__STRUCT"/>
        <childnode refid="9" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>Parent</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>Code</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>Next</edgelabel>
          <edgelabel>Prev</edgelabel>
          <edgelabel>n</edgelabel>
          <edgelabel>p</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>DBT</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>DB_TERM</label>
        <link refid="structDB__TERM"/>
        <childnode refid="12" relation="usage">
          <edgelabel>NextDBT</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>DBRefs</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>FunctorEntryStruct</label>
        <link refid="structFunctorEntryStruct"/>
        <childnode refid="6" relation="usage">
          <edgelabel>NextOfPE</edgelabel>
          <edgelabel>PropsOfFE</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>NameOfFE</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>PropEntryStruct</label>
        <link refid="structPropEntryStruct"/>
        <childnode refid="6" relation="usage">
          <edgelabel>NextOfPE</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>YAPFLIP</label>
        <link refid="classYAPFLIP"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>YAPModuleProp</label>
        <link refid="classYAPModuleProp"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>YAPPredicate</label>
        <link refid="classYAPPredicate"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ap</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>YAPProp</label>
        <link refid="classYAPProp"/>
      </node>
      <node id="11">
        <label>atom_blob</label>
        <link refid="structatom__blob"/>
      </node>
      <node id="8">
        <label>logic_upd_clause</label>
        <link refid="structlogic__upd__clause"/>
        <childnode refid="9" relation="usage">
          <edgelabel>Id</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>ClCode</edgelabel>
          <edgelabel>ClExt</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>ClSource</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>ClOwner</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>ClNext</edgelabel>
          <edgelabel>ClPrev</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ClPred</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>logic_upd_index</label>
        <link refid="structlogic__upd__index"/>
        <childnode refid="15" relation="usage">
          <edgelabel>ChildIndex</edgelabel>
          <edgelabel>ParentIndex</edgelabel>
          <edgelabel>PrevSiblingIndex</edgelabel>
          <edgelabel>SiblingIndex</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ClPred</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>ClCode</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>pred_entry</label>
        <link refid="structpred__entry"/>
        <childnode refid="6" relation="usage">
          <edgelabel>NextOfPE</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>CodeOfPred</edgelabel>
          <edgelabel>FirstClause</edgelabel>
          <edgelabel>LastClause</edgelabel>
          <edgelabel>MetaEntryOfPred</edgelabel>
          <edgelabel>TrueCodeOfPred</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>FunctorOfPred</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>OwnerFile</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>StatisticsForPred</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>NextPredOfHash</edgelabel>
          <edgelabel>NextPredOfModule</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>profile_data</label>
        <link refid="structprofile__data"/>
      </node>
      <node id="14">
        <label>struct_dbentry</label>
        <link refid="structstruct__dbentry"/>
        <childnode refid="6" relation="usage">
          <edgelabel>NextOfPE</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>FunctorOfDB</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>F0</edgelabel>
          <edgelabel>First</edgelabel>
          <edgelabel>L0</edgelabel>
          <edgelabel>Last</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>yami</label>
        <link refid="structyami"/>
        <childnode refid="7" relation="usage">
          <edgelabel>F</edgelabel>
          <edgelabel>T</edgelabel>
          <edgelabel>d</edgelabel>
          <edgelabel>f</edgelabel>
          <edgelabel>l</edgelabel>
          <edgelabel>l1</edgelabel>
          <edgelabel>l2</edgelabel>
          <edgelabel>l3</edgelabel>
          <edgelabel>l4</edgelabel>
          <edgelabel>n</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>ClBase</edgelabel>
          <edgelabel>d</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>f</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>I</edgelabel>
          <edgelabel>block</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>p</edgelabel>
          <edgelabel>p0</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="326" column="1" bodyfile="/home/vsc/github/yap/CXX/tmp/yapdb.hh" bodystart="326" bodyend="391"/>
    <listofallmembers>
      <member refid="classYAPFLIP_1ab6f3c269fc46c9c1c0f81b3431240138" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>__pad0__</name></member>
      <member refid="classYAPFLIP_1a77b1866f45de33c6cc78f7cf48f89078" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>addCall</name></member>
      <member refid="classYAPFLIP_1a77b1866f45de33c6cc78f7cf48f89078" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>addCall</name></member>
      <member refid="classYAPFLIP_1a6de293aec08905680c85d29ad1ab85c6" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>addCut</name></member>
      <member refid="classYAPFLIP_1a6de293aec08905680c85d29ad1ab85c6" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>addCut</name></member>
      <member refid="classYAPFLIP_1ada9a24fb244251fd7f466d081e77dc6a" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>addRetry</name></member>
      <member refid="classYAPFLIP_1ada9a24fb244251fd7f466d081e77dc6a" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>addRetry</name></member>
      <member refid="classYAPPredicate_1a839d6526c02047d6014f3f70ccbf77ca" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>ap</name></member>
      <member refid="classYAPFLIP_1a2f6dcf8dfaa795c630d174c8e6fa0fff" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>arity</name></member>
      <member refid="classYAPPredicate_1aa6191e913472b983093c01c1bf932226" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>asPred</name></member>
      <member refid="classYAPPredicate_1aa6191e913472b983093c01c1bf932226" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>asPred</name></member>
      <member refid="classYAPFLIP_1ae6943e81262540e480c95b2aa667e540" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>ensureStorage</name></member>
      <member refid="classYAPFLIP_1aa009d01a30273193351ac26e197a2de9" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>ensureStorage</name></member>
      <member refid="classYAPFLIP_1ae6943e81262540e480c95b2aa667e540" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>ensureStorage</name></member>
      <member refid="classYAPFLIP_1aa009d01a30273193351ac26e197a2de9" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>ensureStorage</name></member>
      <member refid="classYAPPredicate_1ab4c33ce3d95491d0ebf1cdd176e5798d" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>functor</name></member>
      <member refid="classYAPPredicate_1ab4c33ce3d95491d0ebf1cdd176e5798d" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>functor</name></member>
      <member refid="classYAPPredicate_1af610666f80f3e2cc32141aac455386a9" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>getArity</name></member>
      <member refid="classYAPPredicate_1af610666f80f3e2cc32141aac455386a9" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>getArity</name></member>
      <member refid="classYAPPredicate_1a221827607deb87db2a667e3464069dfd" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>getPred</name></member>
      <member refid="classYAPPredicate_1a221827607deb87db2a667e3464069dfd" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>getPred</name></member>
      <member refid="classYAPFLIP_1a96e5f0eca87c2426370e0897ac7b8ca6" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>module</name></member>
      <member refid="classYAPPredicate_1aa81cc38dff90358b272f46b7f442b96f" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>name</name></member>
      <member refid="classYAPPredicate_1aa81cc38dff90358b272f46b7f442b96f" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>name</name></member>
      <member refid="classYAPFLIP_1a332049dd8db6d3fa2f7bbfe495416716" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>output</name></member>
      <member refid="classYAPFLIP_1aa0c457ed241cb9d540abf006b8a20bd2" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>output</name></member>
      <member refid="classYAPFLIP_1a332049dd8db6d3fa2f7bbfe495416716" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>output</name></member>
      <member refid="classYAPFLIP_1aa0c457ed241cb9d540abf006b8a20bd2" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>output</name></member>
      <member refid="classYAPPredicate_1a034c990d9a63b743fd7db59da5455fad" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>predEntry</name></member>
      <member refid="classYAPPredicate_1a034c990d9a63b743fd7db59da5455fad" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>predEntry</name></member>
      <member refid="classYAPFLIP_1ab0a868d572f27e16271cfaeabacc39b5" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>X</name></member>
      <member refid="classYAPFLIP_1ab0a868d572f27e16271cfaeabacc39b5" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>X</name></member>
      <member refid="classYAPFLIP_1ac5aa208e07436f3097063bb9e6e4b56d" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>x</name></member>
      <member refid="classYAPFLIP_1ac5aa208e07436f3097063bb9e6e4b56d" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>x</name></member>
      <member refid="classYAPFLIP_1a2119a95d799ca9493afbf8570395ce42" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPFLIP</name></member>
      <member refid="classYAPFLIP_1a020532d8a40ff528cf38adc95701eb0c" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPFLIP</name></member>
      <member refid="classYAPFLIP_1a2119a95d799ca9493afbf8570395ce42" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPFLIP</name></member>
      <member refid="classYAPModuleProp_1adf690c4e6af7f45d7825ad773b361c7f" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPModuleProp</name></member>
      <member refid="classYAPModuleProp_1ab14e7d554901cdc212b884cae816f5de" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPModuleProp</name></member>
      <member refid="classYAPPredicate_1a255d049e4e7504d950d7d5c3aa88b123" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a736af68fff04dcf3e65d2cafe9a94208" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1aaafc77158efa32b43c50a4d18414a0e2" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a99c37898eb0dffd137ad1df69c44cc96" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a90447039b725dc6f517258415fd8684f" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a1ddef13a05f27efc4f924b996039add1" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a6f15eb837f0254301396dabefa9847be" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a6e63817a11e3cd53a2fcf7104d853b21" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1ae5dc855b114b682b9c539b4ba60d7c87" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1af30be87590acccb6ce7157ce2244e182" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1aab7e9cb818ca49a91301cb7cd7a89e43" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a131daa736323a89d0e1c8c5c3c8c8408" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a1b010f7b47026ff7ea2fe226fe19748e" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a5ee2f0a3479a7c05d820e7aa33aad41d" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a497c3162a2df06c3d589c7e89b254e51" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a9c40b8f42f91ea7e952c28ba4c9f04c9" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a3818a65b9b966890fb413553aa63e8d5" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1ad3c7235fd07739c3234e2e01044db777" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1aa580424b7ce0f88c0e4687489dfc02dd" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a255d049e4e7504d950d7d5c3aa88b123" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a736af68fff04dcf3e65d2cafe9a94208" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1aaafc77158efa32b43c50a4d18414a0e2" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a99c37898eb0dffd137ad1df69c44cc96" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a90447039b725dc6f517258415fd8684f" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a1ddef13a05f27efc4f924b996039add1" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a6f15eb837f0254301396dabefa9847be" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a6e63817a11e3cd53a2fcf7104d853b21" prot="protected" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1ae5dc855b114b682b9c539b4ba60d7c87" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1af30be87590acccb6ce7157ce2244e182" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1aab7e9cb818ca49a91301cb7cd7a89e43" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a131daa736323a89d0e1c8c5c3c8c8408" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a1b010f7b47026ff7ea2fe226fe19748e" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a5ee2f0a3479a7c05d820e7aa33aad41d" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a497c3162a2df06c3d589c7e89b254e51" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a9c40b8f42f91ea7e952c28ba4c9f04c9" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a3818a65b9b966890fb413553aa63e8d5" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1ad3c7235fd07739c3234e2e01044db777" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1aa580424b7ce0f88c0e4687489dfc02dd" prot="public" virt="non-virtual"><scope>YAPFLIP</scope><name>YAPPredicate</name></member>
      <member refid="classYAPProp_1a5c6ec2f85493ee40cd1d06d51e56d90d" prot="public" virt="virtual"><scope>YAPFLIP</scope><name>~YAPProp</name></member>
      <member refid="classYAPProp_1a5c6ec2f85493ee40cd1d06d51e56d90d" prot="public" virt="virtual"><scope>YAPFLIP</scope><name>~YAPProp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
