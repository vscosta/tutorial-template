<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classarray_22" kind="predicate" language="Prolog" prot="public">
    <compoundname>array/2</compoundname>
    <briefdescription>
<para><bold>array</bold>( +Name, +Size ) </para>
    </briefdescription>
    <detaileddescription>
<para>Creates a new dynamic array The array is allocated in the global stack (or heap) Elements can be any term.xs</para>
<para>The <emphasis>Size</emphasis> must evaluate to an integer The <emphasis>Name</emphasis> may be either an atom (named array) or an unbound variable (anonymous array)</para>
<para>Dynamic arrays are just a way to refer compound terms Hence, space for the array is recovered automatically on backtracking </para>
    </detaileddescription>
    <location file="pl/arrays.yap" line="1" column="1" bodyfile="pl/arrays.yap" bodystart="1" bodyend="-1"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
