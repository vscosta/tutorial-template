<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="args_8c" kind="file" language="C++">
    <compoundname>args.c</compoundname>
    <includes refid="Yap_8h" local="yes">Yap.h</includes>
    <includes refid="Yatom_8h" local="yes">Yatom.h</includes>
    <includes refid="amiops_8h" local="yes">amiops.h</includes>
    <incdepgraph>
      <node id="1">
        <label>C/args.c</label>
        <link refid="args_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Atoms.h</label>
        <link refid="Atoms_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>Regs.h</label>
        <link refid="Regs_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ScannerTypes.h</label>
        <link refid="ScannerTypes_8h_source"/>
      </node>
      <node id="27">
        <label>TermExt.h</label>
        <link refid="TermExt_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Yap.h</label>
        <link refid="Yap_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>YapCompoundTerm.h</label>
        <link refid="YapCompoundTerm_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>YapFlags.h</label>
        <link refid="YapFlags_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>YapGFlagInfo.h</label>
        <link refid="YapGFlagInfo_8h"/>
      </node>
      <node id="36">
        <label>YapHandles.h</label>
        <link refid="YapHandles_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>YapHeap.h</label>
        <link refid="YapHeap_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>YapLFlagInfo.h</label>
        <link refid="YapLFlagInfo_8h"/>
      </node>
      <node id="26">
        <label>YapOpcodes.h</label>
        <link refid="YapOpcodes_8h_source"/>
      </node>
      <node id="35">
        <label>YapSignals.h</label>
        <link refid="YapSignals_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>YapTags.h</label>
        <link refid="YapTags_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>YapText.h</label>
        <link refid="YapText_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>Yapproto.h</label>
        <link refid="Yapproto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>Yatom.h</label>
        <link refid="Yatom_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>alloc.h</label>
        <link refid="alloc_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>amidefs.h</label>
        <link refid="amidefs_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>amiops.h</label>
        <link refid="amiops_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>arrays.h</label>
        <link refid="arrays_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>corout.h</label>
        <link refid="corout_8h_source"/>
      </node>
      <node id="42">
        <label>generated/h0globals.h</label>
        <link refid="h0globals_8h_source"/>
      </node>
      <node id="41">
        <label>generated/h0struct.h</label>
        <link refid="h0struct_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>generated/hlocals.h</label>
        <link refid="hlocals_8h_source"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>generated/tatoms.h</label>
        <link refid="tatoms_8h_source"/>
      </node>
      <node id="34">
        <label>gprof.h</label>
        <link refid="gprof_8h_source"/>
      </node>
      <node id="5">
        <label>inline-only.h</label>
        <link refid="inline-only_8h_source"/>
      </node>
      <node id="44">
        <label>locals.h</label>
        <link refid="locals_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>nolocks.h</label>
        <link refid="nolocks_8h_source"/>
      </node>
      <node id="19">
        <label>threads.h</label>
        <link refid="threads_8h_source"/>
      </node>
      <node id="49">
        <label>GitSHA1.h</label>
        <link refid="GitSHA1_8h_source"/>
      </node>
      <node id="6">
        <label>YapDefs.h</label>
        <link refid="YapDefs_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>YapError.h</label>
        <link refid="YapError_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>YapErrors.h</label>
        <link refid="YapErrors_8h"/>
      </node>
      <node id="18">
        <label>YapFormat.h</label>
        <link refid="YapFormat_8h_source"/>
      </node>
      <node id="20">
        <label>YapInit.h</label>
        <link refid="YapInit_8h"/>
      </node>
      <node id="9">
        <label>YapTerm.h</label>
        <link refid="YapTerm_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>YapUTF8.h</label>
        <link refid="YapUTF8_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>../os/encoding.h</label>
        <link refid="encoding_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>YapConfig.h</label>
      </node>
      <node id="13">
        <label>YapIOConfig.h</label>
      </node>
      <node id="10">
        <label>YapTermConfig.h</label>
      </node>
      <node id="11">
        <label>config.h</label>
      </node>
      <node id="45">
        <label>dlocals.h</label>
      </node>
      <node id="28">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="14">
        <label>string.h</label>
      </node>
      <node id="52">
        <label>utf8proc.h</label>
      </node>
      <node id="22">
        <label>wchar.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__PredicateArgsC_1gab78a7dd1935dcf76cd2bf7112e701486" prot="public" static="no">
        <name>YAP_XARGINFO</name>
        <param><defname>Error</defname></param>
        <param><defname>Message</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/args.c" line="54" column="9" bodyfile="C/args.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PredicateArgsC_1gab5d0f39232f03c54390591fea37d34f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx__el" kindref="compound">xarg</ref> *</type>
        <definition>static xarg * matchKey</definition>
        <argsstring>(Atom key, xarg *e0, int n, const param_t *def)</argsstring>
        <name>matchKey</name>
        <param>
          <type><ref refid="structAtomEntryStruct" kindref="compound">Atom</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="structx__el" kindref="compound">xarg</ref> *</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="structstruct__param" kindref="compound">param_t</ref> *</type>
          <declname>def</declname>
        </param>
        <briefdescription>
<para>Scan a list of arguments and output results to a pre-processed vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>listl</parametername>
</parameternamelist>
<parameterdescription>
<para>input list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>def</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter definition</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>all arguments, some of them set, some of them not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/args.c" line="27" column="13" bodyfile="C/args.c" bodystart="27" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="group__PredicateArgsC_1ga164c5dcb2f73a27da03b88b26d4c07ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Yap_ArgKey</definition>
        <argsstring>(Atom key, const param_t *def, int n)</argsstring>
        <name>Yap_ArgKey</name>
        <param>
          <type><ref refid="structAtomEntryStruct" kindref="compound">Atom</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="structstruct__param" kindref="compound">param_t</ref> *</type>
          <declname>def</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Returns the index of an argument key, or -1 if not found. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/args.c" line="43" column="5" bodyfile="C/args.c" bodystart="43" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="group__PredicateArgsC_1gaab0554278f0e5008e8b9818fb4648787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx__el" kindref="compound">xarg</ref> *</type>
        <definition>xarg * Yap_ArgListToVector__</definition>
        <argsstring>(const char *file, const char *function, int lineno, Term listl, const param_t *def, int n, xarg *a, yap_error_number err)</argsstring>
        <name>Yap_ArgListToVector__</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>listl</declname>
        </param>
        <param>
          <type>const <ref refid="structstruct__param" kindref="compound">param_t</ref> *</type>
          <declname>def</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="structx__el" kindref="compound">xarg</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>yap_error_number</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/args.c" line="57" column="6" bodyfile="C/args.c" bodystart="57" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="group__PredicateArgsC_1ga6ac80ce753fd966f0b5cc03393ae732c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx__el" kindref="compound">xarg</ref> *</type>
        <definition>static xarg * matchKey2</definition>
        <argsstring>(Atom key, xarg *e0, int n, const param2_t *def)</argsstring>
        <name>matchKey2</name>
        <param>
          <type><ref refid="structAtomEntryStruct" kindref="compound">Atom</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="structx__el" kindref="compound">xarg</ref> *</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="structstruct__param2" kindref="compound">param2_t</ref> *</type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/args.c" line="142" column="13" bodyfile="C/args.c" bodystart="142" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="group__PredicateArgsC_1gacdc74f0880d394beebfa0c594b853828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structx__el" kindref="compound">xarg</ref> *</type>
        <definition>xarg * Yap_ArgList2ToVector__</definition>
        <argsstring>(const char *file, const char *function, int lineno, Term listl, const param2_t *def, int n, yap_error_number err)</argsstring>
        <name>Yap_ArgList2ToVector__</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>listl</declname>
        </param>
        <param>
          <type>const <ref refid="structstruct__param2" kindref="compound">param2_t</ref> *</type>
          <declname>def</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>yap_error_number</type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>Yap_ArgList2ToVector is much the same as before, but assumes parameters also have something called a scope. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/args.c" line="156" column="6" bodyfile="C/args.c" bodystart="156" bodyend="235"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C/args.c"/>
  </compounddef>
</doxygen>
