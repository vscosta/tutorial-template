<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classraakau_23" kind="predicate" language="Prolog" prot="public">
    <compoundname>raakau/3</compoundname>
    <briefdescription>
<para><bold>raakau</bold>(Vertices, InitialValue, Tree) </para>
    </briefdescription>
    <detaileddescription>
<para>NOT USED AFTER ALL takes an <emphasis>ordered</emphasis> list of verticies and an initial value, and makes a very special sort of tree out of them, which represents a function sending each vertex to the initial value Note that in the third clause for raakau/6 Z can never be 0, this means that it doesn&apos;t matter <emphasis>what</emphasis> &quot;greatest member&quot; is reported for empty trees </para>
    </detaileddescription>
    <location file="library/ugraphs.yap" line="2" column="1" bodyfile="library/ugraphs.yap" bodystart="2" bodyend="-1"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
