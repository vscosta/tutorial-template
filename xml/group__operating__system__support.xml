<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="group__operating__system__support" kind="group">
    <compoundname>operating_system_support</compoundname>
    <title>Operating System Functionality</title>
    <innerclass refid="classdatime_26" prot="public">datime/6</innerclass>
    <innerclass refid="classdelete__file_22" prot="public">delete_file/2</innerclass>
    <innerclass refid="classrename__file_22" prot="public">rename_file/2</innerclass>
    <innerclass refid="classenviron_22" prot="public">environ/2</innerclass>
    <innerclass refid="classexec_23" prot="public">exec/3</innerclass>
    <innerclass refid="classpopen_23" prot="public">popen/3</innerclass>
    <innerclass refid="classshell_20" prot="private">shell/0</innerclass>
    <innerclass refid="classshell_21" prot="public">shell/1</innerclass>
    <innerclass refid="classshell_22" prot="public">shell/2</innerclass>
    <innerclass refid="classsystem_21" prot="public">system/1</innerclass>
    <innerclass refid="classsystem_20" prot="private">system/0</innerclass>
    <innerclass refid="classsystem_22" prot="public">system/2</innerclass>
    <innerclass refid="classhost__name_21" prot="public">host_name/1</innerclass>
    <innerclass refid="classhost__id_21" prot="public">host_id/1</innerclass>
    <innerclass refid="classpid_21" prot="public">pid/1</innerclass>
    <innerclass refid="classkill_22" prot="public">kill/2</innerclass>
    <innerclass refid="classmktemp_22" prot="public">mktemp/2</innerclass>
    <innerclass refid="classtmpnam_21" prot="public">tmpnam/1</innerclass>
    <innerclass refid="classtemp__file_22" prot="public">temp_file/2</innerclass>
    <innerclass refid="classtmpdir_21" prot="public">tmpdir/1</innerclass>
    <innerclass refid="classread__link_23" prot="public">read_link/3</innerclass>
    <innerclass refid="classcopy__file_22" prot="public">copy_file/2</innerclass>
    <innerclass refid="classdirectory__map_22" prot="public">directory_map/2</innerclass>
    <innerclass refid="classmktime_22" prot="public">mktime/2</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__operating__system__support_1ga8385fa60c6b5df9db9c883f6ad2777e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>X_API void</type>
        <definition>X_API void init_sys</definition>
        <argsstring>(void)</argsstring>
        <name>init_sys</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="library/system/sys.c" line="95" column="12" declfile="library/system/sys.c" declline="95" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__operating__system__support_1ga07b1f969ff7ab3c5d6b1ce327e6f2575" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>YAP_Bool</type>
        <definition>static YAP_Bool sysmktime</definition>
        <argsstring>(void)</argsstring>
        <name>sysmktime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="library/system/sys.c" line="130" column="17" bodyfile="library/system/sys.c" bodystart="130" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="group__operating__system__support_1ga404731f1005ad49ecd4769a79319242a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>YAP_Bool</type>
        <definition>static YAP_Bool datime</definition>
        <argsstring>(void)</argsstring>
        <name>datime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="library/system/sys.c" line="192" column="17" bodyfile="library/system/sys.c" bodystart="192" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="group__operating__system__support_1ga5d542c54a7a6a3ab4d38084bb1a0ea47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>YAP_Bool</type>
        <definition>static YAP_Bool p_unlink</definition>
        <argsstring>(void)</argsstring>
        <name>p_unlink</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="library/system/sys.c" line="228" column="17" bodyfile="library/system/sys.c" bodystart="228" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="group__operating__system__support_1gab40a17f23fceefb422b8a94eb4e9279b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>YAP_Bool</type>
        <definition>static YAP_Bool p_rmdir</definition>
        <argsstring>(void)</argsstring>
        <name>p_rmdir</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="library/system/sys.c" line="242" column="17" bodyfile="library/system/sys.c" bodystart="242" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="group__operating__system__support_1ga644b12ed07eb41ba4294e643eab20c64" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>YAP_Bool</type>
        <definition>static YAP_Bool rename_file</definition>
        <argsstring>(void)</argsstring>
        <name>rename_file</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="library/system/sys.c" line="255" column="17" bodyfile="library/system/sys.c" bodystart="255" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="group__operating__system__support_1ga6ed1c3a0ddfcd6c249bf1b6e7e7f4b58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>YAP_Bool</type>
        <definition>YAP_Bool OSCopyFile</definition>
        <argsstring>(void)</argsstring>
        <name>OSCopyFile</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>see <ulink url="https://stackoverflow.com/@ref">https://stackoverflow.com/@ref</ulink> questions/2180079 /how-can-i-copy-a-file-on-unix-using-c for the original code </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="library/system/sys.c" line="275" column="11" bodyfile="library/system/sys.c" bodystart="275" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="group__operating__system__support_1ga1b1b0f1d79d9e9f54cba0ffa015400dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>YAP_Bool</type>
        <definition>static YAP_Bool read_link</definition>
        <argsstring>(void)</argsstring>
        <name>read_link</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="library/system/sys.c" line="310" column="17" bodyfile="library/system/sys.c" bodystart="310" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="group__operating__system__support_1ga894ebebf2299e8d8263754c973131b29" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>YAP_Bool</type>
        <definition>static YAP_Bool dir_separator</definition>
        <argsstring>(void)</argsstring>
        <name>dir_separator</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="library/system/sys.c" line="329" column="17" bodyfile="library/system/sys.c" bodystart="329" bodyend="331"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__operating__system__support_1ga6821bafc3c88dfb2e433a095df9940c6" prot="public" static="no">
        <name>BUF_SIZE</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="library/system/sys.c" line="225" column="9" bodyfile="library/system/sys.c" bodystart="225" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Portable Interaction with the OS, be it Unix, Linux, OSX, or Windows. </para>
    </briefdescription>
    <detaileddescription>
<para>Support for Operating System Interfacing.</para>
<para><itemizedlist>
<listitem></listitem></itemizedlist>
</para>
<para>YAP provides a library of system utilities compatible with the SICStus Prolog system library This library extends and to some point complements the functionality of Operating System access routines The library includes Unix/Linux and Win32 <computeroutput>C</computeroutput> code They are available through the <computeroutput>use_module(library(system))</computeroutput> command</para>
    </detaileddescription>
  </compounddef>
</doxygen>
