<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classYAPConjunctiveTerm" kind="class" language="C++" prot="public">
    <compoundname>YAPConjunctiveTerm</compoundname>
    <basecompoundref refid="classYAPTerm" prot="public" virt="non-virtual">YAPTerm</basecompoundref>
    <basecompoundref refid="classYAPTerm" prot="public" virt="non-virtual">YAPTerm</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classYAPConjunctiveTerm_1a4809dee401256fd91222a7b294d99178" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>YAPConjunctiveTerm</definition>
        <argsstring>()</argsstring>
        <name>YAPConjunctiveTerm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">the</parametername>
</parameternamelist>
<parameterdescription>
<para>term </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CXX/tmp/yapt.hh" line="575" column="3" bodyfile="CXX/tmp/yapt.hh" bodystart="575" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="classYAPConjunctiveTerm_1ade92be47960b11dc677a441c6d2c1fe9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>YAPConjunctiveTerm</definition>
        <argsstring>(Term t0)</argsstring>
        <name>YAPConjunctiveTerm</name>
        <param>
          <type>Term</type>
          <declname>t0</declname>
        </param>
        <briefdescription>
<para>Create an empty list term. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">the</parametername>
</parameternamelist>
<parameterdescription>
<para>term </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CXX/tmp/yapt.hh" line="579" column="3" bodyfile="CXX/tmp/yapt.hh" bodystart="579" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="classYAPConjunctiveTerm_1a48c19716dff750a63af330fa7d6cc46a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>YAPConjunctiveTerm</definition>
        <argsstring>(const Term ts[], size_t n)</argsstring>
        <name>YAPConjunctiveTerm</name>
        <param>
          <type>const Term</type>
          <declname>ts</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Create a list term out of an array of terms. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">the</parametername>
</parameternamelist>
<parameterdescription>
<para>array of terms </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>number smaller or equal to the length of the array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CXX/tmp/yapt.hh" line="584" column="3" bodyfile="CXX/yapi.cpp" bodystart="609" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="classYAPConjunctiveTerm_1a4bc4b60129874b7061ebb7cca14e7413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>YAPConjunctiveTerm</definition>
        <argsstring>(std::vector&lt; Term &gt;)</argsstring>
        <name>YAPConjunctiveTerm</name>
        <param>
          <type>std::vector&lt; Term &gt;</type>
          <defname>ts</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">the</parametername>
</parameternamelist>
<parameterdescription>
<para>array of terms </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CXX/tmp/yapt.hh" line="587" column="3" bodyfile="CXX/yapi.cpp" bodystart="575" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="classYAPConjunctiveTerm_1a247bd0fb9923075af341c93f52ff7b9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t length</definition>
        <argsstring>()</argsstring>
        <name>length</name>
        <briefdescription>
<para>Return the number of elements in a list term. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CXX/tmp/yapt.hh" line="590" column="10" bodyfile="CXX/tmp/yapt.hh" bodystart="590" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="classYAPConjunctiveTerm_1a8a696a0900dcb3434b4f9158002b2a78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Term &amp;</type>
        <definition>Term &amp; operator[]</definition>
        <argsstring>(size_t n)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Extract the nth element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CXX/tmp/yapt.hh" line="601" column="8" bodyfile="CXX/yapi.cpp" bodystart="414" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classYAPConjunctiveTerm_1a59cde371acf84bcb1dd32e83f7779e41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Term</type>
        <definition>Term car</definition>
        <argsstring>()</argsstring>
        <name>car</name>
        <briefdescription>
<para>Extract the first element of a listconjunction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">the</parametername>
</parameternamelist>
<parameterdescription>
<para>conjunction </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CXX/tmp/yapt.hh" line="605" column="8" bodyfile="CXX/yapi.cpp" bodystart="555" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="classYAPConjunctiveTerm_1ad587ee7046a7e8d9c553505bb631837e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Term</type>
        <definition>Term cdr</definition>
        <argsstring>()</argsstring>
        <name>cdr</name>
        <briefdescription>
<para>Extract the tail elements of a conjunction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">the</parametername>
</parameternamelist>
<parameterdescription>
<para>list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CXX/tmp/yapt.hh" line="609" column="8" bodyfile="CXX/yapi.cpp" bodystart="565" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="classYAPConjunctiveTerm_1a4809dee401256fd91222a7b294d99178" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>YAPConjunctiveTerm</definition>
        <argsstring>()</argsstring>
        <name>YAPConjunctiveTerm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">the</parametername>
</parameternamelist>
<parameterdescription>
<para>term </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CXX/yapt.hh" line="593" column="3" bodyfile="CXX/yapt.hh" bodystart="593" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="classYAPConjunctiveTerm_1ade92be47960b11dc677a441c6d2c1fe9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>YAPConjunctiveTerm</definition>
        <argsstring>(Term t0)</argsstring>
        <name>YAPConjunctiveTerm</name>
        <param>
          <type>Term</type>
          <declname>t0</declname>
        </param>
        <briefdescription>
<para>Create an empty list term. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">the</parametername>
</parameternamelist>
<parameterdescription>
<para>term </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CXX/yapt.hh" line="597" column="3" bodyfile="CXX/yapt.hh" bodystart="597" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="classYAPConjunctiveTerm_1a48c19716dff750a63af330fa7d6cc46a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>YAPConjunctiveTerm</definition>
        <argsstring>(const Term ts[], size_t n)</argsstring>
        <name>YAPConjunctiveTerm</name>
        <param>
          <type>const Term</type>
          <declname>ts</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Create a list term out of an array of terms. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">the</parametername>
</parameternamelist>
<parameterdescription>
<para>array of terms </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>number smaller or equal to the length of the array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CXX/yapt.hh" line="602" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classYAPConjunctiveTerm_1a4bc4b60129874b7061ebb7cca14e7413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>YAPConjunctiveTerm</definition>
        <argsstring>(std::vector&lt; Term &gt;)</argsstring>
        <name>YAPConjunctiveTerm</name>
        <param>
          <type>std::vector&lt; Term &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">the</parametername>
</parameternamelist>
<parameterdescription>
<para>array of terms </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CXX/yapt.hh" line="605" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classYAPConjunctiveTerm_1a247bd0fb9923075af341c93f52ff7b9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t length</definition>
        <argsstring>()</argsstring>
        <name>length</name>
        <briefdescription>
<para>Return the number of elements in a list term. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CXX/yapt.hh" line="608" column="10" bodyfile="CXX/yapt.hh" bodystart="608" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="classYAPConjunctiveTerm_1a8a696a0900dcb3434b4f9158002b2a78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Term &amp;</type>
        <definition>Term &amp; operator[]</definition>
        <argsstring>(size_t n)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Extract the nth element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CXX/yapt.hh" line="619" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classYAPConjunctiveTerm_1a59cde371acf84bcb1dd32e83f7779e41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Term</type>
        <definition>Term car</definition>
        <argsstring>()</argsstring>
        <name>car</name>
        <briefdescription>
<para>Extract the first element of a listconjunction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">the</parametername>
</parameternamelist>
<parameterdescription>
<para>conjunction </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CXX/yapt.hh" line="623" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classYAPConjunctiveTerm_1ad587ee7046a7e8d9c553505bb631837e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Term</type>
        <definition>Term cdr</definition>
        <argsstring>()</argsstring>
        <name>cdr</name>
        <briefdescription>
<para>Extract the tail elements of a conjunction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">the</parametername>
</parameternamelist>
<parameterdescription>
<para>list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CXX/yapt.hh" line="627" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>YAPConjunctiveTerm</label>
        <link refid="classYAPConjunctiveTerm"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>YAPTerm</label>
        <link refid="classYAPTerm"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>YAPConjunctiveTerm</label>
        <link refid="classYAPConjunctiveTerm"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>YAPTerm</label>
        <link refid="classYAPTerm"/>
      </node>
    </collaborationgraph>
    <location file="CXX/tmp/yapt.hh" line="570" column="1" bodyfile="CXX/tmp/yapt.hh" bodystart="570" bodyend="610"/>
    <listofallmembers>
      <member refid="classYAPTerm_1ab113801eac8ec2c37f7d69f86431a9c2" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>arg</name></member>
      <member refid="classYAPTerm_1ab113801eac8ec2c37f7d69f86431a9c2" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>arg</name></member>
      <member refid="classYAPTerm_1abb9a297c2305f37dcbc7ec1f8972fe3c" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>arity</name></member>
      <member refid="classYAPTerm_1abb9a297c2305f37dcbc7ec1f8972fe3c" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>arity</name></member>
      <member refid="classYAPTerm_1aacf1aea1fa6911abfa3557843d0a0c8d" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>bind</name></member>
      <member refid="classYAPTerm_1a7e9c53c62e12aea66b490d43b556a683" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>bind</name></member>
      <member refid="classYAPTerm_1aacf1aea1fa6911abfa3557843d0a0c8d" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>bind</name></member>
      <member refid="classYAPTerm_1a7e9c53c62e12aea66b490d43b556a683" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>bind</name></member>
      <member refid="classYAPConjunctiveTerm_1a59cde371acf84bcb1dd32e83f7779e41" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>car</name></member>
      <member refid="classYAPConjunctiveTerm_1a59cde371acf84bcb1dd32e83f7779e41" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>car</name></member>
      <member refid="classYAPConjunctiveTerm_1ad587ee7046a7e8d9c553505bb631837e" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>cdr</name></member>
      <member refid="classYAPConjunctiveTerm_1ad587ee7046a7e8d9c553505bb631837e" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>cdr</name></member>
      <member refid="classYAPTerm_1a0e4a83a87ff58e403d8c4a4e66e5b019" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>deepCopy</name></member>
      <member refid="classYAPTerm_1a0e4a83a87ff58e403d8c4a4e66e5b019" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>deepCopy</name></member>
      <member refid="classYAPTerm_1ad68ceb75dac15df87f18353bf4e901ee" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>exactlyEqual</name></member>
      <member refid="classYAPTerm_1ad68ceb75dac15df87f18353bf4e901ee" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>exactlyEqual</name></member>
      <member refid="classYAPTerm_1aae36bb12ce7dab29e680048725cfb905" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>getArg</name></member>
      <member refid="classYAPTerm_1a50b19125fd11c17e65dc2c7d7c0f232e" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>getArg</name></member>
      <member refid="classYAPTerm_1a7e2daafeb40df9547e1b3cc3d1ac0e96" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>gt</name></member>
      <member refid="classYAPTerm_1a7e2daafeb40df9547e1b3cc3d1ac0e96" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>gt</name></member>
      <member refid="classYAPTerm_1a84518c0718e6650566b120ca5b85db02" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>handle</name></member>
      <member refid="classYAPTerm_1a84518c0718e6650566b120ca5b85db02" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>handle</name></member>
      <member refid="classYAPTerm_1a2974e0128f95576a99fc78ed38ae8085" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>hashTerm</name></member>
      <member refid="classYAPTerm_1a2974e0128f95576a99fc78ed38ae8085" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>hashTerm</name></member>
      <member refid="classYAPTerm_1a1b2ed9bd9891b4f7f8c58783d9425d71" prot="protected" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>hdl</name></member>
      <member refid="classYAPTerm_1a0e887830311eba8605002670b70699ed" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>initialized</name></member>
      <member refid="classYAPTerm_1a0e887830311eba8605002670b70699ed" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>initialized</name></member>
      <member refid="classYAPTerm_1a939025805a96e3fd93a61884a3b217f2" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isAppl</name></member>
      <member refid="classYAPTerm_1a939025805a96e3fd93a61884a3b217f2" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isAppl</name></member>
      <member refid="classYAPTerm_1a3fa5279dfa0c98b5272459ec64151325" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isAtom</name></member>
      <member refid="classYAPTerm_1a3fa5279dfa0c98b5272459ec64151325" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isAtom</name></member>
      <member refid="classYAPTerm_1aff847477b25724ebb960ed3445d51400" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isCompound</name></member>
      <member refid="classYAPTerm_1aff847477b25724ebb960ed3445d51400" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isCompound</name></member>
      <member refid="classYAPTerm_1aaf315cdc04d99d6badb9614bbf7197e2" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isFloat</name></member>
      <member refid="classYAPTerm_1aaf315cdc04d99d6badb9614bbf7197e2" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isFloat</name></member>
      <member refid="classYAPTerm_1ab11a72e64b950c3001b9fe20fc34682b" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isGround</name></member>
      <member refid="classYAPTerm_1ab11a72e64b950c3001b9fe20fc34682b" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isGround</name></member>
      <member refid="classYAPTerm_1a16626d5bc393ef2636260ee174e1a424" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isInteger</name></member>
      <member refid="classYAPTerm_1a16626d5bc393ef2636260ee174e1a424" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isInteger</name></member>
      <member refid="classYAPTerm_1a42e33ecd59575fc1ce1b1f84df6e256e" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isList</name></member>
      <member refid="classYAPTerm_1a42e33ecd59575fc1ce1b1f84df6e256e" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isList</name></member>
      <member refid="classYAPTerm_1a21e0b1a710668c121da5b55cb86e626a" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isPair</name></member>
      <member refid="classYAPTerm_1a21e0b1a710668c121da5b55cb86e626a" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isPair</name></member>
      <member refid="classYAPTerm_1aca0e42cb6a5f3e3745ea01e86c2c13bc" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isString</name></member>
      <member refid="classYAPTerm_1aca0e42cb6a5f3e3745ea01e86c2c13bc" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isString</name></member>
      <member refid="classYAPTerm_1a9ea7108484abde8985bee0ab1d807360" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isVar</name></member>
      <member refid="classYAPTerm_1a9ea7108484abde8985bee0ab1d807360" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>isVar</name></member>
      <member refid="classYAPConjunctiveTerm_1a247bd0fb9923075af341c93f52ff7b9b" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>length</name></member>
      <member refid="classYAPConjunctiveTerm_1a247bd0fb9923075af341c93f52ff7b9b" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>length</name></member>
      <member refid="classYAPTerm_1a1a37a59d4c80fc3c2606fdedeeb4a218" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>mk</name></member>
      <member refid="classYAPTerm_1a1a37a59d4c80fc3c2606fdedeeb4a218" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>mk</name></member>
      <member refid="classYAPTerm_1a5d085ea9020eec5b07e44d3a03a7bdf4" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>numberVars</name></member>
      <member refid="classYAPTerm_1a5d085ea9020eec5b07e44d3a03a7bdf4" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>numberVars</name></member>
      <member refid="classYAPConjunctiveTerm_1a8a696a0900dcb3434b4f9158002b2a78" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>operator[]</name></member>
      <member refid="classYAPConjunctiveTerm_1a8a696a0900dcb3434b4f9158002b2a78" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>operator[]</name></member>
      <member refid="classYAPTerm_1a34fc41ad9a79d1823f9278ed78337bc4" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>pop_t</name></member>
      <member refid="classYAPTerm_1a34fc41ad9a79d1823f9278ed78337bc4" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>pop_t</name></member>
      <member refid="classYAPTerm_1a47b5bd780cb7d4cd7fa4578c295fb838" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>put</name></member>
      <member refid="classYAPTerm_1a47b5bd780cb7d4cd7fa4578c295fb838" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>put</name></member>
      <member refid="classYAPTerm_1ad20897c5c8bd47f5d4005989bead0e55" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>reset</name></member>
      <member refid="classYAPTerm_1a69fffe0c41e001d6fdd0840f61a56df4" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>tag</name></member>
      <member refid="classYAPTerm_1a69fffe0c41e001d6fdd0840f61a56df4" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>tag</name></member>
      <member refid="classYAPTerm_1ab7852318b7495ccd6362d74dd6e5c652" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>term</name></member>
      <member refid="classYAPTerm_1ab7852318b7495ccd6362d74dd6e5c652" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>term</name></member>
      <member refid="classYAPTerm_1ad1ea0d530c1ceea2efc1661e83c6ccb7" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>text</name></member>
      <member refid="classYAPTerm_1ad1ea0d530c1ceea2efc1661e83c6ccb7" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>text</name></member>
      <member refid="classYAPTerm_1a5373f97ad03301a4eb97808b6c72e12d" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>unifiable</name></member>
      <member refid="classYAPTerm_1a5373f97ad03301a4eb97808b6c72e12d" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>unifiable</name></member>
      <member refid="classYAPTerm_1ad10da53c46207ede9f418086ed153d5b" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>unify</name></member>
      <member refid="classYAPTerm_1ad10da53c46207ede9f418086ed153d5b" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>unify</name></member>
      <member refid="classYAPTerm_1aceaa99597084fe2049d5de67eb6c4cf1" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>variant</name></member>
      <member refid="classYAPTerm_1aceaa99597084fe2049d5de67eb6c4cf1" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>variant</name></member>
      <member refid="classYAPConjunctiveTerm_1a4809dee401256fd91222a7b294d99178" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPConjunctiveTerm</name></member>
      <member refid="classYAPConjunctiveTerm_1ade92be47960b11dc677a441c6d2c1fe9" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPConjunctiveTerm</name></member>
      <member refid="classYAPConjunctiveTerm_1a48c19716dff750a63af330fa7d6cc46a" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPConjunctiveTerm</name></member>
      <member refid="classYAPConjunctiveTerm_1a4bc4b60129874b7061ebb7cca14e7413" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPConjunctiveTerm</name></member>
      <member refid="classYAPConjunctiveTerm_1a4809dee401256fd91222a7b294d99178" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPConjunctiveTerm</name></member>
      <member refid="classYAPConjunctiveTerm_1ade92be47960b11dc677a441c6d2c1fe9" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPConjunctiveTerm</name></member>
      <member refid="classYAPConjunctiveTerm_1a48c19716dff750a63af330fa7d6cc46a" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPConjunctiveTerm</name></member>
      <member refid="classYAPConjunctiveTerm_1a4bc4b60129874b7061ebb7cca14e7413" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPConjunctiveTerm</name></member>
      <member refid="classYAPTerm_1a0238fde4b780fb0f67ec7c3a1440edba" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPTerm</name></member>
      <member refid="classYAPTerm_1a84647bb1f2e20f0eda6fb1782800e525" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPTerm</name></member>
      <member refid="classYAPTerm_1a5b95fd101b73207682463ea473b6d2c0" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPTerm</name></member>
      <member refid="classYAPTerm_1a8a604a0dd3551e7eac340ff75c06ac16" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPTerm</name></member>
      <member refid="classYAPTerm_1a0238fde4b780fb0f67ec7c3a1440edba" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPTerm</name></member>
      <member refid="classYAPTerm_1a84647bb1f2e20f0eda6fb1782800e525" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPTerm</name></member>
      <member refid="classYAPTerm_1a5b95fd101b73207682463ea473b6d2c0" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPTerm</name></member>
      <member refid="classYAPTerm_1a8a604a0dd3551e7eac340ff75c06ac16" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPTerm</name></member>
      <member refid="classYAPTerm_1aa7618a4103a2b970e30a608516eefb3d" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPTerm</name></member>
      <member refid="classYAPTerm_1a9e2cd85e45ba4503adf7ae394d2d74ee" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPTerm</name></member>
      <member refid="classYAPTerm_1ab4b05d43c5d28b981566dc5d82e7f8a6" prot="public" virt="non-virtual"><scope>YAPConjunctiveTerm</scope><name>YAPTerm</name></member>
      <member refid="classYAPTerm_1af294a9767b1ac6cb6519b871ea641b46" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>~YAPTerm</name></member>
      <member refid="classYAPTerm_1af294a9767b1ac6cb6519b871ea641b46" prot="public" virt="virtual"><scope>YAPConjunctiveTerm</scope><name>~YAPTerm</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
