<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classbetween_23" kind="class" language="Prolog" prot="public">
    <compoundname>between/3</compoundname>
    <briefdescription>
<para><bold>between</bold>(+ Low:int, + High:int, ? Value:int) </para>
    </briefdescription>
    <detaileddescription>
<para>properties: nondeterministic</para>
<para><emphasis>Low</emphasis> and <emphasis>High</emphasis> are integers, <emphasis>High</emphasis> &gt;= <emphasis>Low</emphasis> If <emphasis>Value</emphasis> is an integer, <emphasis>Low</emphasis> =&lt; <emphasis>Value</emphasis> =&lt; <emphasis>High</emphasis> When <emphasis>Value</emphasis> is a variable it is successively bound to all integers between <emphasis>Low</emphasis> and <emphasis>High</emphasis> If <emphasis>High</emphasis> is inf or infinite <ref refid="classbetween_23" kindref="compound">between/3</ref> is true iff <emphasis>Value</emphasis> &gt;= <emphasis>Low</emphasis>, a feature that is particularly interesting for generating integers from a certain value </para>
    </detaileddescription>
    <location file="/home/vsc/github/yap/C/eval.c" line="396" column="1" bodyfile="/home/vsc/github/yap/C/eval.c" bodystart="396" bodyend="-1"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
