<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classthread__peek__message_22" kind="predicate" language="Prolog" prot="public">
    <compoundname>thread_peek_message/2</compoundname>
    <briefdescription>
<para><bold>thread_peek_message</bold>(+ <emphasis>Queue</emphasis>, ? <emphasis>Term</emphasis>) </para>
    </briefdescription>
    <detaileddescription>
<para>As <ref refid="classthread__peek__message_21" kindref="compound">thread_peek_message/1</ref> , operating on a given queue It is allowed to peek into another thread&apos;s message queue, an operation that can be used to check whether a thread has swallowed a message sent to it</para>
<para>Explicit message queues are designed with the <emphasis>worker-pool</emphasis> model in mind, where multiple threads wait on a single queue and pick up the first goal to execute Below is a simple implementation where the workers execute arbitrary Prolog goals Note that this example provides no means to tell when all work is done This must be realised using additional synchronisation</para>
<para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">create_workers(</highlight><highlight class="keyword">+</highlight><highlight class="charliteral">Id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">+</highlight><highlight class="charliteral">N</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">%</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="charliteral">Create</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">create_workers<sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">create_workers<sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">create_workers<sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">create_workers<sp/></highlight><highlight class="charliteral">Id</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">create_workers<sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">create_workers<sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">create_workers<sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">create_workers.</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="stringliteral"></highlight><highlight class="normal">create_workers(</highlight><highlight class="charliteral">Id</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">N</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">:-</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">message_queue_create(</highlight><highlight class="charliteral">Id</highlight><highlight class="normal">),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">forall(between(</highlight><highlight class="vhldigit">1</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">N</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">_</highlight><highlight class="normal">),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread_create(do_work(</highlight><highlight class="charliteral">Id</highlight><highlight class="normal">),<sp/></highlight><highlight class="charliteral">_</highlight><highlight class="normal">,<sp/>[])).</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="stringliteral"></highlight><highlight class="normal">do_work(</highlight><highlight class="charliteral">Id</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">:-</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">do_work,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">thread_get_message(</highlight><highlight class="charliteral">Id</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">Goal</highlight><highlight class="normal">),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/><sp/><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">catch(</highlight><highlight class="charliteral">Goal</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">E</highlight><highlight class="normal">,<sp/>print_message(error,<sp/></highlight><highlight class="charliteral">E</highlight><highlight class="normal">))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">-&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">catch</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">print_message(error,<sp/>goal_failed(</highlight><highlight class="charliteral">Goal</highlight><highlight class="normal">,<sp/>worker(</highlight><highlight class="charliteral">Id</highlight><highlight class="normal">)))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fail.</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">work(</highlight><highlight class="keyword">+</highlight><highlight class="charliteral">Id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">+</highlight><highlight class="charliteral">Goal</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">%</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="charliteral">Post</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">work<sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">work<sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">work<sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">work<sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">work<sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">work<sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">work</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="stringliteral"></highlight><highlight class="normal">work(</highlight><highlight class="charliteral">Id</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">Goal</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">:-</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">thread_send_message(</highlight><highlight class="charliteral">Id</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">Goal</highlight><highlight class="normal">)</highlight><highlight class="keyword">.</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="pl/threads.yap" line="1" column="1" bodyfile="pl/threads.yap" bodystart="1" bodyend="-1"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
