<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="conceptimport__module_22" kind="concept">
    <compoundname>import_module/2</compoundname>
    <initializer>template&lt;&gt;
concept import_module/2 =     </initializer>
    <briefdescription>
<para><bold>import_module</bold>( +ImportingModule, +ExportingModule ) </para>
    </briefdescription>
    <detaileddescription>
<para>properties: deterministic</para>
<para>All exported predicates from <emphasis>ExportingModule</emphasis> are automatically available to the source module <emphasis>ImportModule</emphasis></para>
<para>This innovation was introduced by SWI-Prolog By default, modules only inherit from <computeroutput>prolog</computeroutput> and <computeroutput>user</computeroutput> This extension allows predicates in any module to inherit from <computeroutput>user</computeroutput> and other modules </para>
    </detaileddescription>
    <location file="pl/modules.yap" line="2" column="1"/>
  </compounddef>
</doxygen>
