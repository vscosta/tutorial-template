<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="group__Lambda" kind="group">
    <compoundname>Lambda</compoundname>
    <title>expressions</title>
    <briefdescription>
<para>This library provides lambda expressions to simplify higher order programming based on call/N. </para>
    </briefdescription>
    <detaileddescription>
<para>Lambda expressions are represented by ordinary Prolog terms There are two kinds of lambda expressions:</para>
<para><programlisting><codeline><highlight class="charliteral">Free</highlight><highlight class="stringliteral"></highlight><highlight class="normal"></highlight><highlight class="charliteral">X1</highlight><highlight class="keyword">^</highlight><highlight class="charliteral">X2</highlight><highlight class="keyword">^</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal"></highlight><highlight class="charliteral">XN</highlight><highlight class="keyword">^</highlight><highlight class="charliteral">Goal</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">\</highlight><highlight class="charliteral">X1</highlight><highlight class="keyword">^</highlight><highlight class="charliteral">X2</highlight><highlight class="keyword">^</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal"></highlight><highlight class="charliteral">XN</highlight><highlight class="keyword">^</highlight><highlight class="charliteral">Goal</highlight></codeline>
</programlisting></para>
<para>The second is a shorthand for <computeroutput>t+\X1^X2^..^XN^Goal</computeroutput></para>
<para><itemizedlist>
<listitem><para><emphasis>Xi</emphasis> are the parameters</para>
</listitem><listitem><para><emphasis>Goal</emphasis> is a goal or continuation Syntax note: Operators within Goal require parentheses due to the low precedence of the ^ operator</para>
</listitem><listitem><para><emphasis>Free</emphasis> contains variables that are valid outside the scope of the lambda expression They are thus free variables within</para>
</listitem></itemizedlist>
</para>
<para>All other variables of Goal are considered local variables They must not appear outside the lambda expression This restriction is currently not checked Violations may lead to unexpected bindings</para>
<para>In the following example the parentheses around X&gt;3 are necessary</para>
<para><programlisting><codeline><highlight class="keyword">?-</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">use_module(library(lambda)).</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">?-</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">use_module(library(apply)).</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">?-</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">maplist(</highlight><highlight class="keyword">\</highlight><highlight class="charliteral">X</highlight><highlight class="keyword">^</highlight><highlight class="normal">(</highlight><highlight class="charliteral">X</highlight><highlight class="keyword">&gt;</highlight><highlight class="vhldigit">3</highlight><highlight class="normal">),[</highlight><highlight class="vhldigit">4</highlight><highlight class="normal">,</highlight><highlight class="vhldigit">5</highlight><highlight class="normal">,</highlight><highlight class="vhldigit">9</highlight><highlight class="normal">]).</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="stringliteral"></highlight><highlight class="normal">maplist</highlight><highlight class="keyword">.</highlight></codeline>
</programlisting></para>
<para>In the following <emphasis>X</emphasis> is a variable that is shared by both instances of the lambda expression The second query illustrates the cooperation of continuations and lambdas The lambda expression is in this case a continuation expecting a further argument</para>
<para><programlisting><codeline><highlight class="keyword">?-</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">Xs</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">=</highlight><highlight class="normal"><sp/>[</highlight><highlight class="charliteral">A</highlight><highlight class="normal">,</highlight><highlight class="charliteral">B</highlight><highlight class="normal">],<sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">maplist(</highlight><highlight class="charliteral">X</highlight><highlight class="normal">+\</highlight><highlight class="charliteral">Y</highlight><highlight class="keyword">^</highlight><highlight class="normal">dif(</highlight><highlight class="charliteral">X</highlight><highlight class="normal">,</highlight><highlight class="charliteral">Y</highlight><highlight class="normal">),<sp/></highlight><highlight class="charliteral">Xs</highlight><highlight class="normal">).</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="charliteral">Xs</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">=</highlight><highlight class="normal"><sp/>[</highlight><highlight class="charliteral">A</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">B</highlight><highlight class="normal">],</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight><highlight class="normal">dif(</highlight><highlight class="charliteral">X</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">A</highlight><highlight class="normal">),</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight><highlight class="normal">dif(</highlight><highlight class="charliteral">X</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">B</highlight><highlight class="normal">).</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">?-</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">Xs</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">=</highlight><highlight class="normal"><sp/>[</highlight><highlight class="charliteral">A</highlight><highlight class="normal">,</highlight><highlight class="charliteral">B</highlight><highlight class="normal">],<sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">maplist(</highlight><highlight class="charliteral">X</highlight><highlight class="normal">+\dif(</highlight><highlight class="charliteral">X</highlight><highlight class="normal">),<sp/></highlight><highlight class="charliteral">Xs</highlight><highlight class="normal">).</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="charliteral">Xs</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">=</highlight><highlight class="normal"><sp/>[</highlight><highlight class="charliteral">A</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">B</highlight><highlight class="normal">],</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight><highlight class="normal">dif(</highlight><highlight class="charliteral">X</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">A</highlight><highlight class="normal">),</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight><highlight class="normal">dif(</highlight><highlight class="charliteral">X</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">B</highlight><highlight class="normal">)</highlight><highlight class="keyword">.</highlight></codeline>
</programlisting></para>
<para>The following queries are all equivalent To see this, use the fact f(x,y) <programlisting><codeline><highlight class="keyword">?-</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">call(f,</highlight><highlight class="charliteral">A1</highlight><highlight class="normal">,</highlight><highlight class="charliteral">A2</highlight><highlight class="normal">).</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">?-</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">call(</highlight><highlight class="keyword">\</highlight><highlight class="charliteral">X</highlight><highlight class="keyword">^</highlight><highlight class="normal">f(</highlight><highlight class="charliteral">X</highlight><highlight class="normal">),</highlight><highlight class="charliteral">A1</highlight><highlight class="normal">,</highlight><highlight class="charliteral">A2</highlight><highlight class="normal">).</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">?-</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">call(</highlight><highlight class="keyword">\</highlight><highlight class="charliteral">X</highlight><highlight class="keyword">^</highlight><highlight class="charliteral">Y</highlight><highlight class="keyword">^</highlight><highlight class="normal">f(</highlight><highlight class="charliteral">X</highlight><highlight class="normal">,</highlight><highlight class="charliteral">Y</highlight><highlight class="normal">),<sp/></highlight><highlight class="charliteral">A1</highlight><highlight class="normal">,</highlight><highlight class="charliteral">A2</highlight><highlight class="normal">).</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">?-</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">call(</highlight><highlight class="keyword">\</highlight><highlight class="charliteral">X</highlight><highlight class="keyword">^</highlight><highlight class="normal">(</highlight><highlight class="charliteral">X</highlight><highlight class="normal">+\</highlight><highlight class="charliteral">Y</highlight><highlight class="keyword">^</highlight><highlight class="normal">f(</highlight><highlight class="charliteral">X</highlight><highlight class="normal">,</highlight><highlight class="charliteral">Y</highlight><highlight class="normal">)),<sp/></highlight><highlight class="charliteral">A1</highlight><highlight class="normal">,</highlight><highlight class="charliteral">A2</highlight><highlight class="normal">).</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">?-</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">call(call(f,<sp/></highlight><highlight class="charliteral">A1</highlight><highlight class="normal">),</highlight><highlight class="charliteral">A2</highlight><highlight class="normal">).</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">?-</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">call(f(</highlight><highlight class="charliteral">A1</highlight><highlight class="normal">),</highlight><highlight class="charliteral">A2</highlight><highlight class="normal">).</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">?-</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">f(</highlight><highlight class="charliteral">A1</highlight><highlight class="normal">,</highlight><highlight class="charliteral">A2</highlight><highlight class="normal">).</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="charliteral">A1</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">=</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">f,</highlight></codeline>
<codeline><highlight class="charliteral">A2</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">=</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">f</highlight><highlight class="keyword">.</highlight></codeline>
</programlisting></para>
<para>Further discussions <ulink url="http://www.complang.tuwien.ac.at/ulrich/Prolog-inedit/ISO-Hiord">http://www.complang.tuwien.ac.at/ulrich/Prolog-inedit/ISO-Hiord</ulink></para>
<para>@tbd Static expansion similar to apply_macros <simplesect kind="author"><para>Ulrich Neumerkel</para>
</simplesect>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
