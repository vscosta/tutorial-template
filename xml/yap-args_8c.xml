<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="yap-args_8c" kind="file" language="C++">
    <compoundname>yap-args.c</compoundname>
    <includes refid="Yap_8h" local="yes">Yap.h</includes>
    <includes refid="YapError_8h" local="yes">YapError.h</includes>
    <includes refid="YapHeap_8h" local="yes">YapHeap.h</includes>
    <includes refid="YapInterface_8h" local="yes">YapInterface.h</includes>
    <includes refid="YapStreams_8h" local="yes">YapStreams.h</includes>
    <includes refid="iopreds_8h" local="yes">iopreds.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="1">
        <label>C/yap-args.c</label>
        <link refid="yap-args_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Atoms.h</label>
        <link refid="Atoms_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>Regs.h</label>
        <link refid="Regs_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ScannerTypes.h</label>
        <link refid="ScannerTypes_8h_source"/>
      </node>
      <node id="27">
        <label>TermExt.h</label>
        <link refid="TermExt_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Yap.h</label>
        <link refid="Yap_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>YapCompoundTerm.h</label>
        <link refid="YapCompoundTerm_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>YapFlags.h</label>
        <link refid="YapFlags_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>YapGFlagInfo.h</label>
        <link refid="YapGFlagInfo_8h"/>
      </node>
      <node id="36">
        <label>YapHandles.h</label>
        <link refid="YapHandles_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>YapHeap.h</label>
        <link refid="YapHeap_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>YapLFlagInfo.h</label>
        <link refid="YapLFlagInfo_8h"/>
      </node>
      <node id="26">
        <label>YapOpcodes.h</label>
        <link refid="YapOpcodes_8h_source"/>
      </node>
      <node id="35">
        <label>YapSignals.h</label>
        <link refid="YapSignals_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>YapTags.h</label>
        <link refid="YapTags_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>YapText.h</label>
        <link refid="YapText_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>Yapproto.h</label>
        <link refid="Yapproto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>Yatom.h</label>
        <link refid="Yatom_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>alloc.h</label>
        <link refid="alloc_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>amidefs.h</label>
        <link refid="amidefs_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>amiops.h</label>
        <link refid="amiops_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>arrays.h</label>
        <link refid="arrays_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>corout.h</label>
        <link refid="corout_8h_source"/>
      </node>
      <node id="42">
        <label>generated/h0globals.h</label>
        <link refid="h0globals_8h_source"/>
      </node>
      <node id="41">
        <label>generated/h0struct.h</label>
        <link refid="h0struct_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>generated/hlocals.h</label>
        <link refid="hlocals_8h_source"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>generated/tatoms.h</label>
        <link refid="tatoms_8h_source"/>
      </node>
      <node id="34">
        <label>gprof.h</label>
        <link refid="gprof_8h_source"/>
      </node>
      <node id="5">
        <label>inline-only.h</label>
        <link refid="inline-only_8h_source"/>
      </node>
      <node id="44">
        <label>locals.h</label>
        <link refid="locals_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>nolocks.h</label>
        <link refid="nolocks_8h_source"/>
      </node>
      <node id="19">
        <label>threads.h</label>
        <link refid="threads_8h_source"/>
      </node>
      <node id="49">
        <label>GitSHA1.h</label>
        <link refid="GitSHA1_8h_source"/>
      </node>
      <node id="56">
        <label>VFS.h</label>
        <link refid="VFS_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>YapDefs.h</label>
        <link refid="YapDefs_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>YapEncoding.h</label>
        <link refid="YapEncoding_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>YapError.h</label>
        <link refid="YapError_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>YapErrors.h</label>
        <link refid="YapErrors_8h"/>
      </node>
      <node id="18">
        <label>YapFormat.h</label>
        <link refid="YapFormat_8h_source"/>
      </node>
      <node id="20">
        <label>YapInit.h</label>
        <link refid="YapInit_8h"/>
      </node>
      <node id="53">
        <label>YapInterface.h</label>
        <link refid="YapInterface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>YapStreams.h</label>
        <link refid="YapStreams_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>YapTerm.h</label>
        <link refid="YapTerm_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>YapUTF8.h</label>
        <link refid="YapUTF8_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>../os/encoding.h</label>
        <link refid="encoding_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>iopreds.h</label>
        <link refid="iopreds_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>YapConfig.h</label>
      </node>
      <node id="13">
        <label>YapIOConfig.h</label>
      </node>
      <node id="10">
        <label>YapTermConfig.h</label>
      </node>
      <node id="11">
        <label>config.h</label>
      </node>
      <node id="45">
        <label>dlocals.h</label>
      </node>
      <node id="28">
        <label>stddef.h</label>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="14">
        <label>string.h</label>
      </node>
      <node id="52">
        <label>utf8proc.h</label>
      </node>
      <node id="22">
        <label>wchar.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structssz__t" prot="public">ssz_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="yap-args_8c_1a4d8bc969d7fdbc1f5ab7d9517af87a7a" prot="public" static="no">
        <name>DEFAULT_NUMBERWORKERS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="1275" column="9" bodyfile="C/yap-args.c" bodystart="1275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="yap-args_8c_1a30aa62d56588456db491b2f47a5c0bc2" prot="public" static="no">
        <name>DEFAULT_SCHEDULERLOOP</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="1276" column="9" bodyfile="C/yap-args.c" bodystart="1276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="yap-args_8c_1afa9274d38c3edc92d884562a189c6d61" prot="public" static="no">
        <name>DEFAULT_DELAYEDRELEASELOAD</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="1277" column="9" bodyfile="C/yap-args.c" bodystart="1277" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="yap-args_8c_1aef0543acbb98b9d7ad80faad24b5c8ae" prot="public" static="no">
        <type>bool</type>
        <definition>typedef bool testf(const char *s, const void *info)</definition>
        <argsstring>(const char *s, const void *info)</argsstring>
        <name>testf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="288" column="14" bodyfile="C/yap-args.c" bodystart="288" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="yap-args_8c_1a0eba969bfcc3a0651e966fcd6c6c67a9" prot="public" static="no" mutable="no">
        <type>X_API bool</type>
        <definition>X_API bool YAP_initialized</definition>
        <argsstring></argsstring>
        <name>YAP_initialized</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="66" column="12" bodyfile="C/yap-args.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="yap-args_8c_1a85311a4e4664aa8af290d3250a6ccc9c" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int n_mdelays</definition>
        <argsstring></argsstring>
        <name>n_mdelays</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="67" column="12" bodyfile="C/yap-args.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="yap-args_8c_1a3356fedc0c336495a7fd0bbc6e59c148" prot="public" static="yes" mutable="no">
        <type><ref refid="structYAP__delaymodule__t" kindref="compound">YAP_delaymodule_t</ref> *</type>
        <definition>YAP_delaymodule_t* m_delays</definition>
        <argsstring></argsstring>
        <name>m_delays</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="68" column="26" bodyfile="C/yap-args.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="yap-args_8c_1a59a909e7ff2babdffb93e18a828b9879" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* Yap_BINDIR</definition>
        <argsstring></argsstring>
        <name>Yap_BINDIR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="150" column="12" bodyfile="C/yap-args.c" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="yap-args_8c_1a2c1417a38ea59c97b5c83c6548d0cb33" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * Yap_ROOTDIR</definition>
        <argsstring></argsstring>
        <name>Yap_ROOTDIR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="150" column="23" bodyfile="C/yap-args.c" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="yap-args_8c_1a51242a2a9b207328d46c938f355c5715" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * Yap_SHAREDIR</definition>
        <argsstring></argsstring>
        <name>Yap_SHAREDIR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="150" column="35" bodyfile="C/yap-args.c" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="yap-args_8c_1a655d4362be49b4954245b6467bcfb15b" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * Yap_LIBDIR</definition>
        <argsstring></argsstring>
        <name>Yap_LIBDIR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="150" column="48" bodyfile="C/yap-args.c" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="yap-args_8c_1a6c4e868d1b8bdc67b5eb19fd00378e2b" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * Yap_DLLDIR</definition>
        <argsstring></argsstring>
        <name>Yap_DLLDIR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="150" column="59" bodyfile="C/yap-args.c" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="yap-args_8c_1abdafe19d327002a6cd70e4efaa4d3b1f" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * Yap_PLDIR</definition>
        <argsstring></argsstring>
        <name>Yap_PLDIR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="151" column="3" bodyfile="C/yap-args.c" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="yap-args_8c_1aec1f49cdf38ead1d3e5d056d97e1e6c4" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * Yap_BOOTSTRAP</definition>
        <argsstring></argsstring>
        <name>Yap_BOOTSTRAP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="151" column="13" bodyfile="C/yap-args.c" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="yap-args_8c_1a44cf0066c470a25064eadd91b4e9617c" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * Yap_COMMONSDIR</definition>
        <argsstring></argsstring>
        <name>Yap_COMMONSDIR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="151" column="27" bodyfile="C/yap-args.c" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="yap-args_8c_1af903e88fa63ecea9a349f8c970763fab" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * Yap_INPUT_STARTUP</definition>
        <argsstring></argsstring>
        <name>Yap_INPUT_STARTUP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="151" column="42" bodyfile="C/yap-args.c" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="yap-args_8c_1a56d1ec0d43286f5f63e725d2e263b5a7" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * Yap_OUTPUT_STARTUP</definition>
        <argsstring></argsstring>
        <name>Yap_OUTPUT_STARTUP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="152" column="3" bodyfile="C/yap-args.c" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="yap-args_8c_1abd6c2db7022007a99029cb2fe7dbd14b" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * Yap_SOURCEBOOT</definition>
        <argsstring></argsstring>
        <name>Yap_SOURCEBOOT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="152" column="22" bodyfile="C/yap-args.c" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="yap-args_8c_1a2ba7ecc53f5d9626f8554f78d6237d0c" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * Yap_INCLUDEDIR</definition>
        <argsstring></argsstring>
        <name>Yap_INCLUDEDIR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="152" column="37" bodyfile="C/yap-args.c" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="yap-args_8c_1a5abfa6d140490b6d660214ff088eb2fd" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char * Yap_PLBOOTDIR</definition>
        <argsstring></argsstring>
        <name>Yap_PLBOOTDIR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="152" column="52" bodyfile="C/yap-args.c" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="yap-args_8c_1a45c9b42daa38247c745709270756f6a9" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* EOLIST</definition>
        <argsstring></argsstring>
        <name>EOLIST</name>
        <initializer>=&quot;EOLINE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="249" column="20" bodyfile="C/yap-args.c" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="yap-args_8c_1a0124071d75e7f0940db92da6b87621fa" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool is_install</definition>
        <argsstring></argsstring>
        <name>is_install</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="250" column="13" bodyfile="C/yap-args.c" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="yap-args_8c_1a9b864c6bc7967be8e55a8f4b527ebb1c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Yap_Embedded</definition>
        <argsstring></argsstring>
        <name>Yap_Embedded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="1076" column="13" bodyfile="C/init.c" bodystart="66" bodyend="-1" declfile="C/yap-args.c" declline="1076" declcolumn="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="yap-args_8c_1aeb4dce43ad62c0bea52cae0e5d283b16" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void init_globals</definition>
        <argsstring>(YAP_init_args *yap_init)</argsstring>
        <name>init_globals</name>
        <param>
          <type><ref refid="structyap__boot__params" kindref="compound">YAP_init_args</ref> *</type>
          <declname>yap_init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="70" column="13" bodyfile="C/yap-args.c" bodystart="70" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="yap-args_8c_1aff0a378637824727fd2c344c59da4a76" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool load_file</definition>
        <argsstring>(const char *b_file USES_REGS)</argsstring>
        <name>load_file</name>
        <param>
          <type>const char *b_file</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
<para>consult loop in C: used to boot the system, butt supports goal execution and recursive consulting </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="159" column="13" bodyfile="C/yap-args.c" bodystart="159" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="yap-args_8c_1a15327a5263d1b8744044dd36591c7edd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool is_dir</definition>
        <argsstring>(const char *path, const void *info)</argsstring>
        <name>is_dir</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="252" column="13" bodyfile="C/yap-args.c" bodystart="252" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="yap-args_8c_1aadc9c21c4963827136c7795962afcba9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool is_file</definition>
        <argsstring>(const char *path, const void *info)</argsstring>
        <name>is_file</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="277" column="13" bodyfile="C/yap-args.c" bodystart="277" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="yap-args_8c_1a5f8c98cca814707fdd6bb3347d728afd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool is_wfile</definition>
        <argsstring>(const char *path, const void *info)</argsstring>
        <name>is_wfile</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="283" column="13" bodyfile="C/yap-args.c" bodystart="283" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="yap-args_8c_1af56cffc1181a3c9ba0752079988a19ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char * sel</definition>
        <argsstring>(testf test, const void *info, const char *s1,...)</argsstring>
        <name>sel</name>
        <param>
          <type>testf</type>
          <declname>test</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="293" column="19" bodyfile="C/yap-args.c" bodystart="293" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="yap-args_8c_1a75cbd500a5c0ec094847640a4bb38907" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char * join</definition>
        <argsstring>(const char *s0, const char *s1)</argsstring>
        <name>join</name>
        <param>
          <type>const char *</type>
          <declname>s0</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="320" column="19" bodyfile="C/yap-args.c" bodystart="320" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="yap-args_8c_1ab984942d446886a6015d4ae6f6813071" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Yap_set_locations</definition>
        <argsstring>(YAP_init_args *iap)</argsstring>
        <name>Yap_set_locations</name>
        <param>
          <type><ref refid="structyap__boot__params" kindref="compound">YAP_init_args</ref> *</type>
          <declname>iap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>ROOT_DIR is the home of the YAP system It can be: <ndash/> provided by the user; <ndash/> obtained from DESTDIR + DE=efalkRoot</para>
<para>It is:</para>
<para><ndash/> DESTDIR/ in Anaconda <ndash/> /usr/loca77l in most Unix style systems</para>
<para>BINDIR: where the OS stores header files, namely libYap...</para>
<para>LIBDIR: where the OS stores dynamic libraries, namely libYap...</para>
<para>DLLDIR: where libraries can find expicitely loaded DLLs</para>
<para>INCLUDEDIR: where the OS stores header files, namely libYap...</para>
<para>SHAREDIR: where OS &amp; ARCH independent files live</para>
<para>PLDIR: where we can find Prolog files</para>
<para>``COMMONSDIR: Prolog Commons</para>
<para>SOURCEBOOT: booting from the Prolog boot file at compilation-time so we should not assume pl is installed</para>
<para>BOOTSTRAP: booting from the Prolog boot file after YAP is installed</para>
<para>STARTUP: where we can find the core Prolog bootstrap file</para>
        </inbodydescription>
        <location file="C/yap-args.c" line="345" column="13" bodyfile="C/yap-args.c" bodystart="345" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="yap-args_8c_1a0edd37fe65f6a8b1e530370f6e6402f3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void print_usage</definition>
        <argsstring>(void)</argsstring>
        <name>print_usage</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="486" column="13" bodyfile="C/yap-args.c" bodystart="486" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="yap-args_8c_1a0a6fdc20f958d759cd6022feca87af42" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int myisblank</definition>
        <argsstring>(int c)</argsstring>
        <name>myisblank</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="539" column="12" bodyfile="C/yap-args.c" bodystart="539" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="yap-args_8c_1a6842ce581822758ff84adf62980575cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char * add_end_dot</definition>
        <argsstring>(char arg[])</argsstring>
        <name>add_end_dot</name>
        <param>
          <type>char</type>
          <declname>arg</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="551" column="13" bodyfile="C/yap-args.c" bodystart="551" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="yap-args_8c_1aac337c04382c6b31f89a76f765b7bdb1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int dump_runtime_variables</definition>
        <argsstring>(void)</argsstring>
        <name>dump_runtime_variables</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="568" column="12" bodyfile="C/yap-args.c" bodystart="568" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="yap-args_8c_1a6a7ae7cd2922b59faf76626ba43d4536" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>X_API YAP_file_type_t</type>
        <definition>X_API YAP_file_type_t Yap_InitDefaults</definition>
        <argsstring>(void *x, char *saved_state, int argc, char *argv[])</argsstring>
        <name>Yap_InitDefaults</name>
        <param>
          <type>void *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>saved_state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="578" column="23" bodyfile="C/yap-args.c" bodystart="578" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="group__ChYInterface_1ga87050eb93c01bbe370daedbed6b4be75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>X_API YAP_file_type_t</type>
        <definition>X_API YAP_file_type_t YAP_parse_yap_arguments</definition>
        <argsstring>(int argc, char *argv[], YAP_init_args *iap)</argsstring>
        <name>YAP_parse_yap_arguments</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="structyap__boot__params" kindref="compound">YAP_init_args</ref> *</type>
          <declname>iap</declname>
        </param>
        <briefdescription>
<para>Parse command line. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__ChYInterface_1ga87050eb93c01bbe370daedbed6b4be75" kindref="member">YAP_parse_yap_arguments(int argc, char *argv[], YAP_init_args *iap)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>number of arguments </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iap</parametername>
</parameternamelist>
<parameterdescription>
<para>options, see YAP_init_args </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boot from saved state or restore; error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="626" column="23" bodyfile="C/yap-args.c" bodystart="626" bodyend="1039"/>
      </memberdef>
      <memberdef kind="function" id="group__ChYInterface_1gab0bdc607914ee9528266b1dc947d03bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>X_API bool</type>
        <definition>X_API bool YAP_DelayInit</definition>
        <argsstring>(YAP_ModInit_t f, const char s[])</argsstring>
        <name>YAP_DelayInit</name>
        <param>
          <type>YAP_ModInit_t</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>s</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para><ref refid="group__ChYInterface_1gab0bdc607914ee9528266b1dc947d03bc" kindref="member">YAP_DelayInit()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>ensures initialization is done after engine creation It receives a pointer to function and a string describing the module </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="1049" column="12" bodyfile="C/yap-args.c" bodystart="1049" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="yap-args_8c_1a0d80688d93b5e2aa78c9f354a306521b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Yap_LateInit</definition>
        <argsstring>(const char s[])</argsstring>
        <name>Yap_LateInit</name>
        <param>
          <type>const char</type>
          <declname>s</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="1061" column="6" bodyfile="C/yap-args.c" bodystart="1061" bodyend="1070"/>
      </memberdef>
      <memberdef kind="function" id="yap-args_8c_1ad84ae01ad42b84666d846d21033f62d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void init_hw</definition>
        <argsstring>(YAP_init_args *yap_init, struct ssz_t *spt)</argsstring>
        <name>init_hw</name>
        <param>
          <type><ref refid="structyap__boot__params" kindref="compound">YAP_init_args</ref> *</type>
          <declname>yap_init</declname>
        </param>
        <param>
          <type>struct <ref refid="structssz__t" kindref="compound">ssz_t</ref> *</type>
          <declname>spt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="1078" column="13" bodyfile="C/yap-args.c" bodystart="1078" bodyend="1122"/>
      </memberdef>
      <memberdef kind="function" id="yap-args_8c_1a1cd5e9f852fea9b38fdecd062a3b3a54" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void end_init</definition>
        <argsstring>(YAP_init_args *iap)</argsstring>
        <name>end_init</name>
        <param>
          <type><ref refid="structyap__boot__params" kindref="compound">YAP_init_args</ref> *</type>
          <declname>iap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="1124" column="13" bodyfile="C/yap-args.c" bodystart="1124" bodyend="1132"/>
      </memberdef>
      <memberdef kind="function" id="yap-args_8c_1ac5aa912c90ba87d1dbaae6ed7c84790f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void start_modules</definition>
        <argsstring>(void)</argsstring>
        <name>start_modules</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="1134" column="13" bodyfile="C/yap-args.c" bodystart="1134" bodyend="1143"/>
      </memberdef>
      <memberdef kind="function" id="group__ChYInterface_1gac4808f080d5978f2c83de046ab5c471f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>X_API void</type>
        <definition>X_API void YAP_Init</definition>
        <argsstring>(YAP_init_args *yap_init)</argsstring>
        <name>YAP_Init</name>
        <param>
          <type><ref refid="structyap__boot__params" kindref="compound">YAP_init_args</ref> *</type>
          <declname>yap_init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="1148" column="12" bodyfile="C/yap-args.c" bodystart="1148" bodyend="1258"/>
      </memberdef>
      <memberdef kind="function" id="yap-args_8c_1a7de6cc26c3ab42e4f2f7d308cead860c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>X_API void</type>
        <definition>X_API void YAP_FastInit</definition>
        <argsstring>(char *saved_state, int argc, char *argv[])</argsstring>
        <name>YAP_FastInit</name>
        <param>
          <type>char *</type>
          <declname>saved_state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/yap-args.c" line="1279" column="12" bodyfile="C/yap-args.c" bodystart="1279" bodyend="1289"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C/yap-args.c"/>
  </compounddef>
</doxygen>
