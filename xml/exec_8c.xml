<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="exec_8c" kind="file" language="C++">
    <compoundname>exec.c</compoundname>
    <includes refid="absmi_8h" local="yes">absmi.h</includes>
    <includes refid="amidefs_8h" local="yes">amidefs.h</includes>
    <includes refid="attvar_8h" local="yes">attvar.h</includes>
    <includes refid="cut__c_8h" local="yes">cut_c.h</includes>
    <includes refid="yapio_8h" local="yes">yapio.h</includes>
    <includes refid="heapgc_8h" local="yes">heapgc.h</includes>
    <incdepgraph>
      <node id="1">
        <label>C/exec.c</label>
        <link refid="exec_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Atoms.h</label>
        <link refid="Atoms_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>Regs.h</label>
        <link refid="Regs_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ScannerTypes.h</label>
        <link refid="ScannerTypes_8h_source"/>
      </node>
      <node id="28">
        <label>TermExt.h</label>
        <link refid="TermExt_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Yap.h</label>
        <link refid="Yap_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>YapArenas.h</label>
        <link refid="YapArenas_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>YapCompoundTerm.h</label>
        <link refid="YapCompoundTerm_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>YapEval.h</label>
        <link refid="YapEval_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>YapFlags.h</label>
        <link refid="YapFlags_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>YapGFlagInfo.h</label>
        <link refid="YapGFlagInfo_8h"/>
      </node>
      <node id="37">
        <label>YapHandles.h</label>
        <link refid="YapHandles_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>YapHeap.h</label>
        <link refid="YapHeap_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>YapLFlagInfo.h</label>
        <link refid="YapLFlagInfo_8h"/>
      </node>
      <node id="27">
        <label>YapOpcodes.h</label>
        <link refid="YapOpcodes_8h_source"/>
      </node>
      <node id="36">
        <label>YapSignals.h</label>
        <link refid="YapSignals_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>YapTags.h</label>
        <link refid="YapTags_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>YapText.h</label>
        <link refid="YapText_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>Yapproto.h</label>
        <link refid="Yapproto_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>Yatom.h</label>
        <link refid="Yatom_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>absmi.h</label>
        <link refid="absmi_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>alloc.h</label>
        <link refid="alloc_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>amidefs.h</label>
        <link refid="amidefs_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>amiops.h</label>
        <link refid="amiops_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>arrays.h</label>
        <link refid="arrays_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>attvar.h</label>
        <link refid="attvar_8h_source"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>clause.h</label>
        <link refid="clause_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>corout.h</label>
        <link refid="corout_8h_source"/>
      </node>
      <node id="60">
        <label>cut_c.h</label>
        <link refid="cut__c_8h_source"/>
      </node>
      <node id="43">
        <label>generated/h0globals.h</label>
        <link refid="h0globals_8h_source"/>
      </node>
      <node id="42">
        <label>generated/h0struct.h</label>
        <link refid="h0struct_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>generated/hlocals.h</label>
        <link refid="hlocals_8h_source"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>generated/tatoms.h</label>
        <link refid="tatoms_8h_source"/>
      </node>
      <node id="35">
        <label>gprof.h</label>
        <link refid="gprof_8h_source"/>
      </node>
      <node id="65">
        <label>heapgc.h</label>
        <link refid="heapgc_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>inline-only.h</label>
        <link refid="inline-only_8h_source"/>
      </node>
      <node id="45">
        <label>locals.h</label>
        <link refid="locals_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>nolocks.h</label>
        <link refid="nolocks_8h_source"/>
      </node>
      <node id="55">
        <label>terms.h</label>
        <link refid="terms_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>threads.h</label>
        <link refid="threads_8h_source"/>
      </node>
      <node id="58">
        <label>trim_trail.h</label>
        <link refid="trim__trail_8h_source"/>
      </node>
      <node id="50">
        <label>GitSHA1.h</label>
        <link refid="GitSHA1_8h_source"/>
      </node>
      <node id="62">
        <label>VFS.h</label>
        <link refid="VFS_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>YapDefs.h</label>
        <link refid="YapDefs_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>YapEncoding.h</label>
        <link refid="YapEncoding_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>YapError.h</label>
        <link refid="YapError_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>YapErrors.h</label>
        <link refid="YapErrors_8h"/>
      </node>
      <node id="19">
        <label>YapFormat.h</label>
        <link refid="YapFormat_8h_source"/>
      </node>
      <node id="21">
        <label>YapInit.h</label>
        <link refid="YapInit_8h"/>
      </node>
      <node id="64">
        <label>YapStreams.h</label>
        <link refid="YapStreams_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>YapTerm.h</label>
        <link refid="YapTerm_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>YapUTF8.h</label>
        <link refid="YapUTF8_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>../os/encoding.h</label>
        <link refid="encoding_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>yapio.h</label>
        <link refid="yapio_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>YapConfig.h</label>
      </node>
      <node id="14">
        <label>YapIOConfig.h</label>
      </node>
      <node id="11">
        <label>YapTermConfig.h</label>
      </node>
      <node id="12">
        <label>config.h</label>
      </node>
      <node id="46">
        <label>dlocals.h</label>
      </node>
      <node id="29">
        <label>stddef.h</label>
      </node>
      <node id="8">
        <label>stdio.h</label>
      </node>
      <node id="9">
        <label>stdlib.h</label>
      </node>
      <node id="15">
        <label>string.h</label>
      </node>
      <node id="53">
        <label>utf8proc.h</label>
      </node>
      <node id="23">
        <label>wchar.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="exec_8c_1a4213372a7367bfd331c31e5dbd6e973e" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structpred__entry" kindref="compound">pred_entry</ref> **</type>
        <definition>struct pred_entry** CommaPredicates</definition>
        <argsstring></argsstring>
        <name>CommaPredicates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="497" column="18" bodyfile="C/exec.c" bodystart="497" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="exec_8c_1afecf98fa63f505b5cbc673ae9f24d4fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool CallPredicate</definition>
        <argsstring>(PredEntry *, choiceptr, yamop *CACHE_TYPE)</argsstring>
        <name>CallPredicate</name>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
        </param>
        <param>
          <type><ref refid="structchoicept" kindref="compound">choiceptr</ref></type>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>CACHE_TYPE</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="33" column="13" declfile="C/exec.c" declline="33" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a234affbd924d38113f0897725e506989" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool EnterCreepMode</definition>
        <argsstring>(Term, Term CACHE_TYPE)</argsstring>
        <name>EnterCreepMode</name>
        <param>
          <type>Term</type>
        </param>
        <param>
          <type>Term</type>
          <declname>CACHE_TYPE</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="36" column="13" declfile="C/exec.c" declline="36" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a29a9ae20ddd4699e08394491bf67decb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="704" column="12" bodyfile="C/exec.c" bodystart="704" bodyend="708" declfile="C/exec.c" declline="39" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a20f6cc1cb8b659cfb7d05ae91d824852" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute0</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute0</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="927" column="12" bodyfile="C/exec.c" bodystart="927" bodyend="970" declfile="C/exec.c" declline="41" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a12767f2faab9626162d482eb447a69b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Term</type>
        <definition>static Term cp_as_integer</definition>
        <argsstring>(choiceptr cp USES_REGS)</argsstring>
        <name>cp_as_integer</name>
        <param>
          <type><ref refid="structchoicept" kindref="compound">choiceptr</ref> cp</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="43" column="13" bodyfile="C/exec.c" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a5d7e1ae93d417cfb25e11c1a2b16074f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structchoicept" kindref="compound">choiceptr</ref></type>
        <definition>static choiceptr cp_from_integer</definition>
        <argsstring>(Term cpt USES_REGS)</argsstring>
        <name>cp_from_integer</name>
        <param>
          <type>Term cpt</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="48" column="18" bodyfile="C/exec.c" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1aa536dac40dd04af737245722f469a3ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Term</type>
        <definition>Term Yap_cp_as_integer</definition>
        <argsstring>(choiceptr cp)</argsstring>
        <name>Yap_cp_as_integer</name>
        <param>
          <type><ref refid="structchoicept" kindref="compound">choiceptr</ref></type>
          <declname>cp</declname>
        </param>
        <briefdescription>
<para>Represents a choice-point as an offset to the top of local stack. </para>
        </briefdescription>
        <detaileddescription>
<para>This should *be stable acroos gc or stack shifts <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cp</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to choice-point </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Term with offset </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="59" column="6" bodyfile="C/exec.c" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a68e5b4c49338254abf20ba73f3172521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
        <definition>PredEntry * Yap_track_cpred</definition>
        <argsstring>(op_numbers op, yamop *ip, size_t min, void *v)</argsstring>
        <name>Yap_track_cpred</name>
        <param>
          <type>op_numbers</type>
          <declname>op</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>min</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="65" column="11" bodyfile="C/exec.c" bodystart="65" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a0b2a5eba2a26bc98fc84936b92addea9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool is_connective</definition>
        <argsstring>(Functor f)</argsstring>
        <name>is_connective</name>
        <param>
          <type><ref refid="structFunctorEntryStruct" kindref="compound">Functor</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="286" column="13" bodyfile="C/exec.c" bodystart="286" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1ac33cb42cdf0434859c3815c772f23272" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool CallPredicate</definition>
        <argsstring>(PredEntry *pen, choiceptr cut_pt, yamop *code USES_REGS)</argsstring>
        <name>CallPredicate</name>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>pen</declname>
        </param>
        <param>
          <type><ref refid="structchoicept" kindref="compound">choiceptr</ref></type>
          <declname>cut_pt</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *code</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
<para>Sets up the engine to run a different predicate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pen</parametername>
</parameternamelist>
<parameterdescription>
<para>the new code </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cut_pt</parametername>
</parameternamelist>
<parameterdescription>
<para>cut boundary </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>USES_REGS</parametername>
</parameternamelist>
<parameterdescription>
<para>thread support </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="302" column="20" bodyfile="C/exec.c" bodystart="302" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1aa28387c1801f39dd7d65d3eaadff7e64" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool CallMetaCall</definition>
        <argsstring>(Term t, Term mod USES_REGS)</argsstring>
        <name>CallMetaCall</name>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Term mod</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
<para>calls a meta-predicate or anything weird </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>the called goal </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>USES_REGS</parametername>
</parameternamelist>
<parameterdescription>
<para>MT </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>did we fiid it? </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="350" column="20" bodyfile="C/exec.c" bodystart="350" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a724a5af70b4f9f761235da5215c5220f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Term</type>
        <definition>Term Yap_ExecuteCallMetaCall</definition>
        <argsstring>(Term g, Term mod)</argsstring>
        <name>Yap_ExecuteCallMetaCall</name>
        <param>
          <type>Term</type>
          <declname>g</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
<para>Transfer control to a meta-call in ARG1, cut up to B. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>current module </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>su </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="381" column="6" bodyfile="C/exec.c" bodystart="381" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a006a657070d703a34f1a11ab7cd52a19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Term</type>
        <definition>Term Yap_PredicateIndicator</definition>
        <argsstring>(Term t, Term mod)</argsstring>
        <name>Yap_PredicateIndicator</name>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="396" column="6" bodyfile="C/exec.c" bodystart="396" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a2f75c4e92a55b14c2547a44c34946446" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool CallError</definition>
        <argsstring>(yap_error_number err, Term t, Term mod USES_REGS)</argsstring>
        <name>CallError</name>
        <param>
          <type>yap_error_number</type>
          <declname>err</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Term mod</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="427" column="13" bodyfile="C/exec.c" bodystart="427" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1af4f01c2427f7ac0e14af1b436db6ec60" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int save_env_b</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>save_env_b</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="439" column="12" bodyfile="C/exec.c" bodystart="439" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a537f73b0c4ec888a3621ca6e2905ee08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool comma_goal</definition>
        <argsstring>(Term t1, Term t0[4], bool first)</argsstring>
        <name>comma_goal</name>
        <param>
          <type>Term</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>t0</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>first</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="454" column="6" bodyfile="C/exec.c" bodystart="454" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a03da4f5941620d635462533899fad2d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
        <definition>PredEntry * Yap_MkConjunction</definition>
        <argsstring>(Term t, Int MyB)</argsstring>
        <name>Yap_MkConjunction</name>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Int</type>
          <declname>MyB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="499" column="11" bodyfile="C/exec.c" bodystart="499" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a40a4001f684c9a1aee28a01c7e32b7a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool do_execute</definition>
        <argsstring>(Term t, Term mod USES_REGS)</argsstring>
        <name>do_execute</name>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Term mod</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="559" column="20" bodyfile="C/exec.c" bodystart="559" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a7fb3bee4f1cc8cdd80fdead99581d80c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool EnterCreepMode</definition>
        <argsstring>(Term t, Term mod USES_REGS)</argsstring>
        <name>EnterCreepMode</name>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Term mod</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="662" column="13" bodyfile="C/exec.c" bodystart="662" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1ac51fb1b3aebe89a4553295998a40577f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Yap_Execute</definition>
        <argsstring>(Term t USES_REGS)</argsstring>
        <name>Yap_Execute</name>
        <param>
          <type>Term t</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="710" column="6" bodyfile="C/exec.c" bodystart="710" bodyend="713"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a97d0adbab024301fb2600ab33e0f0969" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int do_execute_n</definition>
        <argsstring>(arity_t n, Term g, Term mod USES_REGS)</argsstring>
        <name>do_execute_n</name>
        <param>
          <type>arity_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>g</declname>
        </param>
        <param>
          <type>Term mod</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="715" column="12" bodyfile="C/exec.c" bodystart="715" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a7b91c5c3f98e379fbac1bd6f4de5c6be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute2</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute2</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="757" column="12" bodyfile="C/exec.c" bodystart="757" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a23e608b2ac5fc3b91e8b01e5ca66b78c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute3</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute3</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="762" column="12" bodyfile="C/exec.c" bodystart="762" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1ab10716e02463e26eafc00528c531b2f5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute4</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute4</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="767" column="12" bodyfile="C/exec.c" bodystart="767" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1ae6cebc8ba576f74380ac19952785905f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute5</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute5</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="772" column="12" bodyfile="C/exec.c" bodystart="772" bodyend="775"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1ae035616a912c8a845c107407cf9c6fd6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute6</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute6</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="777" column="12" bodyfile="C/exec.c" bodystart="777" bodyend="780"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a47d50e4d2d83b0836e5db4db82bef241" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute7</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute7</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="782" column="12" bodyfile="C/exec.c" bodystart="782" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a924af6a0f754123bfd7766a72e63bc2d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute8</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute8</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="787" column="12" bodyfile="C/exec.c" bodystart="787" bodyend="790"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1af6caaad8e824fdc7dd19ebebf2f3ce82" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute9</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute9</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="792" column="12" bodyfile="C/exec.c" bodystart="792" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1afb54d05229c886f88b8db30c9cb3af05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute10</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute10</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="797" column="12" bodyfile="C/exec.c" bodystart="797" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a5284ded7c9b61af67dbf6d218c560499" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute11</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute11</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="802" column="12" bodyfile="C/exec.c" bodystart="802" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a6d5b00e4e45811ad84df8f81b5134aa3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute12</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute12</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="807" column="12" bodyfile="C/exec.c" bodystart="807" bodyend="810"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a1ae516d3f950ea2ca7f388ddff2f74d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute_clause</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute_clause</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="812" column="12" bodyfile="C/exec.c" bodystart="812" bodyend="892"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1ab8e22129bed5fe2736e337302c8de14b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute_in_mod</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute_in_mod</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="894" column="12" bodyfile="C/exec.c" bodystart="894" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1ae0a0b15b53be6568359c8ade9d2a9281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Yap_exists</definition>
        <argsstring>(Term t, bool succeed USES_REGS)</argsstring>
        <name>Yap_exists</name>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type>bool succeed</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="900" column="7" bodyfile="C/exec.c" bodystart="900" bodyend="922"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a2f097ac757e85e5d5a168bbbd0852433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * Yap_blob_info</definition>
        <argsstring>(Term t)</argsstring>
        <name>Yap_blob_info</name>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="924" column="13" bodyfile="C/bignum.c" bodystart="335" bodyend="349" declfile="C/exec.c" declline="924" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a8e4094f7895ea085c30117dcd2efa1f4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int creep_step</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>creep_step</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="972" column="12" bodyfile="C/exec.c" bodystart="972" bodyend="1029"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1aeb5e7e6158160412795d867044ab3de0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute_nonstop</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute_nonstop</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1031" column="12" bodyfile="C/exec.c" bodystart="1031" bodyend="1126"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1abae4a727da43ae67a2688e27de4916e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute_0</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute_0</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1128" column="12" bodyfile="C/exec.c" bodystart="1128" bodyend="1135"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a511ff88a146ee587aff71ebd1b2de60e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool call_with_args</definition>
        <argsstring>(int i USES_REGS)</argsstring>
        <name>call_with_args</name>
        <param>
          <type>int i</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1137" column="13" bodyfile="C/exec.c" bodystart="1137" bodyend="1164"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a41157919e54758a97fff02a900ee7b1c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute_1</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute_1</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1166" column="12" bodyfile="C/exec.c" bodystart="1166" bodyend="1169"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1abebcdabc97aa17f69bc3b430843ef896" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute_2</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute_2</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1171" column="12" bodyfile="C/exec.c" bodystart="1171" bodyend="1174"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a4b15e10c537c5e00ab3fb95836b073e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute_3</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute_3</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1176" column="12" bodyfile="C/exec.c" bodystart="1176" bodyend="1179"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1ae3f1c79916de6df7e1f2ba4e1331951f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute_4</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute_4</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1181" column="12" bodyfile="C/exec.c" bodystart="1181" bodyend="1184"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a81807195a84dcde0edd9392f7b8b09ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute_5</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute_5</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1186" column="12" bodyfile="C/exec.c" bodystart="1186" bodyend="1189"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a3a2736b2f39dcddb160283d8f0c66b77" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute_6</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute_6</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1191" column="12" bodyfile="C/exec.c" bodystart="1191" bodyend="1194"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a40f608470b774be7b02ac8ce5444fc48" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute_7</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute_7</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1196" column="12" bodyfile="C/exec.c" bodystart="1196" bodyend="1199"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a3420190fab23868a29a6c748db9a935f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute_8</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute_8</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1201" column="12" bodyfile="C/exec.c" bodystart="1201" bodyend="1204"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a16810cf3dedd0380ec0ffcdc36e9d633" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute_9</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute_9</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1206" column="12" bodyfile="C/exec.c" bodystart="1206" bodyend="1209"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a4ea9ad986fd3ee6463afd279ae43011c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int execute_10</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>execute_10</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1211" column="12" bodyfile="C/exec.c" bodystart="1211" bodyend="1214"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a23fc75117145562ee21d77215d2f711e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int exec_absmi</definition>
        <argsstring>(bool top, yap_reset_t reset_mode USES_REGS)</argsstring>
        <name>exec_absmi</name>
        <param>
          <type>bool</type>
          <declname>top</declname>
        </param>
        <param>
          <type>yap_reset_t reset_mode</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1247" column="12" bodyfile="C/exec.c" bodystart="1247" bodyend="1351"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a8d1fd17ca53a01c99b37d6361865279e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Yap_PrepGoal</definition>
        <argsstring>(arity_t arity, CELL *pt, choiceptr saved_b USES_REGS)</argsstring>
        <name>Yap_PrepGoal</name>
        <param>
          <type>arity_t</type>
          <declname>arity</declname>
        </param>
        <param>
          <type>CELL *</type>
          <declname>pt</declname>
        </param>
        <param>
          <type><ref refid="structchoicept" kindref="compound">choiceptr</ref> saved_b</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1353" column="6" bodyfile="C/exec.c" bodystart="1353" bodyend="1398"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a9e6dea685edc4c981a599f1399778acd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int do_goal</definition>
        <argsstring>(yamop *CodeAdr, int arity, CELL *pt, bool may_succeed, bool top USES_REGS)</argsstring>
        <name>do_goal</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>CodeAdr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arity</declname>
        </param>
        <param>
          <type>CELL *</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>may_succeed</declname>
        </param>
        <param>
          <type>bool top</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1400" column="12" bodyfile="C/exec.c" bodystart="1400" bodyend="1431"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a39cdb9764120c5f7cb9968f8f676465a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Yap_exec_absmi</definition>
        <argsstring>(bool top, yap_reset_t has_reset)</argsstring>
        <name>Yap_exec_absmi</name>
        <param>
          <type>bool</type>
          <declname>top</declname>
        </param>
        <param>
          <type>yap_reset_t</type>
          <declname>has_reset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1434" column="6" bodyfile="C/exec.c" bodystart="1434" bodyend="1438"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a42bb5cb2a84d5e7a1bd18ed643ec509b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Yap_fail_all</definition>
        <argsstring>(choiceptr bb USES_REGS)</argsstring>
        <name>Yap_fail_all</name>
        <param>
          <type><ref refid="structchoicept" kindref="compound">choiceptr</ref> bb</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
<para>Fails computation up to choice-point bb. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>USES_REGS</parametername>
</parameternamelist>
<parameterdescription>
<para>[description] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1444" column="6" bodyfile="C/exec.c" bodystart="1444" bodyend="1490"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a5f1b9697eabb9901cee9859476729618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Yap_execute_pred</definition>
        <argsstring>(PredEntry *ppe, CELL *pt, bool pass_ex USES_REGS)</argsstring>
        <name>Yap_execute_pred</name>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ppe</declname>
        </param>
        <param>
          <type>CELL *</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>bool pass_ex</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1492" column="6" bodyfile="C/exec.c" bodystart="1492" bodyend="1598"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1afd1dec566f3efbd6fbbca3aa099e181d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Yap_execute_goal</definition>
        <argsstring>(Term t, int nargs, Term mod, bool pass_ex)</argsstring>
        <name>Yap_execute_goal</name>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nargs</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>mod</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pass_ex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1600" column="6" bodyfile="C/exec.c" bodystart="1600" bodyend="1642"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1ab38c5f83fa689a9034c534a3a21153db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Yap_trust_last</definition>
        <argsstring>(void)</argsstring>
        <name>Yap_trust_last</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1644" column="6" bodyfile="C/exec.c" bodystart="1644" bodyend="1662"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a96ae287ffa733a1111acbb850eec4c30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Term</type>
        <definition>Term Yap_RunTopGoal</definition>
        <argsstring>(Term t, bool handle_errors)</argsstring>
        <name>Yap_RunTopGoal</name>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>handle_errors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1664" column="6" bodyfile="C/exec.c" bodystart="1664" bodyend="1749"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a3494c6b904eca882fae2f14ee9daf79f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void do_restore_regs</definition>
        <argsstring>(Term t, int restore_all USES_REGS)</argsstring>
        <name>do_restore_regs</name>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int restore_all</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1751" column="13" bodyfile="C/exec.c" bodystart="1751" bodyend="1770"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1af816d1bdd5f2d44c5ce616eca9f179b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int restore_regs</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>restore_regs</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1773" column="12" bodyfile="C/exec.c" bodystart="1773" bodyend="1790"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a7e05bc5d596e8e146fed95dc89619644" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Yap_restore_regs</definition>
        <argsstring>(Term t USES_REGS)</argsstring>
        <name>Yap_restore_regs</name>
        <param>
          <type>Term t</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1792" column="6" bodyfile="C/exec.c" bodystart="1792" bodyend="1804"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1aad1a453c3895fde6ccdc3d53351eb699" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int restore_regs2</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>restore_regs2</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1815" column="12" bodyfile="C/exec.c" bodystart="1815" bodyend="1868"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a3d691642199d939845ef51c2859e0187" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool cut_at</definition>
        <argsstring>(choiceptr pt0 USES_REGS)</argsstring>
        <name>cut_at</name>
        <param>
          <type><ref refid="structchoicept" kindref="compound">choiceptr</ref> pt0</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1870" column="13" bodyfile="C/exec.c" bodystart="1870" bodyend="1900"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1af817744d01668684015d51803f1e89a7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int cut_at1</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>cut_at1</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1902" column="12" bodyfile="C/exec.c" bodystart="1902" bodyend="1914"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a0a5b95379a00af7f1317d45755ed98af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int clean_ifcp</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>clean_ifcp</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1917" column="12" bodyfile="C/exec.c" bodystart="1917" bodyend="1933"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a6c2bf43ea175bb9042352b46868142e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int disj_marker</definition>
        <argsstring>(yamop *apc)</argsstring>
        <name>disj_marker</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>apc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1935" column="12" bodyfile="C/exec.c" bodystart="1935" bodyend="1940"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1acb44a0d829ff407e7061db01d5fac870" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int cut_up_to_next_disjunction</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>cut_up_to_next_disjunction</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1942" column="12" bodyfile="C/exec.c" bodystart="1942" bodyend="1967"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a160e6ad3d37c54d0ad837a8e1c5baf88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Yap_Reset</definition>
        <argsstring>(yap_reset_t mode, bool hard)</argsstring>
        <name>Yap_Reset</name>
        <param>
          <type>yap_reset_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hard</declname>
        </param>
        <briefdescription>
<para>Reset the Prolog engine. </para>
        </briefdescription>
        <detaileddescription>
<para>If <emphasis>Hard</emphasis> resèt the global <ref refid="structstack__el" kindref="compound">stack_el</ref> If p_no_use_&apos;soft_float keei</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>xf</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hard</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="1978" column="6" bodyfile="C/exec.c" bodystart="1978" bodyend="2007"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1aca356bde0b8184f2748ada4064e4fc52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_cleanup_cp</definition>
        <argsstring>(choiceptr cp_b)</argsstring>
        <name>is_cleanup_cp</name>
        <param>
          <type><ref refid="structchoicept" kindref="compound">choiceptr</ref></type>
          <declname>cp_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="2009" column="6" bodyfile="C/exec.c" bodystart="2009" bodyend="2025"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a860b376ceca16e8774666ad499cd921b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Yap_InitYaamRegs</definition>
        <argsstring>(int myworker_id, bool full_reset)</argsstring>
        <name>Yap_InitYaamRegs</name>
        <param>
          <type>int</type>
          <declname>myworker_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>full_reset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="2028" column="6" bodyfile="C/exec.c" bodystart="2028" bodyend="2116"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1ad2c0808f1416473bda3fb9e8c299b9be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void InitCommaPreds</definition>
        <argsstring>(void)</argsstring>
        <name>InitCommaPreds</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="2118" column="13" bodyfile="C/exec.c" bodystart="2118" bodyend="2124"/>
      </memberdef>
      <memberdef kind="function" id="exec_8c_1a441e43e008b6fd3b29a888c2a9be0a2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Yap_InitExecFs</definition>
        <argsstring>(void)</argsstring>
        <name>Yap_InitExecFs</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/exec.c" line="2126" column="6" bodyfile="C/exec.c" bodystart="2126" bodyend="2180"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C/exec.c"/>
  </compounddef>
</doxygen>
