<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="conceptdif_22" kind="concept">
    <compoundname>dif/2</compoundname>
    <initializer>template&lt;&gt;
concept dif/2 =     </initializer>
    <briefdescription>
<para><bold>dif</bold>( <emphasis>X</emphasis>, <emphasis>Y</emphasis>) </para>
    </briefdescription>
    <detaileddescription>
<para>Succeed if the two arguments do not unify A call to <ref refid="classdif_22" kindref="compound">dif/2</ref> will suspend if unification may still succeed or fail, anxd will fail if they always unify</para>
<para>Dif is tricky because we need to wake up on the two variables being bound together, or on any variable of the term being bound to another Also, the day YAP fully supports infinite rational trees, dif should work for them too Hence, term comparison should not be implemented in Prolog</para>
<para>This is the way dif works The &apos;$constraining_variables&apos; predicate does not know anything about dif semantics, it just compares two terms for equaility and is based on compare If it succeeds without generating a list of variables, the terms are equal and dif fails If it fails, dif succeeds</para>
<para>If it succeeds but it creates a list of variables, dif creates suspension records for all these variables on the &apos;$redo_dif&apos;(X, Y, V) goal V is a flag that says whether dif has completed or not, X and Y are the original goals Whenever one of these variables is bound, it calls &apos;$redo_dif&apos; again &apos;$redo_dif&apos; will then check whether V was bound If it was, dif has succeeded and redo_dif just exits Otherwise, &apos;$redo_dif&apos; will call dif again to see what happened</para>
<para>Dif needs two extensions from the suspension engine:</para>
<para>First, it needs for the engine to be careful when binding two suspended j variables Basically, in this case the engine must be sure to wake up one of the goals, as they may make dif fail The way the engine does so is by searching the list of suspended variables, and search whether they share a common suspended goal If they do, that suspended goal is added to the WokenList</para>
<para>Second, thanks to dif we may try to suspend on the same variable several times dif calls a special version of freeze that checks whether that is in fact the case </para>
    </detaileddescription>
    <location file="pl/corout.yap" line="1" column="1"/>
  </compounddef>
</doxygen>
