<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classYAPVarTerm" kind="class" language="C++" prot="public">
    <compoundname>YAPVarTerm</compoundname>
    <basecompoundref refid="classYAPTerm" prot="public" virt="non-virtual">YAPTerm</basecompoundref>
    <includes refid="tmp_2yapt_8hh" local="no">yapt.hh</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classYAPVarTerm_1afc97fd5868ee65aac8b220ec43f2bf0d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>YAPTerm</definition>
        <argsstring></argsstring>
        <name>YAPTerm</name>
        <qualifiedname>YAPVarTerm::YAPTerm</qualifiedname>
        <param>
          <type><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapt.hh" line="667" column="16" bodyfile="/home/vsc/github/yap/CXX/tmp/yapt.hh" bodystart="667" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classYAPVarTerm_1a1a31ee5e727a492650d8242fcdab38a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>YAPVarTerm</definition>
        <argsstring>()</argsstring>
        <name>YAPVarTerm</name>
        <qualifiedname>YAPVarTerm::YAPVarTerm</qualifiedname>
        <briefdescription>
<para>constructor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapt.hh" line="671" column="3" bodyfile="/home/vsc/github/yap/CXX/tmp/yapt.hh" bodystart="671" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a7bf155cd1e7c6587fe1ee2d7dae8ef4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CELL *</type>
        <definition>CELL * getVar</definition>
        <argsstring>()</argsstring>
        <name>getVar</name>
        <qualifiedname>YAPVarTerm::getVar</qualifiedname>
        <briefdescription>
<para>get the internal representation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapt.hh" line="676" column="8" bodyfile="/home/vsc/github/yap/CXX/tmp/yapt.hh" bodystart="676" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a4d168430df924a67a948706521cc430e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>YAPVarTerm</definition>
        <argsstring>(Term t)</argsstring>
        <name>YAPVarTerm</name>
        <qualifiedname>YAPVarTerm::YAPVarTerm</qualifiedname>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>is the variable bound to another one </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapt.hh" line="678" column="3" bodyfile="/home/vsc/github/yap/CXX/tmp/yapt.hh" bodystart="678" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a3bba2e394da10c9d5d7ac5d0de36f82e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool unbound</definition>
        <argsstring>()</argsstring>
        <name>unbound</name>
        <qualifiedname>YAPVarTerm::unbound</qualifiedname>
        <briefdescription>
<para>type check for unbound </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapt.hh" line="684" column="8" bodyfile="/home/vsc/github/yap/CXX/tmp/yapt.hh" bodystart="684" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1afd813190d8ffe82314aa8e7d35fe8788" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isVar</definition>
        <argsstring>()</argsstring>
        <name>isVar</name>
        <qualifiedname>YAPVarTerm::isVar</qualifiedname>
        <reimplements refid="classYAPTerm_1a9ea7108484abde8985bee0ab1d807360">isVar</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapt.hh" line="685" column="15" bodyfile="/home/vsc/github/yap/CXX/tmp/yapt.hh" bodystart="685" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1af447e7cad50d401cb63a7e98362c51c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isAtom</definition>
        <argsstring>()</argsstring>
        <name>isAtom</name>
        <qualifiedname>YAPVarTerm::isAtom</qualifiedname>
        <reimplements refid="classYAPTerm_1a3fa5279dfa0c98b5272459ec64151325">isAtom</reimplements>
        <briefdescription>
<para>type check for unound </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapt.hh" line="686" column="15" bodyfile="/home/vsc/github/yap/CXX/tmp/yapt.hh" bodystart="686" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a47a971585836b0cd992f6436d9292114" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isInteger</definition>
        <argsstring>()</argsstring>
        <name>isInteger</name>
        <qualifiedname>YAPVarTerm::isInteger</qualifiedname>
        <reimplements refid="classYAPTerm_1a16626d5bc393ef2636260ee174e1a424">isInteger</reimplements>
        <briefdescription>
<para>type check for atom </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapt.hh" line="687" column="15" bodyfile="/home/vsc/github/yap/CXX/tmp/yapt.hh" bodystart="687" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a5a985db25cbf98a53c5454fae9a3f5f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isFloat</definition>
        <argsstring>()</argsstring>
        <name>isFloat</name>
        <qualifiedname>YAPVarTerm::isFloat</qualifiedname>
        <reimplements refid="classYAPTerm_1aaf315cdc04d99d6badb9614bbf7197e2">isFloat</reimplements>
        <briefdescription>
<para>type check for integer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapt.hh" line="688" column="15" bodyfile="/home/vsc/github/yap/CXX/tmp/yapt.hh" bodystart="688" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a288713be3e0f84ab9ed777c650ae6cbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isString</definition>
        <argsstring>()</argsstring>
        <name>isString</name>
        <qualifiedname>YAPVarTerm::isString</qualifiedname>
        <reimplements refid="classYAPTerm_1aca0e42cb6a5f3e3745ea01e86c2c13bc">isString</reimplements>
        <briefdescription>
<para>type check for floating-point </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapt.hh" line="689" column="15" bodyfile="/home/vsc/github/yap/CXX/tmp/yapt.hh" bodystart="689" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a23e65be282f08c36fe3d98e0963b947a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isCompound</definition>
        <argsstring>()</argsstring>
        <name>isCompound</name>
        <qualifiedname>YAPVarTerm::isCompound</qualifiedname>
        <reimplements refid="classYAPTerm_1aff847477b25724ebb960ed3445d51400">isCompound</reimplements>
        <briefdescription>
<para>type check for a string &quot; ... &quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapt.hh" line="690" column="15" bodyfile="/home/vsc/github/yap/CXX/tmp/yapt.hh" bodystart="690" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1af918dfaf6c0c0d3b69f3af0fbf1f525a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isAppl</definition>
        <argsstring>()</argsstring>
        <name>isAppl</name>
        <qualifiedname>YAPVarTerm::isAppl</qualifiedname>
        <reimplements refid="classYAPTerm_1a939025805a96e3fd93a61884a3b217f2">isAppl</reimplements>
        <briefdescription>
<para>is a primitive term </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapt.hh" line="691" column="15" bodyfile="/home/vsc/github/yap/CXX/tmp/yapt.hh" bodystart="691" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a82cdac4e5b6cb165f1168b92f4860c64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isPair</definition>
        <argsstring>()</argsstring>
        <name>isPair</name>
        <qualifiedname>YAPVarTerm::isPair</qualifiedname>
        <reimplements refid="classYAPTerm_1a21e0b1a710668c121da5b55cb86e626a">isPair</reimplements>
        <briefdescription>
<para>is a structured term </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapt.hh" line="692" column="15" bodyfile="/home/vsc/github/yap/CXX/tmp/yapt.hh" bodystart="692" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1aabf9b777d7adf56a3034cae8cebd83be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isGround</definition>
        <argsstring>()</argsstring>
        <name>isGround</name>
        <qualifiedname>YAPVarTerm::isGround</qualifiedname>
        <reimplements refid="classYAPTerm_1ab11a72e64b950c3001b9fe20fc34682b">isGround</reimplements>
        <briefdescription>
<para>is a pair term </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapt.hh" line="693" column="15" bodyfile="/home/vsc/github/yap/CXX/tmp/yapt.hh" bodystart="693" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a52fa1f88b63282e88ecb8ef38b4ee0f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isList</definition>
        <argsstring>()</argsstring>
        <name>isList</name>
        <qualifiedname>YAPVarTerm::isList</qualifiedname>
        <reimplements refid="classYAPTerm_1a42e33ecd59575fc1ce1b1f84df6e256e">isList</reimplements>
        <briefdescription>
<para>term is ground </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapt.hh" line="694" column="15" bodyfile="/home/vsc/github/yap/CXX/tmp/yapt.hh" bodystart="694" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a1a31ee5e727a492650d8242fcdab38a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>YAPVarTerm</definition>
        <argsstring>()</argsstring>
        <name>YAPVarTerm</name>
        <qualifiedname>YAPVarTerm::YAPVarTerm</qualifiedname>
        <briefdescription>
<para>constructor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapt.hh" line="689" column="3" bodyfile="/home/vsc/github/yap/CXX/yapt.hh" bodystart="689" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a7bf155cd1e7c6587fe1ee2d7dae8ef4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>CELL *</type>
        <definition>CELL * getVar</definition>
        <argsstring>()</argsstring>
        <name>getVar</name>
        <qualifiedname>YAPVarTerm::getVar</qualifiedname>
        <briefdescription>
<para>get the internal representation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapt.hh" line="694" column="8" bodyfile="/home/vsc/github/yap/CXX/yapt.hh" bodystart="694" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a4d168430df924a67a948706521cc430e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>YAPVarTerm</definition>
        <argsstring>(Term t)</argsstring>
        <name>YAPVarTerm</name>
        <qualifiedname>YAPVarTerm::YAPVarTerm</qualifiedname>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>is the variable bound to another one </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapt.hh" line="696" column="3" bodyfile="/home/vsc/github/yap/CXX/yapt.hh" bodystart="696" bodyend="700"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a3bba2e394da10c9d5d7ac5d0de36f82e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool unbound</definition>
        <argsstring>()</argsstring>
        <name>unbound</name>
        <qualifiedname>YAPVarTerm::unbound</qualifiedname>
        <briefdescription>
<para>type check for unbound </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapt.hh" line="702" column="8" bodyfile="/home/vsc/github/yap/CXX/yapt.hh" bodystart="702" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1afd813190d8ffe82314aa8e7d35fe8788" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isVar</definition>
        <argsstring>()</argsstring>
        <name>isVar</name>
        <qualifiedname>YAPVarTerm::isVar</qualifiedname>
        <reimplements refid="classYAPTerm_1a9ea7108484abde8985bee0ab1d807360">isVar</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapt.hh" line="703" column="15" bodyfile="/home/vsc/github/yap/CXX/yapt.hh" bodystart="703" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1af447e7cad50d401cb63a7e98362c51c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isAtom</definition>
        <argsstring>()</argsstring>
        <name>isAtom</name>
        <qualifiedname>YAPVarTerm::isAtom</qualifiedname>
        <reimplements refid="classYAPTerm_1a3fa5279dfa0c98b5272459ec64151325">isAtom</reimplements>
        <briefdescription>
<para>type check for unound </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapt.hh" line="704" column="15" bodyfile="/home/vsc/github/yap/CXX/yapt.hh" bodystart="704" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a47a971585836b0cd992f6436d9292114" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isInteger</definition>
        <argsstring>()</argsstring>
        <name>isInteger</name>
        <qualifiedname>YAPVarTerm::isInteger</qualifiedname>
        <reimplements refid="classYAPTerm_1a16626d5bc393ef2636260ee174e1a424">isInteger</reimplements>
        <briefdescription>
<para>type check for atom </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapt.hh" line="705" column="15" bodyfile="/home/vsc/github/yap/CXX/yapt.hh" bodystart="705" bodyend="705"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a5a985db25cbf98a53c5454fae9a3f5f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isFloat</definition>
        <argsstring>()</argsstring>
        <name>isFloat</name>
        <qualifiedname>YAPVarTerm::isFloat</qualifiedname>
        <reimplements refid="classYAPTerm_1aaf315cdc04d99d6badb9614bbf7197e2">isFloat</reimplements>
        <briefdescription>
<para>type check for integer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapt.hh" line="706" column="15" bodyfile="/home/vsc/github/yap/CXX/yapt.hh" bodystart="706" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a288713be3e0f84ab9ed777c650ae6cbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isString</definition>
        <argsstring>()</argsstring>
        <name>isString</name>
        <qualifiedname>YAPVarTerm::isString</qualifiedname>
        <reimplements refid="classYAPTerm_1aca0e42cb6a5f3e3745ea01e86c2c13bc">isString</reimplements>
        <briefdescription>
<para>type check for floating-point </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapt.hh" line="707" column="15" bodyfile="/home/vsc/github/yap/CXX/yapt.hh" bodystart="707" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a23e65be282f08c36fe3d98e0963b947a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isCompound</definition>
        <argsstring>()</argsstring>
        <name>isCompound</name>
        <qualifiedname>YAPVarTerm::isCompound</qualifiedname>
        <reimplements refid="classYAPTerm_1aff847477b25724ebb960ed3445d51400">isCompound</reimplements>
        <briefdescription>
<para>type check for a string &quot; ... &quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapt.hh" line="708" column="15" bodyfile="/home/vsc/github/yap/CXX/yapt.hh" bodystart="708" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1af918dfaf6c0c0d3b69f3af0fbf1f525a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isAppl</definition>
        <argsstring>()</argsstring>
        <name>isAppl</name>
        <qualifiedname>YAPVarTerm::isAppl</qualifiedname>
        <reimplements refid="classYAPTerm_1a939025805a96e3fd93a61884a3b217f2">isAppl</reimplements>
        <briefdescription>
<para>is a primitive term </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapt.hh" line="709" column="15" bodyfile="/home/vsc/github/yap/CXX/yapt.hh" bodystart="709" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a82cdac4e5b6cb165f1168b92f4860c64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isPair</definition>
        <argsstring>()</argsstring>
        <name>isPair</name>
        <qualifiedname>YAPVarTerm::isPair</qualifiedname>
        <reimplements refid="classYAPTerm_1a21e0b1a710668c121da5b55cb86e626a">isPair</reimplements>
        <briefdescription>
<para>is a structured term </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapt.hh" line="710" column="15" bodyfile="/home/vsc/github/yap/CXX/yapt.hh" bodystart="710" bodyend="710"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1aabf9b777d7adf56a3034cae8cebd83be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isGround</definition>
        <argsstring>()</argsstring>
        <name>isGround</name>
        <qualifiedname>YAPVarTerm::isGround</qualifiedname>
        <reimplements refid="classYAPTerm_1ab11a72e64b950c3001b9fe20fc34682b">isGround</reimplements>
        <briefdescription>
<para>is a pair term </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapt.hh" line="711" column="15" bodyfile="/home/vsc/github/yap/CXX/yapt.hh" bodystart="711" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="classYAPVarTerm_1a52fa1f88b63282e88ecb8ef38b4ee0f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool isList</definition>
        <argsstring>()</argsstring>
        <name>isList</name>
        <qualifiedname>YAPVarTerm::isList</qualifiedname>
        <reimplements refid="classYAPTerm_1a42e33ecd59575fc1ce1b1f84df6e256e">isList</reimplements>
        <briefdescription>
<para>term is ground </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapt.hh" line="712" column="15" bodyfile="/home/vsc/github/yap/CXX/yapt.hh" bodystart="712" bodyend="712"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Variable Term. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>YAPTerm</label>
        <link refid="classYAPTerm"/>
      </node>
      <node id="1">
        <label>YAPVarTerm</label>
        <link refid="classYAPVarTerm"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>YAPTerm</label>
        <link refid="classYAPTerm"/>
      </node>
      <node id="1">
        <label>YAPVarTerm</label>
        <link refid="classYAPVarTerm"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/vsc/github/yap/CXX/tmp/yapt.hh" line="666" column="1" bodyfile="/home/vsc/github/yap/CXX/tmp/yapt.hh" bodystart="666" bodyend="695"/>
    <listofallmembers>
      <member refid="classYAPTerm_1ab113801eac8ec2c37f7d69f86431a9c2" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>arg</name></member>
      <member refid="classYAPTerm_1ab113801eac8ec2c37f7d69f86431a9c2" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>arg</name></member>
      <member refid="classYAPTerm_1abb9a297c2305f37dcbc7ec1f8972fe3c" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>arity</name></member>
      <member refid="classYAPTerm_1abb9a297c2305f37dcbc7ec1f8972fe3c" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>arity</name></member>
      <member refid="classYAPTerm_1aacf1aea1fa6911abfa3557843d0a0c8d" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>bind</name></member>
      <member refid="classYAPTerm_1a7e9c53c62e12aea66b490d43b556a683" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>bind</name></member>
      <member refid="classYAPTerm_1aacf1aea1fa6911abfa3557843d0a0c8d" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>bind</name></member>
      <member refid="classYAPTerm_1a7e9c53c62e12aea66b490d43b556a683" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>bind</name></member>
      <member refid="classYAPTerm_1a0e4a83a87ff58e403d8c4a4e66e5b019" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>deepCopy</name></member>
      <member refid="classYAPTerm_1a0e4a83a87ff58e403d8c4a4e66e5b019" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>deepCopy</name></member>
      <member refid="classYAPTerm_1ad68ceb75dac15df87f18353bf4e901ee" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>exactlyEqual</name></member>
      <member refid="classYAPTerm_1ad68ceb75dac15df87f18353bf4e901ee" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>exactlyEqual</name></member>
      <member refid="classYAPTerm_1aae36bb12ce7dab29e680048725cfb905" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>getArg</name></member>
      <member refid="classYAPTerm_1a50b19125fd11c17e65dc2c7d7c0f232e" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>getArg</name></member>
      <member refid="classYAPVarTerm_1a7bf155cd1e7c6587fe1ee2d7dae8ef4f" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>getVar</name></member>
      <member refid="classYAPVarTerm_1a7bf155cd1e7c6587fe1ee2d7dae8ef4f" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>getVar</name></member>
      <member refid="classYAPTerm_1a7e2daafeb40df9547e1b3cc3d1ac0e96" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>gt</name></member>
      <member refid="classYAPTerm_1a7e2daafeb40df9547e1b3cc3d1ac0e96" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>gt</name></member>
      <member refid="classYAPTerm_1a84518c0718e6650566b120ca5b85db02" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>handle</name></member>
      <member refid="classYAPTerm_1a84518c0718e6650566b120ca5b85db02" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>handle</name></member>
      <member refid="classYAPTerm_1a2974e0128f95576a99fc78ed38ae8085" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>hashTerm</name></member>
      <member refid="classYAPTerm_1a2974e0128f95576a99fc78ed38ae8085" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>hashTerm</name></member>
      <member refid="classYAPTerm_1a1b2ed9bd9891b4f7f8c58783d9425d71" prot="protected" virt="non-virtual"><scope>YAPVarTerm</scope><name>hdl</name></member>
      <member refid="classYAPTerm_1a0e887830311eba8605002670b70699ed" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>initialized</name></member>
      <member refid="classYAPTerm_1a0e887830311eba8605002670b70699ed" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>initialized</name></member>
      <member refid="classYAPVarTerm_1af918dfaf6c0c0d3b69f3af0fbf1f525a" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isAppl</name></member>
      <member refid="classYAPVarTerm_1af918dfaf6c0c0d3b69f3af0fbf1f525a" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isAppl</name></member>
      <member refid="classYAPVarTerm_1af447e7cad50d401cb63a7e98362c51c7" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isAtom</name></member>
      <member refid="classYAPVarTerm_1af447e7cad50d401cb63a7e98362c51c7" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isAtom</name></member>
      <member refid="classYAPVarTerm_1a23e65be282f08c36fe3d98e0963b947a" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isCompound</name></member>
      <member refid="classYAPVarTerm_1a23e65be282f08c36fe3d98e0963b947a" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isCompound</name></member>
      <member refid="classYAPVarTerm_1a5a985db25cbf98a53c5454fae9a3f5f0" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isFloat</name></member>
      <member refid="classYAPVarTerm_1a5a985db25cbf98a53c5454fae9a3f5f0" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isFloat</name></member>
      <member refid="classYAPVarTerm_1aabf9b777d7adf56a3034cae8cebd83be" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isGround</name></member>
      <member refid="classYAPVarTerm_1aabf9b777d7adf56a3034cae8cebd83be" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isGround</name></member>
      <member refid="classYAPVarTerm_1a47a971585836b0cd992f6436d9292114" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isInteger</name></member>
      <member refid="classYAPVarTerm_1a47a971585836b0cd992f6436d9292114" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isInteger</name></member>
      <member refid="classYAPVarTerm_1a52fa1f88b63282e88ecb8ef38b4ee0f2" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isList</name></member>
      <member refid="classYAPVarTerm_1a52fa1f88b63282e88ecb8ef38b4ee0f2" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isList</name></member>
      <member refid="classYAPVarTerm_1a82cdac4e5b6cb165f1168b92f4860c64" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isPair</name></member>
      <member refid="classYAPVarTerm_1a82cdac4e5b6cb165f1168b92f4860c64" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isPair</name></member>
      <member refid="classYAPVarTerm_1a288713be3e0f84ab9ed777c650ae6cbc" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isString</name></member>
      <member refid="classYAPVarTerm_1a288713be3e0f84ab9ed777c650ae6cbc" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isString</name></member>
      <member refid="classYAPVarTerm_1afd813190d8ffe82314aa8e7d35fe8788" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isVar</name></member>
      <member refid="classYAPVarTerm_1afd813190d8ffe82314aa8e7d35fe8788" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>isVar</name></member>
      <member refid="classYAPTerm_1a1a37a59d4c80fc3c2606fdedeeb4a218" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>mk</name></member>
      <member refid="classYAPTerm_1a1a37a59d4c80fc3c2606fdedeeb4a218" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>mk</name></member>
      <member refid="classYAPTerm_1a5d085ea9020eec5b07e44d3a03a7bdf4" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>numberVars</name></member>
      <member refid="classYAPTerm_1a5d085ea9020eec5b07e44d3a03a7bdf4" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>numberVars</name></member>
      <member refid="classYAPTerm_1ae533addedf4448e6fb256e010c28a2e3" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>operator[]</name></member>
      <member refid="classYAPTerm_1ae533addedf4448e6fb256e010c28a2e3" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>operator[]</name></member>
      <member refid="classYAPTerm_1a34fc41ad9a79d1823f9278ed78337bc4" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>pop_t</name></member>
      <member refid="classYAPTerm_1a34fc41ad9a79d1823f9278ed78337bc4" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>pop_t</name></member>
      <member refid="classYAPTerm_1a47b5bd780cb7d4cd7fa4578c295fb838" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>put</name></member>
      <member refid="classYAPTerm_1a47b5bd780cb7d4cd7fa4578c295fb838" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>put</name></member>
      <member refid="classYAPTerm_1ad20897c5c8bd47f5d4005989bead0e55" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>reset</name></member>
      <member refid="classYAPTerm_1a69fffe0c41e001d6fdd0840f61a56df4" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>tag</name></member>
      <member refid="classYAPTerm_1a69fffe0c41e001d6fdd0840f61a56df4" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>tag</name></member>
      <member refid="classYAPTerm_1ab7852318b7495ccd6362d74dd6e5c652" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>term</name></member>
      <member refid="classYAPTerm_1ab7852318b7495ccd6362d74dd6e5c652" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>term</name></member>
      <member refid="classYAPTerm_1ad1ea0d530c1ceea2efc1661e83c6ccb7" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>text</name></member>
      <member refid="classYAPTerm_1ad1ea0d530c1ceea2efc1661e83c6ccb7" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>text</name></member>
      <member refid="classYAPVarTerm_1a3bba2e394da10c9d5d7ac5d0de36f82e" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>unbound</name></member>
      <member refid="classYAPVarTerm_1a3bba2e394da10c9d5d7ac5d0de36f82e" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>unbound</name></member>
      <member refid="classYAPTerm_1a5373f97ad03301a4eb97808b6c72e12d" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>unifiable</name></member>
      <member refid="classYAPTerm_1a5373f97ad03301a4eb97808b6c72e12d" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>unifiable</name></member>
      <member refid="classYAPTerm_1ad10da53c46207ede9f418086ed153d5b" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>unify</name></member>
      <member refid="classYAPTerm_1ad10da53c46207ede9f418086ed153d5b" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>unify</name></member>
      <member refid="classYAPTerm_1aceaa99597084fe2049d5de67eb6c4cf1" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>variant</name></member>
      <member refid="classYAPTerm_1aceaa99597084fe2049d5de67eb6c4cf1" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>variant</name></member>
      <member refid="classYAPVarTerm_1afc97fd5868ee65aac8b220ec43f2bf0d" prot="private" virt="non-virtual"><scope>YAPVarTerm</scope><name>YAPTerm</name></member>
      <member refid="classYAPTerm_1a0238fde4b780fb0f67ec7c3a1440edba" prot="public" virt="non-virtual" ambiguityscope="YAPTerm::"><scope>YAPVarTerm</scope><name>YAPTerm</name></member>
      <member refid="classYAPTerm_1a5b95fd101b73207682463ea473b6d2c0" prot="public" virt="non-virtual" ambiguityscope="YAPTerm::"><scope>YAPVarTerm</scope><name>YAPTerm</name></member>
      <member refid="classYAPTerm_1a8a604a0dd3551e7eac340ff75c06ac16" prot="public" virt="non-virtual" ambiguityscope="YAPTerm::"><scope>YAPVarTerm</scope><name>YAPTerm</name></member>
      <member refid="classYAPTerm_1aa7618a4103a2b970e30a608516eefb3d" prot="public" virt="non-virtual" ambiguityscope="YAPTerm::"><scope>YAPVarTerm</scope><name>YAPTerm</name></member>
      <member refid="classYAPTerm_1a9e2cd85e45ba4503adf7ae394d2d74ee" prot="public" virt="non-virtual" ambiguityscope="YAPTerm::"><scope>YAPVarTerm</scope><name>YAPTerm</name></member>
      <member refid="classYAPTerm_1ab4b05d43c5d28b981566dc5d82e7f8a6" prot="public" virt="non-virtual" ambiguityscope="YAPTerm::"><scope>YAPVarTerm</scope><name>YAPTerm</name></member>
      <member refid="classYAPVarTerm_1a1a31ee5e727a492650d8242fcdab38a5" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>YAPVarTerm</name></member>
      <member refid="classYAPVarTerm_1a4d168430df924a67a948706521cc430e" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>YAPVarTerm</name></member>
      <member refid="classYAPVarTerm_1a1a31ee5e727a492650d8242fcdab38a5" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>YAPVarTerm</name></member>
      <member refid="classYAPVarTerm_1a4d168430df924a67a948706521cc430e" prot="public" virt="non-virtual"><scope>YAPVarTerm</scope><name>YAPVarTerm</name></member>
      <member refid="classYAPTerm_1af294a9767b1ac6cb6519b871ea641b46" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>~YAPTerm</name></member>
      <member refid="classYAPTerm_1af294a9767b1ac6cb6519b871ea641b46" prot="public" virt="virtual"><scope>YAPVarTerm</scope><name>~YAPTerm</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
