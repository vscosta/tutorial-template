<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classensure__loaded_21" kind="predicate" language="Prolog" prot="public">
    <compoundname>ensure_loaded/1</compoundname>
    <briefdescription>
<para><bold>ensure_loaded</bold>(+ <emphasis>F</emphasis>) </para>
    </briefdescription>
    <detaileddescription>
<para>defined in the <emphasis>ISO</emphasis> standard</para>
<para>When the files specified by <emphasis>F</emphasis> are module files, <ref refid="classensure__loaded_21" kindref="compound">ensure_loaded/1</ref> loads them if they have note been previously loaded, otherwise advertises the user about the existing name clashes and prompts about importing or not those predicates Predicates which are not public remain invisible</para>
<para>When the files are not module files, <ref refid="classensure__loaded_21" kindref="compound">ensure_loaded/1</ref> loads them if they have not been loaded before, and does nothing otherwise</para>
<para><emphasis>F</emphasis> must be a list containing the names of the files to load </para>
    </detaileddescription>
    <location file="pl/lf.yap" line="3" column="1" bodyfile="pl/lf.yap" bodystart="3" bodyend="-1"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
