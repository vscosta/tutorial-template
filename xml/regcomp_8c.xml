<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="regcomp_8c" kind="file" language="C++">
    <compoundname>regcomp.c</compoundname>
    <includes refid="YapInterface_8h" local="yes">YapInterface.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="yapregex_8h" local="yes">yapregex.h</includes>
    <includes refid="collate_8h" local="yes">collate.h</includes>
    <includes refid="regex2_8h" local="yes">regex2.h</includes>
    <includes refid="utils_8h" local="yes">utils.h</includes>
    <includes refid="cclass_8h" local="yes">cclass.h</includes>
    <includes refid="cname_8h" local="yes">cname.h</includes>
    <incdepgraph>
      <node id="15">
        <label>ScannerTypes.h</label>
        <link refid="ScannerTypes_8h_source"/>
      </node>
      <node id="17">
        <label>threads.h</label>
        <link refid="threads_8h_source"/>
      </node>
      <node id="4">
        <label>YapDefs.h</label>
        <link refid="YapDefs_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>YapError.h</label>
        <link refid="YapError_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>YapErrors.h</label>
        <link refid="YapErrors_8h"/>
      </node>
      <node id="16">
        <label>YapFormat.h</label>
        <link refid="YapFormat_8h_source"/>
      </node>
      <node id="18">
        <label>YapInit.h</label>
        <link refid="YapInit_8h"/>
      </node>
      <node id="2">
        <label>YapInterface.h</label>
        <link refid="YapInterface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>YapTerm.h</label>
        <link refid="YapTerm_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>cclass.h</label>
        <link refid="cclass_8h"/>
      </node>
      <node id="28">
        <label>cname.h</label>
        <link refid="cname_8h"/>
      </node>
      <node id="21">
        <label>collate.h</label>
        <link refid="collate_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/vsc/github/yap/library/regex/regcomp.c</label>
        <link refid="regcomp_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>regex2.h</label>
        <link refid="regex2_8h_source"/>
      </node>
      <node id="25">
        <label>utils.h</label>
        <link refid="utils_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>yapregex.h</label>
        <link refid="yapregex_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>../os/encoding.h</label>
        <link refid="encoding_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>YapConfig.h</label>
      </node>
      <node id="11">
        <label>YapIOConfig.h</label>
      </node>
      <node id="8">
        <label>YapTermConfig.h</label>
      </node>
      <node id="26">
        <label>assert.h</label>
      </node>
      <node id="9">
        <label>config.h</label>
      </node>
      <node id="23">
        <label>limits.h</label>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="12">
        <label>string.h</label>
      </node>
      <node id="22">
        <label>sys/types.h</label>
      </node>
      <node id="19">
        <label>wchar.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structparse" prot="public">parse</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="regcomp_8c_1a4d75c71d09855c3c47f35622b289316f" prot="public" static="no">
        <name>NPAREN</name>
        <initializer>10       /* we need to remember () 1-9 for back refs */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="154" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1aa25dac8b80db8b8f03732eeb9ca23934" prot="public" static="no">
        <name>PEEK</name>
        <param></param>
        <initializer>(*p-&gt;next)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="221" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a7eb3d11386334057b36a2a29564502ca" prot="public" static="no">
        <name>PEEK2</name>
        <param></param>
        <initializer>(*(p-&gt;next + 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="222" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1ace441594c4bd8da94fd64b1c612ca948" prot="public" static="no">
        <name>MORE</name>
        <param></param>
        <initializer>(p-&gt;next &lt; p-&gt;end)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="223" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1ae8a7b434a5c7a7f1cc2ba29e93870758" prot="public" static="no">
        <name>MORE2</name>
        <param></param>
        <initializer>(p-&gt;next + 1 &lt; p-&gt;end)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="224" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1aa27d4f57d0739004f70aba0719150b57" prot="public" static="no">
        <name>SEE</name>
        <param><defname>c</defname></param>
        <initializer>(MORE() &amp;&amp; PEEK() == (c))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="225" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a2a2a6d570798c3d54c3ba019b07bff5b" prot="public" static="no">
        <name>SEETWO</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(MORE() &amp;&amp; MORE2() &amp;&amp; PEEK() == (a) &amp;&amp; PEEK2() == (b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="226" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1aec4cb663b8ad7a53a03298cddd7ed0ed" prot="public" static="no">
        <name>EAT</name>
        <param><defname>c</defname></param>
        <initializer>((SEE(c)) ? (NEXT(), 1) : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="227" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1afabd6ecec8f255325e095428354449e0" prot="public" static="no">
        <name>EATTWO</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((SEETWO(a, b)) ? (NEXT2(), 1) : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="228" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1afa19e2eadb751f3599e443d073862a2f" prot="public" static="no">
        <name>NEXT</name>
        <param></param>
        <initializer>(p-&gt;next++)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="229" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a0c4c28b39436d006b6efc2d8e796d784" prot="public" static="no">
        <name>NEXT2</name>
        <param></param>
        <initializer>(p-&gt;next += 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="230" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a9f50fecef89d9528dab4f03e00cc3a83" prot="public" static="no">
        <name>NEXTn</name>
        <param><defname>n</defname></param>
        <initializer>(p-&gt;next += (n))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="231" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a378c35ea281e1ad0d8e175cf565e7eb7" prot="public" static="no">
        <name>GETNEXT</name>
        <param></param>
        <initializer>(*p-&gt;next++)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="232" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a7dab3e6a7c837ba9fd0209963b8d6d76" prot="public" static="no">
        <name>SETERROR</name>
        <param><defname>e</defname></param>
        <initializer>seterr(p, (e))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="233" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1aeb49e5164a8e40811cc769c1fd331d66" prot="public" static="no">
        <name>REQUIRE</name>
        <param><defname>co</defname></param>
        <param><defname>e</defname></param>
        <initializer>((co) || SETERROR(e))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="234" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a0b21bf0345d6bc495eb91b8ca338f66c" prot="public" static="no">
        <name>MUSTSEE</name>
        <param><defname>c</defname></param>
        <param><defname>e</defname></param>
        <initializer>(REQUIRE(MORE() &amp;&amp; PEEK() == (c), e))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="235" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a72f2f2b28c8abc20f687eb02b7af4bcf" prot="public" static="no">
        <name>MUSTEAT</name>
        <param><defname>c</defname></param>
        <param><defname>e</defname></param>
        <initializer>(REQUIRE(MORE() &amp;&amp; GETNEXT() == (c), e))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="236" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a9daf6c2c089e7dcee7335b7e8e7a9a27" prot="public" static="no">
        <name>MUSTNOTSEE</name>
        <param><defname>c</defname></param>
        <param><defname>e</defname></param>
        <initializer>(REQUIRE(!MORE() || PEEK() != (c), e))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="237" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1aed59dfea56910669e8ad0dcef8a2ea8d" prot="public" static="no">
        <name>EMIT</name>
        <param><defname>op</defname></param>
        <param><defname>sopnd</defname></param>
        <initializer>doemit(p, (sop)(op), (size_t)(sopnd))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="238" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a8e44b28c2ebff8b5b41eedff8a4988a3" prot="public" static="no">
        <name>INSERT</name>
        <param><defname>op</defname></param>
        <param><defname>pos</defname></param>
        <initializer>doinsert(p, (sop)(op), HERE() - (pos) + 1, pos)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="239" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a69e9716ecbad0514d4755e83f2435cce" prot="public" static="no">
        <name>AHEAD</name>
        <param><defname>pos</defname></param>
        <initializer>dofwd(p, pos, HERE() - (pos))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="240" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a66a0070eca9aa4130dec4b380318741a" prot="public" static="no">
        <name>ASTERN</name>
        <param><defname>sop</defname></param>
        <param><defname>pos</defname></param>
        <initializer>EMIT(sop, HERE() - pos)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="241" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a114e866679b13eadadd097635f4fb10d" prot="public" static="no">
        <name>HERE</name>
        <param></param>
        <initializer>(p-&gt;slen)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="242" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1aabbda40c6f9ead8cf0580b32f03afc59" prot="public" static="no">
        <name>THERE</name>
        <param></param>
        <initializer>(p-&gt;slen - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="243" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1aeda59df8383196f8a403d52abb973470" prot="public" static="no">
        <name>THERETHERE</name>
        <param></param>
        <initializer>(p-&gt;slen - 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="244" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a3994d6de1952ba0c53e9121b0db9042c" prot="public" static="no">
        <name>DROP</name>
        <param><defname>n</defname></param>
        <initializer>(p-&gt;slen -= (n))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="245" column="9" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a3a32062110fa975b1721c449fa7863dc" prot="public" static="no">
        <name>never</name>
        <initializer>0 /* some &lt;assert.h&gt;s have bugs too */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="250" column="10" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a8bd4863aae206f6f9c8b949fbec56885" prot="public" static="no">
        <name>GOODFLAGS</name>
        <param><defname>f</defname></param>
        <initializer>((f) &amp; ~REG_DUMP)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="276" column="10"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a5fea9c0bb049b263b4b609b72ef5322c" prot="public" static="no">
        <name>BACKSL</name>
        <initializer>(1 &lt;&lt; CHAR_BIT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="613" column="9"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a0240ac851181b84ac374872dc5434ee4" prot="public" static="no">
        <name>N</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1130" column="9"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a12c2040f25d8e3a7b9e1c2024c618cb6" prot="public" static="no">
        <name>INF</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1131" column="9"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1acf94cdcef32661117a14bbb806832437" prot="public" static="no">
        <name>REP</name>
        <param><defname>f</defname></param>
        <param><defname>t</defname></param>
        <initializer>((f)*8 + (t))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1132" column="9"/>
      </memberdef>
      <memberdef kind="define" id="regcomp_8c_1a01bd739644e8d3cbbb80f37f6ddb8b0e" prot="public" static="no">
        <name>MAP</name>
        <param><defname>n</defname></param>
        <initializer>(((n) &lt;= 1) ? (n) : ((n) == INFINITY) ? INF : N)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1133" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="regcomp_8c_1a41b64e535dce0ae8d9629a4d39a4416d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int collate_load_error</definition>
        <argsstring></argsstring>
        <name>collate_load_error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="81" column="5" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="regcomp_8c_1af6564a63f0d06683d3d43ad2bd1cd65b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int collate_substitute_nontrivial</definition>
        <argsstring></argsstring>
        <name>collate_substitute_nontrivial</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="82" column="5" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="regcomp_8c_1a2f6ea17eab7666bdafbbae2b2dac717b" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char collate_version[STR_LEN]</definition>
        <argsstring>[STR_LEN]</argsstring>
        <name>collate_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="83" column="6" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="regcomp_8c_1ac56659cd53bdf27eb57abf4f53fd4700" prot="public" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char collate_substitute_table[UCHAR_MAX+1][STR_LEN]</definition>
        <argsstring>[UCHAR_MAX+1][STR_LEN]</argsstring>
        <name>collate_substitute_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="84" column="15" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="regcomp_8c_1a65ff85b32b77eecc8a1ea73e54cc6757" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structcollate__st__char__pri" kindref="compound">collate_st_char_pri</ref></type>
        <definition>struct collate_st_char_pri collate_char_pri_table[UCHAR_MAX+1]</definition>
        <argsstring>[UCHAR_MAX+1]</argsstring>
        <name>collate_char_pri_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="85" column="26" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="regcomp_8c_1adb60eea4e8ea9567b035205c5111bd5a" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structcollate__st__chain__pri" kindref="compound">collate_st_chain_pri</ref></type>
        <definition>struct collate_st_chain_pri collate_chain_pri_table[TABLE_SIZE]</definition>
        <argsstring>[TABLE_SIZE]</argsstring>
        <name>collate_chain_pri_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="86" column="27" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="regcomp_8c_1a8eb1ab58fe7e084dbbdcb71c0ecf4c9c" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char nuls[10]</definition>
        <argsstring>[10]</argsstring>
        <name>nuls</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="215" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="215" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="regcomp_8c_1ac30143cee31ff470c0fad3bdad055d53" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int collate_range_cmp</definition>
        <argsstring>(int c1, int c2)</argsstring>
        <name>collate_range_cmp</name>
        <param>
          <type>int</type>
          <declname>c1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="100" column="12" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="100" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1ad27d621612411b6fbc4507190cfa640c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void p_ere</definition>
        <argsstring>(struct parse *p, int stop)</argsstring>
        <name>p_ere</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="366" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="366" bodyend="403" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="165" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a04b6f1c3baa80afbc0ab1d089cb6a347" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void p_ere_exp</definition>
        <argsstring>(struct parse *p)</argsstring>
        <name>p_ere_exp</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="409" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="409" bodyend="550" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="166" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1ab221eb155193663e7a5aca2e0e5ae64d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void p_str</definition>
        <argsstring>(struct parse *p)</argsstring>
        <name>p_str</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="556" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="556" bodyend="561" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="167" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a7ab40319ee915c874e6f023e0a856416" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void p_bre</definition>
        <argsstring>(struct parse *p, int end1, int end2)</argsstring>
        <name>p_bre</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="575" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="575" bodyend="598" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="168" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1ad03becfa0e3485566970cb0826c29cff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int p_simp_re</definition>
        <argsstring>(struct parse *p, int starordinary)</argsstring>
        <name>p_simp_re</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>starordinary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="605" column="5" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="605" bodyend="714" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="169" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a29e762416db32d26231e075152522f28" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int p_count</definition>
        <argsstring>(struct parse *p)</argsstring>
        <name>p_count</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="721" column="5" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="721" bodyend="733" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="170" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a451fa353462d2973aa3ad10448bae854" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void p_bracket</definition>
        <argsstring>(struct parse *p)</argsstring>
        <name>p_bracket</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="742" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="742" bodyend="808" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="171" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1afff10784bf19108748191602fc4b17b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void p_b_term</definition>
        <argsstring>(struct parse *p, cset *cs)</argsstring>
        <name>p_b_term</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structcset" kindref="compound">cset</ref> *</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="814" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="814" bodyend="883" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="172" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a49932b66be6af1a6eb362a5ae7dd0278" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void p_b_cclass</definition>
        <argsstring>(struct parse *p, cset *cs)</argsstring>
        <name>p_b_cclass</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structcset" kindref="compound">cset</ref> *</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="889" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="889" bodyend="974" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="173" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a49304961af7baed985bdf2c15759d2e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void p_b_eclass</definition>
        <argsstring>(struct parse *p, cset *cs)</argsstring>
        <name>p_b_eclass</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structcset" kindref="compound">cset</ref> *</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="982" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="982" bodyend="989" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="174" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1acadcfea7f43ce44d01b968d45ebb5dc5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char p_b_symbol</definition>
        <argsstring>(struct parse *p)</argsstring>
        <name>p_b_symbol</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="996" column="5" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="996" bodyend="1008" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="175" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a5786461312f151109aa68bd028cf54c3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char p_b_coll_elem</definition>
        <argsstring>(struct parse *p, int endc)</argsstring>
        <name>p_b_coll_elem</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1015" column="5" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1015" bodyend="1035" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="176" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1ad229d7831511757090aa9ae325742cf9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char othercase</definition>
        <argsstring>(int ch)</argsstring>
        <name>othercase</name>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1042" column="1" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1042" bodyend="1052" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="177" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a36141f9da5f09dbdae3cb567a1137cb2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bothcases</definition>
        <argsstring>(struct parse *p, int ch)</argsstring>
        <name>bothcases</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1060" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1060" bodyend="1077" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="178" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a0f3fe3420aee4171c65cc22e1001d1dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ordinary</definition>
        <argsstring>(struct parse *p, int ch)</argsstring>
        <name>ordinary</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1083" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1083" bodyend="1094" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="179" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a1a9dcf78513f513609ece871d5fc34fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void nonnewline</definition>
        <argsstring>(struct parse *p)</argsstring>
        <name>nonnewline</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1102" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1102" bodyend="1118" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="180" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a40beb25eb85571c534a013a980924945" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void repeat</definition>
        <argsstring>(struct parse *p, sopno start, int from, int to)</argsstring>
        <name>repeat</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>sopno</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>from</declname>
        </param>
        <param>
          <type>int</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1124" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1124" bodyend="1188" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="181" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a0a5682ac3fb10a29be9fa3d128c1ce53" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int seterr</definition>
        <argsstring>(struct parse *p, int e)</argsstring>
        <name>seterr</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1195" column="5" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1195" bodyend="1202" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="182" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a9bbbae8ce387f2f33e4570cf9dd3d225" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcset" kindref="compound">cset</ref> *</type>
        <definition>static cset * allocset</definition>
        <argsstring>(struct parse *p)</argsstring>
        <name>allocset</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1208" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1208" bodyend="1252" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="183" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1abda4f9941f1f830f10e2fad5a79b2d52" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void freeset</definition>
        <argsstring>(struct parse *p, cset *cs)</argsstring>
        <name>freeset</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structcset" kindref="compound">cset</ref> *</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1258" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1258" bodyend="1268" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="184" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a6b4e59c7efb85237683a31a2da8ee67c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int freezeset</definition>
        <argsstring>(struct parse *p, cset *cs)</argsstring>
        <name>freezeset</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structcset" kindref="compound">cset</ref> *</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1281" column="5" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1281" bodyend="1306" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="185" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a73a41f54d9e943bdc64d079ddc8fc6a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int firstch</definition>
        <argsstring>(struct parse *p, cset *cs)</argsstring>
        <name>firstch</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structcset" kindref="compound">cset</ref> *</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1313" column="5" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1313" bodyend="1323" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="186" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a234e8fe0f9e16c9a67ef97b9279a5536" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int nch</definition>
        <argsstring>(struct parse *p, cset *cs)</argsstring>
        <name>nch</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structcset" kindref="compound">cset</ref> *</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1329" column="12" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1329" bodyend="1339" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="187" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a4a3ece4a051dc8c788ae9f918002fef9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void mcinvert</definition>
        <argsstring>(struct parse *p, cset *cs)</argsstring>
        <name>mcinvert</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structcset" kindref="compound">cset</ref> *</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1420" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1420" bodyend="1422" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="196" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1ad3a24b110201019317ea31290c177323" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void mccase</definition>
        <argsstring>(struct parse *p, cset *cs)</argsstring>
        <name>mccase</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structcset" kindref="compound">cset</ref> *</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1431" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1431" bodyend="1432" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="197" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a818d69e299246a71a2947f9c99fe3ace" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int isinsets</definition>
        <argsstring>(struct re_guts *g, int c)</argsstring>
        <name>isinsets</name>
        <param>
          <type>struct <ref refid="structre__guts" kindref="compound">re_guts</ref> *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1439" column="5" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1439" bodyend="1450" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="198" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a5f32379ffa2180de79d4958fed9c5d7f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int samesets</definition>
        <argsstring>(struct re_guts *g, int c1, int c2)</argsstring>
        <name>samesets</name>
        <param>
          <type>struct <ref refid="structre__guts" kindref="compound">re_guts</ref> *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1457" column="5" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1457" bodyend="1469" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="199" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a32ea1bb1397657081e2b89e1668c5ce3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void categorize</definition>
        <argsstring>(struct parse *p, struct re_guts *g)</argsstring>
        <name>categorize</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>struct <ref refid="structre__guts" kindref="compound">re_guts</ref> *</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1475" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1475" bodyend="1494" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="200" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1ae1899e7db7d19a9608d663fe79a7cc30" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sopno</type>
        <definition>static sopno dupl</definition>
        <argsstring>(struct parse *p, sopno start, sopno finish)</argsstring>
        <name>dupl</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>sopno</type>
          <declname>start</declname>
        </param>
        <param>
          <type>sopno</type>
          <declname>finish</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1501" column="5" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1501" bodyend="1515" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="201" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1ad440bd95f73173a155d8e3cd8d28e3c7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void doemit</definition>
        <argsstring>(struct parse *p, sop op, size_t opnd)</argsstring>
        <name>doemit</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>sop</type>
          <declname>op</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>opnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1525" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1525" bodyend="1541" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="202" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a22ecff2e1bac2c2d8961743415da64f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void doinsert</definition>
        <argsstring>(struct parse *p, sop op, size_t opnd, sopno pos)</argsstring>
        <name>doinsert</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>sop</type>
          <declname>op</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>opnd</declname>
        </param>
        <param>
          <type>sopno</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1548" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1548" bodyend="1577" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="203" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a746bdd71e338c9de6718a6912b6904a1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dofwd</definition>
        <argsstring>(struct parse *p, sopno pos, sop value)</argsstring>
        <name>dofwd</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>sopno</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>sop</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1583" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1583" bodyend="1591" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="204" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1adb6d44a1a887dd6e22b2e97cdc8886ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void enlarge</definition>
        <argsstring>(struct parse *p, sopno size)</argsstring>
        <name>enlarge</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>sopno</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1597" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1597" bodyend="1611" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="205" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a030814ae68fdb71abd86bf24b4703000" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void stripsnug</definition>
        <argsstring>(struct parse *p, struct re_guts *g)</argsstring>
        <name>stripsnug</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>struct <ref refid="structre__guts" kindref="compound">re_guts</ref> *</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1617" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1617" bodyend="1625" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="206" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a0284680f7ee8fb701c3fe9a3b81e5a43" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void findmust</definition>
        <argsstring>(struct parse *p, struct re_guts *g)</argsstring>
        <name>findmust</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>struct <ref refid="structre__guts" kindref="compound">re_guts</ref> *</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1637" column="13" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1637" bodyend="1708" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="207" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a6fe85ad5f738867478e944bb7680428b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sopno</type>
        <definition>static sopno pluscount</definition>
        <argsstring>(struct parse *p, struct re_guts *g)</argsstring>
        <name>pluscount</name>
        <param>
          <type>struct <ref refid="structparse" kindref="compound">parse</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>struct <ref refid="structre__guts" kindref="compound">re_guts</ref> *</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="1716" column="5" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="1716" bodyend="1742" declfile="/home/vsc/github/yap/library/regex/regcomp.c" declline="208" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="regcomp_8c_1a2341316f0dbb6f26110f9352b8c79117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int yap_regcomp</definition>
        <argsstring>(regex_t *preg, const char *pattern, int cflags)</argsstring>
        <name>yap_regcomp</name>
        <param>
          <type><ref refid="structregex__t" kindref="compound">regex_t</ref> *</type>
          <declname>preg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cflags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/library/regex/regcomp.c" line="266" column="5" bodyfile="/home/vsc/github/yap/library/regex/regcomp.c" bodystart="266" bodyend="360"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Regular expression compiler. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/vsc/github/yap/library/regex/regcomp.c"/>
  </compounddef>
</doxygen>
