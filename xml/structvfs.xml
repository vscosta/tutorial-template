<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="structvfs" kind="struct" language="C++" prot="public">
    <compoundname>vfs</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvfs_1a8f8f80d37794cde9472343e4487ba3eb" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="75" column="14" bodyfile="include/VFS.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1acf37ae391a8c8bdcea826dff196803c4" prot="public" static="no" mutable="no">
        <type>uintptr_t</type>
        <definition>uintptr_t vflags</definition>
        <argsstring></argsstring>
        <name>vflags</name>
        <briefdescription>
<para>A text that explains the file system. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="76" column="13" bodyfile="include/VFS.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1a5b41c5ae4505891e6c53e26df197e02b" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* prefix</definition>
        <argsstring></argsstring>
        <name>prefix</name>
        <briefdescription>
<para>the main flags describing the operation of the Fs </para>
        </briefdescription>
        <detaileddescription>
<para>a way to identify a file in this VFS: two special cases, prefix and suffix </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="78" column="14" bodyfile="include/VFS.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1ac07eab03049dcbd3490f72576f5a34d2" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* suffix</definition>
        <argsstring></argsstring>
        <name>suffix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="79" column="14" bodyfile="include/VFS.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1a497ef626e77124ee8e5df65d93a209a8" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* chDir) (struct vfs *me, const char *s)</definition>
        <argsstring>)(struct vfs *me, const char *s)</argsstring>
        <name>chDir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="80" column="3" bodyfile="include/VFS.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1a0789d112a09fcadf4e2f27ffdf470d0b" prot="public" static="no" mutable="no">
        <type>void *(*</type>
        <definition>void *(* open) (struct vfs *, const char *fname, const char *io_mode, int sno)</definition>
        <argsstring>)(struct vfs *, const char *fname, const char *io_mode, int sno)</argsstring>
        <name>open</name>
        <briefdescription>
<para>operations </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="82" column="3" bodyfile="include/VFS.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1a53c3cf3e0ed0c5ee9df11f3e2cb7528f" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* close) (int sno)</definition>
        <argsstring>)(int sno)</argsstring>
        <name>close</name>
        <briefdescription>
<para>open an object </para>
        </briefdescription>
        <detaileddescription>
<para>in this space, usual w,r,a,b flags plus B (store in a buffer) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="86" column="3" bodyfile="include/VFS.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1acdfe0c26f3d864855d4152da4bb3c627" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* get_char) (int sno)</definition>
        <argsstring>)(int sno)</argsstring>
        <name>get_char</name>
        <briefdescription>
<para>close the object </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="87" column="3" bodyfile="include/VFS.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1aaded21b0cd2a642c39fc0e9ee82487e4" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* get_wchar) (int sno)</definition>
        <argsstring>)(int sno)</argsstring>
        <name>get_wchar</name>
        <briefdescription>
<para>get an octet from the stream </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="88" column="3" bodyfile="include/VFS.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1a9d33c1d33e111ce25132dbeff3149db2" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* peek_char) (int sno)</definition>
        <argsstring>)(int sno)</argsstring>
        <name>peek_char</name>
        <briefdescription>
<para>get an octet from the stream </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="89" column="5" bodyfile="include/VFS.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1ac0a243376b616e7c5a9c015aec1927b1" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* peek_wchar) (int sno)</definition>
        <argsstring>)(int sno)</argsstring>
        <name>peek_wchar</name>
        <briefdescription>
<para>unget an octet from the stream </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="90" column="5" bodyfile="include/VFS.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1aa53eb25e74a68c8dc830f9e5f652a842" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* put_char) (int sno, int ch)</definition>
        <argsstring>)(int sno, int ch)</argsstring>
        <name>put_char</name>
        <briefdescription>
<para>unget an octet from the stream </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="91" column="3" bodyfile="include/VFS.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1adb129b6cffd35753b3cc19c09b54973c" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* put_wchar) (int sno, int ch)</definition>
        <argsstring>)(int sno, int ch)</argsstring>
        <name>put_wchar</name>
        <briefdescription>
<para>output an octet to the stream </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="92" column="3" bodyfile="include/VFS.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1acab26fe08e2f50042b4c144bdfc549c6" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* flush) (int sno)</definition>
        <argsstring>)(int sno)</argsstring>
        <name>flush</name>
        <briefdescription>
<para>output a character to the stream </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="93" column="3" bodyfile="include/VFS.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1a2b27620f6fbee265616563746a7a25aa" prot="public" static="no" mutable="no">
        <type>int64_t(*</type>
        <definition>int64_t(* seek) (int sno, int64_t offset, int whence)</definition>
        <argsstring>)(int sno, int64_t offset, int whence)</argsstring>
        <name>seek</name>
        <briefdescription>
<para>flush a stream </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="94" column="3" bodyfile="include/VFS.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1a1bcd1fcee221c3452486abe6afba2d92" prot="public" static="no" mutable="no">
        <type>void *(*</type>
        <definition>void *(* opendir) (struct vfs *, const char *s)</definition>
        <argsstring>)(struct vfs *, const char *s)</argsstring>
        <name>opendir</name>
        <briefdescription>
<para>jump around the stream </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="96" column="3" bodyfile="include/VFS.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1abb4a71d6fc1d5f69858905a0211c5f83" prot="public" static="no" mutable="no">
        <type>const char *(*</type>
        <definition>const char *(* nextdir) (void *d)</definition>
        <argsstring>)(void *d)</argsstring>
        <name>nextdir</name>
        <briefdescription>
<para>open a directory object, if one exists </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="98" column="9" bodyfile="include/VFS.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1af858719af08038922445d453e6366eeb" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* closedir) (void *d)</definition>
        <argsstring>)(void *d)</argsstring>
        <name>closedir</name>
        <briefdescription>
<para>walk to the next entry in a directory object </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="100" column="3" bodyfile="include/VFS.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1a1f8e35d452cc6a6f26b5ccfd8b7cf4ac" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* stat) (struct vfs *, const char *s, vfs_stat *)</definition>
        <argsstring>)(struct vfs *, const char *s, vfs_stat *)</argsstring>
        <name>stat</name>
        <briefdescription>
<para>close access a directory object </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="102" column="3" bodyfile="include/VFS.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1af18b70f99d627bdbdd4cbb305d39ee45" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* isdir) (struct vfs *, const char *s)</definition>
        <argsstring>)(struct vfs *, const char *s)</argsstring>
        <name>isdir</name>
        <briefdescription>
<para>obtain size, age, permissions of a file </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="104" column="3" bodyfile="include/VFS.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1a6cfa276207aedd92b13a9df79d15843d" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* exists) (struct vfs *, const char *s)</definition>
        <argsstring>)(struct vfs *, const char *s)</argsstring>
        <name>exists</name>
        <briefdescription>
<para>verify whether is directory </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="105" column="3" bodyfile="include/VFS.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1aa83df5c60ada776d27640998d58c7929" prot="public" static="no" mutable="no">
        <type>bool(*</type>
        <definition>bool(* chdir) (struct vfs *, const char *s)</definition>
        <argsstring>)(struct vfs *, const char *s)</argsstring>
        <name>chdir</name>
        <briefdescription>
<para>verify whether a file exists </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="106" column="3" bodyfile="include/VFS.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1afca552e68531e34c29b0a236c6e2a6d7" prot="public" static="no" mutable="no">
        <type>encoding_t</type>
        <definition>encoding_t enc</definition>
        <argsstring></argsstring>
        <name>enc</name>
        <briefdescription>
<para>set working directory (may be virtual) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="108" column="14" bodyfile="include/VFS.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1a555186ddf16ffc7918fcb336341ead51" prot="public" static="no" mutable="no">
        <type>YAP_Term(*</type>
        <definition>YAP_Term(* parsers) (int sno)</definition>
        <argsstring>)(int sno)</argsstring>
        <name>parsers</name>
        <briefdescription>
<para>default file encoded </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="109" column="3" bodyfile="include/VFS.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1aa507437a2acdc3ad09e3ceb95c862733" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* writers) (int ch, int sno)</definition>
        <argsstring>)(int ch, int sno)</argsstring>
        <name>writers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="111" column="3" bodyfile="include/VFS.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1a8b6505c37d4ff95854b8b00527e4d9fa" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* priv</definition>
        <argsstring></argsstring>
        <name>priv</name>
        <briefdescription>
<para>VFS dep endent area. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="114" column="8" bodyfile="include/VFS.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvfs_1a8123e1462f269d19db0b57e79758eb3e" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structvfs" kindref="compound">vfs</ref> *</type>
        <definition>struct vfs* next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VFS.h" line="115" column="12" bodyfile="include/VFS.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>vfs</label>
        <link refid="structvfs"/>
        <childnode refid="1" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/VFS.h" line="74" column="1" bodyfile="include/VFS.h" bodystart="74" bodyend="116"/>
    <listofallmembers>
      <member refid="structvfs_1aa83df5c60ada776d27640998d58c7929" prot="public" virt="non-virtual"><scope>vfs</scope><name>chdir</name></member>
      <member refid="structvfs_1a497ef626e77124ee8e5df65d93a209a8" prot="public" virt="non-virtual"><scope>vfs</scope><name>chDir</name></member>
      <member refid="structvfs_1a53c3cf3e0ed0c5ee9df11f3e2cb7528f" prot="public" virt="non-virtual"><scope>vfs</scope><name>close</name></member>
      <member refid="structvfs_1af858719af08038922445d453e6366eeb" prot="public" virt="non-virtual"><scope>vfs</scope><name>closedir</name></member>
      <member refid="structvfs_1afca552e68531e34c29b0a236c6e2a6d7" prot="public" virt="non-virtual"><scope>vfs</scope><name>enc</name></member>
      <member refid="structvfs_1a6cfa276207aedd92b13a9df79d15843d" prot="public" virt="non-virtual"><scope>vfs</scope><name>exists</name></member>
      <member refid="structvfs_1acab26fe08e2f50042b4c144bdfc549c6" prot="public" virt="non-virtual"><scope>vfs</scope><name>flush</name></member>
      <member refid="structvfs_1acdfe0c26f3d864855d4152da4bb3c627" prot="public" virt="non-virtual"><scope>vfs</scope><name>get_char</name></member>
      <member refid="structvfs_1aaded21b0cd2a642c39fc0e9ee82487e4" prot="public" virt="non-virtual"><scope>vfs</scope><name>get_wchar</name></member>
      <member refid="structvfs_1af18b70f99d627bdbdd4cbb305d39ee45" prot="public" virt="non-virtual"><scope>vfs</scope><name>isdir</name></member>
      <member refid="structvfs_1a8f8f80d37794cde9472343e4487ba3eb" prot="public" virt="non-virtual"><scope>vfs</scope><name>name</name></member>
      <member refid="structvfs_1a8123e1462f269d19db0b57e79758eb3e" prot="public" virt="non-virtual"><scope>vfs</scope><name>next</name></member>
      <member refid="structvfs_1abb4a71d6fc1d5f69858905a0211c5f83" prot="public" virt="non-virtual"><scope>vfs</scope><name>nextdir</name></member>
      <member refid="structvfs_1a0789d112a09fcadf4e2f27ffdf470d0b" prot="public" virt="non-virtual"><scope>vfs</scope><name>open</name></member>
      <member refid="structvfs_1a1bcd1fcee221c3452486abe6afba2d92" prot="public" virt="non-virtual"><scope>vfs</scope><name>opendir</name></member>
      <member refid="structvfs_1a555186ddf16ffc7918fcb336341ead51" prot="public" virt="non-virtual"><scope>vfs</scope><name>parsers</name></member>
      <member refid="structvfs_1a9d33c1d33e111ce25132dbeff3149db2" prot="public" virt="non-virtual"><scope>vfs</scope><name>peek_char</name></member>
      <member refid="structvfs_1ac0a243376b616e7c5a9c015aec1927b1" prot="public" virt="non-virtual"><scope>vfs</scope><name>peek_wchar</name></member>
      <member refid="structvfs_1a5b41c5ae4505891e6c53e26df197e02b" prot="public" virt="non-virtual"><scope>vfs</scope><name>prefix</name></member>
      <member refid="structvfs_1a8b6505c37d4ff95854b8b00527e4d9fa" prot="public" virt="non-virtual"><scope>vfs</scope><name>priv</name></member>
      <member refid="structvfs_1aa53eb25e74a68c8dc830f9e5f652a842" prot="public" virt="non-virtual"><scope>vfs</scope><name>put_char</name></member>
      <member refid="structvfs_1adb129b6cffd35753b3cc19c09b54973c" prot="public" virt="non-virtual"><scope>vfs</scope><name>put_wchar</name></member>
      <member refid="structvfs_1a2b27620f6fbee265616563746a7a25aa" prot="public" virt="non-virtual"><scope>vfs</scope><name>seek</name></member>
      <member refid="structvfs_1a1f8e35d452cc6a6f26b5ccfd8b7cf4ac" prot="public" virt="non-virtual"><scope>vfs</scope><name>stat</name></member>
      <member refid="structvfs_1ac07eab03049dcbd3490f72576f5a34d2" prot="public" virt="non-virtual"><scope>vfs</scope><name>suffix</name></member>
      <member refid="structvfs_1acf37ae391a8c8bdcea826dff196803c4" prot="public" virt="non-virtual"><scope>vfs</scope><name>vflags</name></member>
      <member refid="structvfs_1aa507437a2acdc3ad09e3ceb95c862733" prot="public" virt="non-virtual"><scope>vfs</scope><name>writers</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
