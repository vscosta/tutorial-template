<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classsub__atom_25" kind="predicate" language="Prolog" prot="public">
    <compoundname>sub_atom/5</compoundname>
    <briefdescription>
<para><bold>sub_atom</bold>(+ <emphasis>A</emphasis>,? <emphasis>Bef</emphasis>, ? <emphasis>Size</emphasis>, ? <emphasis>After</emphasis>, ? <emphasis>At_out</emphasis>) </para>
    </briefdescription>
    <detaileddescription>
<para>defined in the <emphasis>ISO</emphasis> standard</para>
<para>True when <emphasis>A</emphasis> and <emphasis>At_out</emphasis> are atoms such that the name of <emphasis>At_out</emphasis> has size <emphasis>Size</emphasis> and is a sub-string of the name of <emphasis>A</emphasis>, such that <emphasis>Bef</emphasis> is the number of characters before and <emphasis>After</emphasis> the number of characters afterwards</para>
<para>Note that <emphasis>A</emphasis> must always be known, but <emphasis>At_out</emphasis> can be unbound when calling this built-in If all the arguments for <ref refid="classsub__atom_25" kindref="compound">sub_atom/5</ref> but <emphasis>A</emphasis> are unbound, the built-in will backtrack through all possible sub-strings of <emphasis>A</emphasis> </para>
    </detaileddescription>
    <location file="C/atomic.c" line="2746" column="1" bodyfile="C/atomic.c" bodystart="2746" bodyend="-1"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
