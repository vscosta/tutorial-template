<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="terms_8h" kind="file" language="C++">
    <compoundname>terms.h</compoundname>
    <includes refid="amidefs_8h" local="yes">amidefs.h</includes>
    <includes refid="Yap_8h" local="yes">Yap.h</includes>
    <includes refid="YapArenas_8h" local="yes">YapArenas.h</includes>
    <includedby refid="copy_8c" local="yes">C/copy.c</includedby>
    <includedby refid="globals_8c" local="yes">C/globals.c</includedby>
    <includedby refid="utilpreds_8c" local="yes">C/utilpreds.c</includedby>
    <includedby refid="YapArenas_8h" local="yes">H/YapArenas.h</includedby>
    <includedby refid="clause_8h" local="yes">H/clause.h</includedby>
    <incdepgraph>
      <node id="23">
        <label>Atoms.h</label>
        <link refid="Atoms_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Regs.h</label>
        <link refid="Regs_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ScannerTypes.h</label>
        <link refid="ScannerTypes_8h_source"/>
      </node>
      <node id="27">
        <label>TermExt.h</label>
        <link refid="TermExt_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Yap.h</label>
        <link refid="Yap_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>YapArenas.h</label>
        <link refid="YapArenas_8h_source"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>YapCompoundTerm.h</label>
        <link refid="YapCompoundTerm_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>YapFlags.h</label>
        <link refid="YapFlags_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>YapGFlagInfo.h</label>
        <link refid="YapGFlagInfo_8h"/>
      </node>
      <node id="36">
        <label>YapHandles.h</label>
        <link refid="YapHandles_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>YapHeap.h</label>
        <link refid="YapHeap_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>YapLFlagInfo.h</label>
        <link refid="YapLFlagInfo_8h"/>
      </node>
      <node id="4">
        <label>YapOpcodes.h</label>
        <link refid="YapOpcodes_8h_source"/>
      </node>
      <node id="35">
        <label>YapSignals.h</label>
        <link refid="YapSignals_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>YapTags.h</label>
        <link refid="YapTags_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>YapText.h</label>
        <link refid="YapText_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>Yapproto.h</label>
        <link refid="Yapproto_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>Yatom.h</label>
        <link refid="Yatom_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>alloc.h</label>
        <link refid="alloc_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>amidefs.h</label>
        <link refid="amidefs_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>amiops.h</label>
        <link refid="amiops_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>arrays.h</label>
        <link refid="arrays_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>corout.h</label>
        <link refid="corout_8h_source"/>
      </node>
      <node id="42">
        <label>generated/h0globals.h</label>
        <link refid="h0globals_8h_source"/>
      </node>
      <node id="41">
        <label>generated/h0struct.h</label>
        <link refid="h0struct_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>generated/hlocals.h</label>
        <link refid="hlocals_8h_source"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>generated/tatoms.h</label>
        <link refid="tatoms_8h_source"/>
      </node>
      <node id="34">
        <label>gprof.h</label>
        <link refid="gprof_8h_source"/>
      </node>
      <node id="8">
        <label>inline-only.h</label>
        <link refid="inline-only_8h_source"/>
      </node>
      <node id="44">
        <label>locals.h</label>
        <link refid="locals_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>nolocks.h</label>
        <link refid="nolocks_8h_source"/>
      </node>
      <node id="1">
        <label>H/terms.h</label>
        <link refid="terms_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>threads.h</label>
        <link refid="threads_8h_source"/>
      </node>
      <node id="49">
        <label>GitSHA1.h</label>
        <link refid="GitSHA1_8h_source"/>
      </node>
      <node id="9">
        <label>YapDefs.h</label>
        <link refid="YapDefs_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>YapError.h</label>
        <link refid="YapError_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>YapErrors.h</label>
        <link refid="YapErrors_8h"/>
      </node>
      <node id="20">
        <label>YapFormat.h</label>
        <link refid="YapFormat_8h_source"/>
      </node>
      <node id="22">
        <label>YapInit.h</label>
        <link refid="YapInit_8h"/>
      </node>
      <node id="11">
        <label>YapTerm.h</label>
        <link refid="YapTerm_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>YapUTF8.h</label>
        <link refid="YapUTF8_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>../os/encoding.h</label>
        <link refid="encoding_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>YapConfig.h</label>
      </node>
      <node id="15">
        <label>YapIOConfig.h</label>
      </node>
      <node id="12">
        <label>YapTermConfig.h</label>
      </node>
      <node id="13">
        <label>config.h</label>
      </node>
      <node id="45">
        <label>dlocals.h</label>
      </node>
      <node id="28">
        <label>stddef.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="10">
        <label>stdlib.h</label>
      </node>
      <node id="16">
        <label>string.h</label>
      </node>
      <node id="52">
        <label>utf8proc.h</label>
      </node>
      <node id="24">
        <label>wchar.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9">
        <label>C/absmi.c</label>
        <link refid="absmi_8c"/>
      </node>
      <node id="10">
        <label>C/adtdefs.c</label>
        <link refid="adtdefs_8c_source"/>
      </node>
      <node id="48">
        <label>C/agc.c</label>
        <link refid="agc_8c_source"/>
      </node>
      <node id="11">
        <label>C/amasm.c</label>
        <link refid="amasm_8c_source"/>
      </node>
      <node id="12">
        <label>C/arrays.c</label>
        <link refid="arrays_8c"/>
      </node>
      <node id="13">
        <label>C/bb.c</label>
        <link refid="bb_8c_source"/>
      </node>
      <node id="14">
        <label>C/c_interface.c</label>
        <link refid="c__interface_8c"/>
      </node>
      <node id="15">
        <label>C/cdmgr.c</label>
        <link refid="cdmgr_8c_source"/>
      </node>
      <node id="16">
        <label>C/clause_list.c</label>
        <link refid="clause__list_8c_source"/>
      </node>
      <node id="17">
        <label>C/compiler.c</label>
        <link refid="compiler_8c_source"/>
      </node>
      <node id="18">
        <label>C/consult.c</label>
        <link refid="consult_8c_source"/>
      </node>
      <node id="2">
        <label>C/copy.c</label>
        <link refid="copy_8c"/>
      </node>
      <node id="19">
        <label>C/dbase.c</label>
        <link refid="dbase_8c_source"/>
      </node>
      <node id="20">
        <label>C/dbload.c</label>
        <link refid="dbload_8c_source"/>
      </node>
      <node id="34">
        <label>C/debug.c</label>
        <link refid="debug_8c_source"/>
      </node>
      <node id="35">
        <label>C/errors.c</label>
        <link refid="C_2errors_8c"/>
      </node>
      <node id="36">
        <label>C/exec.c</label>
        <link refid="exec_8c_source"/>
      </node>
      <node id="37">
        <label>C/execstruct.c</label>
        <link refid="execstruct_8c_source"/>
      </node>
      <node id="21">
        <label>C/exo.c</label>
        <link refid="exo_8c_source"/>
      </node>
      <node id="22">
        <label>C/exo_udi.c</label>
        <link refid="exo__udi_8c_source"/>
      </node>
      <node id="3">
        <label>C/globals.c</label>
        <link refid="globals_8c"/>
      </node>
      <node id="38">
        <label>C/gprof.c</label>
        <link refid="gprof_8c_source"/>
      </node>
      <node id="39">
        <label>C/grow.c</label>
        <link refid="grow_8c_source"/>
      </node>
      <node id="40">
        <label>C/heapgc.c</label>
        <link refid="heapgc_8c_source"/>
      </node>
      <node id="41">
        <label>C/index.c</label>
        <link refid="index_8c"/>
      </node>
      <node id="23">
        <label>C/init.c</label>
        <link refid="init_8c_source"/>
      </node>
      <node id="42">
        <label>C/inlines.c</label>
        <link refid="inlines_8c"/>
      </node>
      <node id="6">
        <label>C/mavar.c</label>
        <link refid="mavar_8c"/>
      </node>
      <node id="43">
        <label>C/qlyr.c</label>
        <link refid="qlyr_8c"/>
      </node>
      <node id="44">
        <label>C/qlyw.c</label>
        <link refid="qlyw_8c_source"/>
      </node>
      <node id="45">
        <label>C/save.c</label>
        <link refid="save_8c_source"/>
      </node>
      <node id="24">
        <label>C/stack.c</label>
        <link refid="C_2stack_8c"/>
      </node>
      <node id="25">
        <label>C/terms.c</label>
        <link refid="terms_8c"/>
      </node>
      <node id="26">
        <label>C/udi.c</label>
        <link refid="udi_8c_source"/>
      </node>
      <node id="46">
        <label>C/unify.c</label>
        <link refid="unify_8c_source"/>
      </node>
      <node id="4">
        <label>C/utilpreds.c</label>
        <link refid="utilpreds_8c"/>
      </node>
      <node id="27">
        <label>C/write.c</label>
        <link refid="write_8c_source"/>
      </node>
      <node id="28">
        <label>CXX/cxx4yap.hh</label>
        <link refid="cxx4yap_8hh_source"/>
      </node>
      <node id="31">
        <label>CXX/heap.cxx</label>
        <link refid="heap_8cxx_source"/>
      </node>
      <node id="29">
        <label>CXX/tmp/yapi.hh</label>
        <link refid="tmp_2yapi_8hh"/>
      </node>
      <node id="32">
        <label>CXX/yapi.cpp</label>
        <link refid="yapi_8cpp_source"/>
      </node>
      <node id="30">
        <label>CXX/yapi.hh</label>
        <link refid="yapi_8hh"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>H/YapArenas.h</label>
        <link refid="YapArenas_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>H/absmi.h</label>
        <link refid="absmi_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>H/clause.h</label>
        <link refid="clause_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>H/rheap.h</label>
        <link refid="rheap_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>H/terms.h</label>
        <link refid="terms_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>os/readterm.c</label>
        <link refid="readterm_8c"/>
      </node>
      <node id="50">
        <label>os/writeterm.c</label>
        <link refid="writeterm_8c"/>
      </node>
      <node id="49">
        <label>pl/errors.c</label>
        <link refid="pl_2errors_8c"/>
      </node>
      <node id="51">
        <label>pl/stack.c</label>
        <link refid="pl_2stack_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structcp__frame" prot="public">cp_frame</innerclass>
    <innerclass refid="structYstack__t" prot="public">Ystack_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="terms_8h_1aef7cd90c059e5d32ea56c5f4392f1ed4" prot="public" static="no">
        <name>to_visit</name>
        <initializer>stt-&gt;pt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="25" column="9" bodyfile="H/terms.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1a237c581e7f2e25480395a111c54032ce" prot="public" static="no">
        <name>to_visit0</name>
        <initializer>stt-&gt;pt0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="26" column="9" bodyfile="H/terms.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1afa74dde85669cd13f73110018ae25ce1" prot="public" static="no">
        <name>to_visit_end</name>
        <initializer>stt-&gt;max</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="27" column="9" bodyfile="H/terms.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1a60f77c04e1f33a508aa458aaa356e7f0" prot="public" static="no">
        <name>INC_H</name>
        <param><defname>sz</defname></param>
        <param><defname>hrt0</defname></param>
        <initializer>CELL *hrt0;\
{ if (HR+(sz) &gt; ASP-MIN_ARENA_SIZE) {return stt-&gt;err = RESOURCE_ERROR_STACK;}\
 hrt0 = HR; HR+=(sz) ; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="44" column="9" bodyfile="H/terms.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1a8c82d94444eeae725890740e5e192ee7" prot="public" static="no">
        <name>IS_VISIT_MARKER</name>
        <param><defname>d0</defname></param>
        <initializer>			     (IsPairTerm(d0) &amp;&amp; \
			     (<ref refid="structcopy__frame" kindref="compound">copy_frame</ref>*)RepPair(d0) &gt;= to_visit0	\
&amp;&amp; (<ref refid="structcopy__frame" kindref="compound">copy_frame</ref>*)RepPair(d0) &lt;= to_visit)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="49" column="9" bodyfile="H/terms.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1afe1987b703e61701714d4952daa2c516" prot="public" static="no">
        <name>VISIT_MARK</name>
        <param></param>
        <initializer>AbsPair((CELL*)to_visit)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="53" column="10" bodyfile="H/terms.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1a325574700cdad10a49dc7c2c657acf64" prot="public" static="no">
        <name>VISIT_ENTRY</name>
        <param><defname>d0</defname></param>
        <initializer>(( <ref refid="structcopy__frame" kindref="compound">copy_frame</ref> *)RepPair(d0))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="55" column="9" bodyfile="H/terms.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1aecf5309fe24c21f00526ad17b19a933a" prot="public" static="no">
        <name>VISIT_TARGET</name>
        <param><defname>d0</defname></param>
        <initializer>((( <ref refid="structcopy__frame" kindref="compound">copy_frame</ref> *)RepPair(d0))-&gt;t)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="57" column="9" bodyfile="H/terms.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1adca9c981d30225ac3e3710d36e23cc57" prot="public" static="no">
        <name>VISIT_REPLACED</name>
        <param><defname>d0</defname></param>
        <initializer>((( <ref refid="structcopy__frame" kindref="compound">copy_frame</ref> *)RepPair(d0))-&gt;oldv)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="59" column="9" bodyfile="H/terms.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1a3d3495262d949d224aa810cbd82d898f" prot="public" static="no">
        <name>VUNMARK</name>
        <param><defname>ptd0</defname></param>
        <param><defname>d0</defname></param>
        <initializer>(*(ptd0) = (d0))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="62" column="9" bodyfile="H/terms.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1a1bbbd9fe68190de41e348513ab450c20" prot="public" static="no">
        <name>VISITED</name>
        <param><defname>D0</defname></param>
        <initializer>IS_VISIT_MARKER(D0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="65" column="9" bodyfile="H/terms.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1a6baf9b6d465e197463e654416e835ad9" prot="public" static="no">
        <name>VISIT_UNMARK</name>
        <param><defname>d0</defname></param>
        <initializer>(IS_VISIT_MARKER(d0)?((  <ref refid="structcopy__frame" kindref="compound">copy_frame</ref> *)RepPair(d0))-&gt;oldv:d0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="68" column="9" bodyfile="H/terms.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1a67eaf9be84b3bd931c273f5db8b11ac5" prot="public" static="no">
        <name>mderef_head</name>
        <param><defname>D</defname></param>
        <param><defname>DM</defname></param>
        <param><defname>Label</defname></param>
        <initializer>  D = DM;\
  while (IS_VISIT_MARKER(D)){\
   D = VISIT_REPLACED(D); }	      \
  if (IsVarTerm(D)) goto Label	      \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="70" column="9" bodyfile="H/terms.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1a4b1bf7ab5b2a1cda123cd12daefc25ca" prot="public" static="no">
        <name>mderef_body</name>
        <param><defname>D</defname></param>
        <param><defname>DM</defname></param>
        <param><defname>A</defname></param>
        <param><defname>LabelUnk</defname></param>
        <param><defname>LabelNonVar</defname></param>
        <initializer>  do {\
      if (!IsVarTerm(D))					\
      goto LabelNonVar;                                                        \
  LabelUnk:                                                                    \
(A) = (CELL *)(D);				\
(DM) = *(A);\
  while (IS_VISIT_MARKER(DM)){\
   DM = VISIT_REPLACED(DM); }	      \
 if (DM==D) break;\
 D=DM;\
} while (true )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="126" column="9" bodyfile="H/terms.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1adeff512601b6899ae804e6bf74d62204" prot="public" static="no">
        <name>POP_VISIT</name>
        <param><defname>A</defname></param>
        <param><defname>DD</defname></param>
        <initializer>{ DD=*A;\
if(IS_VISIT_MARKER(DD))\
 {*A = ((  <ref refid="structcopy__frame" kindref="compound">copy_frame</ref> *)RepPair(dd))-&gt;oldv; }}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="139" column="9" bodyfile="H/terms.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1a0d335687dc585b882a13197049ab6b4f" prot="public" static="no">
        <name>PUSH_VISIT</name>
        <param><defname>A</defname></param>
        <param><defname>DD</defname></param>
        <param><defname>D</defname></param>
        <initializer>{if(IS_VISIT_MARKER(DD)) {\
    ((  <ref refid="structcopy__frame" kindref="compound">copy_frame</ref> *)RepPair(DD))-&gt;oldv = (D); *(A)=DD; }}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="144" column="9" bodyfile="H/terms.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1ac0376cdfe5aa8259ddf96845549b366f" prot="public" static="no">
        <name>TrailedMaBind</name>
        <param><defname>VP</defname></param>
        <param><defname>D</defname></param>
        <initializer>  {                                                                            \
    DO_MATRAIL((VP), *(VP), (D));                                                 \
    *(VP) = (D);                                                               \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="148" column="9" bodyfile="H/terms.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1a9b310e15281b977d203bb44782fbf537" prot="public" static="no">
        <name>mSET</name>
        <param><defname>A</defname></param>
        <param><defname>D</defname></param>
        <initializer>  { Term dd; POP_VISIT(A, dd); *A=D; PUSH_VISIT(A,dd,D); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="154" column="9" bodyfile="H/terms.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1a03e1dd8e4c8a82ce388ebd386438c722" prot="public" static="no">
        <name>mBind</name>
        <param><defname>A</defname></param>
        <param><defname>D</defname></param>
        <initializer>  { Term dd; POP_VISIT(A, dd); Bind_NonAtt(A,D); PUSH_VISIT(A,dd,D); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="157" column="9" bodyfile="H/terms.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1a955adccd638d1d47d0161db816ae11c0" prot="public" static="no">
        <name>mBind_And_Trail</name>
        <param><defname>A</defname></param>
        <param><defname>D</defname></param>
        <initializer>  { Term dd; POP_VISIT(A, dd); Bind_and_Trail(A,D); PUSH_VISIT(A,dd,D); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="160" column="9" bodyfile="H/terms.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1ab98594a3c47f4ad6dec80eca8e591f4a" prot="public" static="no">
        <name>mMaBind</name>
        <param><defname>A</defname></param>
        <param><defname>D</defname></param>
        <initializer>  { Term dd; POP_VISIT(A, dd); MaBind(A,D); PUSH_VISIT(A,dd,D); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="163" column="9" bodyfile="H/terms.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1ab1a9fa9291d63b2d90da3893ae870a27" prot="public" static="no">
        <name>mTrailedMaBind</name>
        <param><defname>A</defname></param>
        <param><defname>D</defname></param>
        <initializer>  { Term dd; POP_VISIT((A), dd); TrailedMaBind((A),(D)); PUSH_VISIT(A,dd,D); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="167" column="9" bodyfile="H/terms.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1a46584a965557299388afe49bbc204f07" prot="public" static="no">
        <name>COPY</name>
        <param><defname>t</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="172" column="9" bodyfile="H/terms.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1af43619acc484effd2bed81cec8cd1eec" prot="public" static="no">
        <name>GCIsPrimitiveTerm</name>
        <param><defname>X</defname></param>
        <initializer>(/* not really needed !IsVarTerm(X) &amp;&amp; */ IsAtomOrIntTerm(X))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="185" column="9" bodyfile="H/terms.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1a49bdbab003d798c3fb3dafcc8da406e2" prot="public" static="no">
        <name>HEAP_PTR</name>
        <param><defname>val</defname></param>
        <initializer>(!GCIsPrimitiveTerm(val) &amp;&amp; ONHEAP(GET_NEXT(val)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="188" column="9" bodyfile="H/terms.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="terms_8h_1a697631dc916b44ee9f91dd79b1e66a2d" prot="public" static="no">
        <name>HEAP_TRAIL_ENTRY</name>
        <param><defname>val</defname></param>
        <initializer>				((IsVarTerm(val)) &amp;&amp;                  \
				((H0 &lt;= CellPtr(val) &amp;&amp; CellPtr(val)\
				&lt; cp_H) ||                          \
			       (CellPtr(B) &lt; CellPtr(val) &amp;&amp; CellPtr(val) &lt;= \
				LCL0 &amp;&amp; HEAP_PTR(val))))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="199" column="9" bodyfile="H/terms.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="terms_8h_1a8c6e447a9e2f0bcd21a9356f0a31b9c1" prot="public" static="no">
        <type>struct <ref refid="structcp__frame" kindref="compound">cp_frame</ref></type>
        <definition>typedef struct cp_frame copy_frame</definition>
        <argsstring></argsstring>
        <name>copy_frame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="22" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="terms_8h_1a0652968bdf9d7c3ae47d3a4568565cd5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool init_stack</definition>
        <argsstring>(Ystack_t *b)</argsstring>
        <name>init_stack</name>
        <param>
          <type><ref refid="structYstack__t" kindref="compound">Ystack_t</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="76" column="20" bodyfile="H/terms.h" bodystart="76" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="terms_8h_1aa2139931e1652b7f5c198ca501cbbd0e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t realloc_stack</definition>
        <argsstring>(Ystack_t *stt)</argsstring>
        <name>realloc_stack</name>
        <param>
          <type><ref refid="structYstack__t" kindref="compound">Ystack_t</ref> *</type>
          <declname>stt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="92" column="22" bodyfile="H/terms.h" bodystart="92" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="terms_8h_1a0e5c766e192137b52507bf66d40d0c30" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void reset_stack</definition>
        <argsstring>(Ystack_t *b)</argsstring>
        <name>reset_stack</name>
        <param>
          <type><ref refid="structYstack__t" kindref="compound">Ystack_t</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="110" column="20" bodyfile="H/terms.h" bodystart="110" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="terms_8h_1a774ee726cbcfd727a3d61f981ff21a81" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void reset_stack_but_not_trail</definition>
        <argsstring>(Ystack_t *b)</argsstring>
        <name>reset_stack_but_not_trail</name>
        <param>
          <type><ref refid="structYstack__t" kindref="compound">Ystack_t</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/terms.h" line="119" column="20" bodyfile="H/terms.h" bodystart="119" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="H/terms.h"/>
  </compounddef>
</doxygen>
