<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="group__ErrorBuiltins" kind="group">
    <compoundname>ErrorBuiltins</compoundname>
    <title>Error generating type-checking</title>
    <innerclass refid="classis__nonvar_21" prot="public">is_nonvar/1</innerclass>
    <innerclass refid="classis__list_21" prot="public">is_list/1</innerclass>
    <innerclass refid="classcallable_21" prot="public">callable/1</innerclass>
    <innerclass refid="classis__callable_21" prot="public">is_callable/1</innerclass>
    <innerclass refid="classmust__be__callable_21" prot="public">must_be_callable/1</innerclass>
    <innerclass refid="classmust__be__bound_21" prot="public">must_be_bound/1</innerclass>
    <innerclass refid="classmust__be__ground_21" prot="public">must_be_ground/1</innerclass>
    <innerclass refid="classmust__be__predicate__indicator_24" prot="public">must_be_predicate_indicator/4</innerclass>
    <innerclass refid="classtype__error_22" prot="public">type_error/2</innerclass>
    <innerclass refid="classdomain__error_23" prot="public">domain_error/3</innerclass>
    <innerclass refid="classexistence__error_22" prot="public">existence_error/2</innerclass>
    <innerclass refid="classpermission__error_23" prot="public">permission_error/3</innerclass>
    <innerclass refid="classinstantiation__error_21" prot="public">instantiation_error/1</innerclass>
    <innerclass refid="classrepresentation__error_21" prot="public">representation_error/1</innerclass>
    <innerclass refid="classmust__be__of__type_22" prot="public">must_be_of_type/2</innerclass>
    <innerclass refid="classis__of__type_22" prot="public">is_of_type/2</innerclass>
    <innerclass refid="classhas__type_22" prot="public">has_type/2</innerclass>
    <innerclass refid="classmay__bind__to__type_22" prot="public">may_bind_to_type/2</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__ErrorBuiltins_1ga7099067ea322b1a1eb72efa722e99d07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>Int is_nonvar__</definition>
        <argsstring>(const char *file, const char *function, int lineno, Term t USES_REGS)</argsstring>
        <name>is_nonvar__</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>Term t</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1516" column="5" bodyfile="C/errors.c" bodystart="1516" bodyend="1524"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1ga5aba440144b108fc37fc3597f8f27b01" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int is_nonvar1</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>is_nonvar1</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1532" column="12" bodyfile="C/errors.c" bodystart="1532" bodyend="1535"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1ga09f1bb4ff199c8527b4073272ba4bee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_boolean__</definition>
        <argsstring>(const char *file, const char *function, int lineno, Term t USES_REGS)</argsstring>
        <name>is_boolean__</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>Term t</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1537" column="6" bodyfile="C/errors.c" bodystart="1537" bodyend="1545"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1ga97a1f95218b82e7165307b56a8f19be7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_codes__</definition>
        <argsstring>(const char *file, const char *function, int lineno, Term t USES_REGS)</argsstring>
        <name>is_codes__</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>Term t</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1547" column="6" bodyfile="C/errors.c" bodystart="1547" bodyend="1559"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1gafdb743ad7185398410c3f9060b490079" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int is_boolean1</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>is_boolean1</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1561" column="12" bodyfile="C/errors.c" bodystart="1561" bodyend="1564"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1gafea136d95da7cf0e0120d628d79ab014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool must_be_boolean__</definition>
        <argsstring>(const char *file, const char *function, int lineno, Term t USES_REGS)</argsstring>
        <name>must_be_boolean__</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>Term t</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1566" column="6" bodyfile="C/errors.c" bodystart="1566" bodyend="1579"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1ga59d5a2af6496422d834aa1120d1c1c3d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int must_be_boolean1</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>must_be_boolean1</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1581" column="12" bodyfile="C/errors.c" bodystart="1581" bodyend="1584"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1ga7f10b006ab9ed4c2fba7762fdd5695c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_atom__</definition>
        <argsstring>(const char *file, const char *function, int lineno, Term t USES_REGS)</argsstring>
        <name>is_atom__</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>Term t</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1586" column="6" bodyfile="C/errors.c" bodystart="1586" bodyend="1594"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1ga29ba2cdb21c0affd18415ed6b4f42a78" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int is_atom1</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>is_atom1</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1596" column="12" bodyfile="C/errors.c" bodystart="1596" bodyend="1599"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1ga662e46cf5cc1e590eb8a28dfd25b30f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool must_be_atom__</definition>
        <argsstring>(const char *file, const char *function, int lineno, Term t USES_REGS)</argsstring>
        <name>must_be_atom__</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>Term t</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1601" column="6" bodyfile="C/errors.c" bodystart="1601" bodyend="1614"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1gadf83075b6d8c331261d4e6d305eb3657" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int must_be_atom1</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>must_be_atom1</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1616" column="12" bodyfile="C/errors.c" bodystart="1616" bodyend="1619"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1gac7a5deed25c080c310d9ec48a7aac038" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_list__</definition>
        <argsstring>(const char *file, const char *function, int lineno, Term list USES_REGS)</argsstring>
        <name>is_list__</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>Term list</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1628" column="6" bodyfile="C/errors.c" bodystart="1628" bodyend="1639"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1ga0e883d9a4ef12a0454e0cdecef6d0f2e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int is_list1</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>is_list1</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1641" column="12" bodyfile="C/errors.c" bodystart="1641" bodyend="1644"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1gaae5638c6206e5fe2dc65f39785933544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool must_be_list__</definition>
        <argsstring>(const char *file, const char *function, int lineno, Term list USES_REGS)</argsstring>
        <name>must_be_list__</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>Term list</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1646" column="6" bodyfile="C/errors.c" bodystart="1646" bodyend="1657"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1gacc889b41755d9b8bcecde0db4d72b03d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int must_be_list1</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>must_be_list1</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1659" column="12" bodyfile="C/errors.c" bodystart="1659" bodyend="1662"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1ga2dace63b81bc4637ab3b4bd41d334c8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>Int callable</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>callable</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1671" column="5" bodyfile="C/errors.c" bodystart="1671" bodyend="1702"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1ga859a0db5a192245d5b5dec38c013d841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_callable__</definition>
        <argsstring>(const char *file, const char *function, int lineno, Term t USES_REGS)</argsstring>
        <name>is_callable__</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineno</declname>
        </param>
        <param>
          <type>Term t</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1711" column="6" bodyfile="C/errors.c" bodystart="1711" bodyend="1745"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1ga3a91a207cd07d3bdf325d5ad00be0092" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int is_callable1</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>is_callable1</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1747" column="12" bodyfile="C/errors.c" bodystart="1747" bodyend="1750"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1ga6b1f8b666d8850d3d06a4205b46b97a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Yap_callable</definition>
        <argsstring>(Term t)</argsstring>
        <name>Yap_callable</name>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1752" column="6" bodyfile="C/errors.c" bodystart="1752" bodyend="1778"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1ga49ee288dbd5edc520b74d29d85771a19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Yap_must_be_callable</definition>
        <argsstring>(Term G, Term mod)</argsstring>
        <name>Yap_must_be_callable</name>
        <param>
          <type>Term</type>
          <declname>G</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1780" column="6" bodyfile="C/errors.c" bodystart="1780" bodyend="1811"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1gab5d22ecc80817e71415039c7f00e5fcd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int must_be_callable1</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>must_be_callable1</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1819" column="12" bodyfile="C/errors.c" bodystart="1819" bodyend="1823"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1ga9fbfc6fc8608925ad7d7d28475581c30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Yap_must_be_list</definition>
        <argsstring>(Term t)</argsstring>
        <name>Yap_must_be_list</name>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Dereferenced term t must start as a list: </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para><computeroutput>[]</computeroutput></para>
</listitem><listitem><para><computeroutput>[_|_]</computeroutput></para>
</listitem></itemizedlist>
</para>
<para>no effort is made to verify if a true list </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1830" column="6" bodyfile="C/errors.c" bodystart="1830" bodyend="1838"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1ga8365a0bbf5baf4aa8a709a41067f7f60" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int must_be_bound1</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>must_be_bound1</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1844" column="12" bodyfile="C/errors.c" bodystart="1844" bodyend="1850"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1gab0cf0df35861954b17baf0cc680dc18d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int must_be_ground1</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>must_be_ground1</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1856" column="12" bodyfile="C/errors.c" bodystart="1856" bodyend="1862"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1gae8d3f28249def169ff2a40e51ca8f8a6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int must_be_predicate_indicator1</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>must_be_predicate_indicator1</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1879" column="12" bodyfile="C/errors.c" bodystart="1879" bodyend="1934"/>
      </memberdef>
      <memberdef kind="function" id="group__ErrorBuiltins_1ga59b4762f7ed2427d616f663c9821c94f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Yap_InitErrorPreds</definition>
        <argsstring>(void)</argsstring>
        <name>Yap_InitErrorPreds</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C/errors.c" line="1936" column="6" bodyfile="C/errors.c" bodystart="1936" bodyend="1970"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This code is based oon the SWI predicates to simplify error generation and checking. </para>
    </briefdescription>
    <detaileddescription>
<para>Adapted to use YAP built-ins</para>
<para>Its implementation is based on a discussion on the SWI-Prolog mailinglist on best practices in error handling The utility predicate must_be/2 provides simple run-time type validation The *_error predicates are simple wrappers around <ref refid="classthrow_21" kindref="compound">throw/1</ref> to simplify throwing the most common ISO error terms</para>
<para>YAP reuses the code with some extensions, and supports interfacing to some C-builtins</para>
    </detaileddescription>
  </compounddef>
</doxygen>
