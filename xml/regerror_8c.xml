<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="regerror_8c" kind="file" language="C++">
    <compoundname>regerror.c</compoundname>
    <includes refid="YapInterface_8h" local="yes">YapInterface.h</includes>
    <includes refid="yapregex_8h" local="yes">yapregex.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes refid="utils_8h" local="yes">utils.h</includes>
    <incdepgraph>
      <node id="15">
        <label>ScannerTypes.h</label>
        <link refid="ScannerTypes_8h_source"/>
      </node>
      <node id="17">
        <label>threads.h</label>
        <link refid="threads_8h_source"/>
      </node>
      <node id="4">
        <label>YapDefs.h</label>
        <link refid="YapDefs_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>YapError.h</label>
        <link refid="YapError_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>YapErrors.h</label>
        <link refid="YapErrors_8h"/>
      </node>
      <node id="16">
        <label>YapFormat.h</label>
        <link refid="YapFormat_8h_source"/>
      </node>
      <node id="18">
        <label>YapInit.h</label>
        <link refid="YapInit_8h"/>
      </node>
      <node id="2">
        <label>YapInterface.h</label>
        <link refid="YapInterface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>YapTerm.h</label>
        <link refid="YapTerm_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>library/regex/regerror.c</label>
        <link refid="regerror_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>utils.h</label>
        <link refid="utils_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>yapregex.h</label>
        <link refid="yapregex_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>../os/encoding.h</label>
        <link refid="encoding_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>YapConfig.h</label>
      </node>
      <node id="11">
        <label>YapIOConfig.h</label>
      </node>
      <node id="8">
        <label>YapTermConfig.h</label>
      </node>
      <node id="24">
        <label>assert.h</label>
      </node>
      <node id="9">
        <label>config.h</label>
      </node>
      <node id="21">
        <label>limits.h</label>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="12">
        <label>string.h</label>
      </node>
      <node id="22">
        <label>sys/types.h</label>
      </node>
      <node id="19">
        <label>wchar.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structrerr" prot="public">rerr</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="regerror_8c_1a3163e0fa575d4c1b102ac71ea9454896" prot="public" static="yes" mutable="no">
        <type>struct rerr</type>
        <definition>struct rerr rerrs[]</definition>
        <argsstring>[]</argsstring>
        <name>rerrs</name>
        <initializer>= {{REG_NOMATCH, &quot;REG_NOMATCH&quot;, &quot;regexec() failed to <ref refid="structmatch" kindref="compound">match</ref>&quot;},
             {REG_BADPAT, &quot;REG_BADPAT&quot;, &quot;invalid regular expression&quot;},
             {REG_ECOLLATE, &quot;REG_ECOLLATE&quot;, &quot;invalid collating element&quot;},
             {REG_ECTYPE, &quot;REG_ECTYPE&quot;, &quot;invalid character class&quot;},
             {REG_EESCAPE, &quot;REG_EESCAPE&quot;, &quot;trailing backslash (\\)&quot;},
             {REG_ESUBREG, &quot;REG_ESUBREG&quot;, &quot;invalid backreference number&quot;},
             {REG_EBRACK, &quot;REG_EBRACK&quot;, &quot;brackets ([ ]) not balanced&quot;},
             {REG_EPAREN, &quot;REG_EPAREN&quot;, &quot;parentheses not balanced&quot;},
             {REG_EBRACE, &quot;REG_EBRACE&quot;, &quot;braces not balanced&quot;},
             {REG_BADBR, &quot;REG_BADBR&quot;, &quot;invalid repetition count(s)&quot;},
             {REG_ERANGE, &quot;REG_ERANGE&quot;, &quot;invalid character range&quot;},
             {REG_ESPACE, &quot;REG_ESPACE&quot;, &quot;out of memory&quot;},
             {REG_BADRPT, &quot;REG_BADRPT&quot;, &quot;repetition-operator operand invalid&quot;},
             {REG_EMPTY, &quot;REG_EMPTY&quot;, &quot;empty (sub)expression&quot;},
             {REG_ASSERT, &quot;REG_ASSERT&quot;, &quot;\&quot;can&apos;t happen\&quot; -- you found a bug&quot;},
             {REG_INVARG, &quot;REG_INVARG&quot;, &quot;invalid argument to regex routine&quot;},
             {0, &quot;&quot;, &quot;*** unknown regexp error code ***&quot;}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="library/regex/regerror.c" line="115" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="regerror_8c_1a1bd5e05cfd4405c16596a69c119656ff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char * regatoi</definition>
        <argsstring>(const regex_t *preg, char *localbuf)</argsstring>
        <name>regatoi</name>
        <param>
          <type>const <ref refid="structregex__t" kindref="compound">regex_t</ref> *</type>
          <declname>preg</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>localbuf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="library/regex/regerror.c" line="165" column="13" bodyfile="library/regex/regerror.c" bodystart="165" bodyend="177" declfile="library/regex/regerror.c" declline="69" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="regerror_8c_1a13709c44becae0acace2b080459e07f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t yap_regerror</definition>
        <argsstring>(int errcode, const regex_t *preg, char *errbuf, size_t errbuf_size)</argsstring>
        <name>yap_regerror</name>
        <param>
          <type>int</type>
          <declname>errcode</declname>
        </param>
        <param>
          <type>const <ref refid="structregex__t" kindref="compound">regex_t</ref> *</type>
          <declname>preg</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>errbuf_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="library/regex/regerror.c" line="122" column="8" bodyfile="library/regex/regerror.c" bodystart="122" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Error handling. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="library/regex/regerror.c"/>
  </compounddef>
</doxygen>
