<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classsplay__insert_24" kind="predicate" language="Prolog" prot="public">
    <compoundname>splay_insert/4</compoundname>
    <briefdescription>
<para><bold>splay_insert</bold>(+ <emphasis>Key</emphasis>,? <emphasis>Val</emphasis>,+ <emphasis>Tree</emphasis>,- <emphasis>NewTree</emphasis>) </para>
    </briefdescription>
    <detaileddescription>
<para>Insert item <emphasis>Key</emphasis> in tree <emphasis>Tree</emphasis>, assuming that it is not there already The variable <emphasis>Val</emphasis> unifies with a value for key <emphasis>Key</emphasis>, and the variable <emphasis>NewTree</emphasis> unifies with the new tree In our implementation, <emphasis>Key</emphasis> is not inserted if it is already there: rather it is unified with the item already in the tree </para>
    </detaileddescription>
    <location file="library/splay.yap" line="1" column="1" bodyfile="library/splay.yap" bodystart="1" bodyend="-1"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
