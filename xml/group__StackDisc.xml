<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="group__StackDisc" kind="group">
    <compoundname>StackDisc</compoundname>
    <title>Stack Discipline Memory Allocation</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__StackDisc_1gaa3e0fce0b33c94fb8aec19cb56098276" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * __Malloc</definition>
        <argsstring>(size_t sz USES_REGS)</argsstring>
        <name>__Malloc</name>
        <param>
          <type>size_t sz</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/alloc.h" line="204" column="13" bodyfile="C/alloc.c" bodystart="1789" bodyend="1803" declfile="H/alloc.h" declline="204" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__StackDisc_1gaf686381e7d1c19ea257facef153f380e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * __Realloc</definition>
        <argsstring>(void *buf, size_t sz USES_REGS)</argsstring>
        <name>__Realloc</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t sz</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/alloc.h" line="206" column="13" bodyfile="C/alloc.c" bodystart="1827" bodyend="1847" declfile="H/alloc.h" declline="206" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__StackDisc_1ga36880c94793d7ce8a9e9e4fb0cf0418f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __Free</definition>
        <argsstring>(void *buf USES_REGS)</argsstring>
        <name>__Free</name>
        <param>
          <type>void *buf</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/alloc.h" line="207" column="13" declfile="H/alloc.h" declline="207" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__StackDisc_1gadbef206ffcbc3f45f07dd59ec6fe5dd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * __MallocAtLevel</definition>
        <argsstring>(size_t sz, int atL USES_REGS)</argsstring>
        <name>__MallocAtLevel</name>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>int atL</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/alloc.h" line="209" column="13" bodyfile="C/alloc.c" bodystart="1805" bodyend="1825" declfile="H/alloc.h" declline="209" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__StackDisc_1gacc61dfa1ebc4f8001047b503bb7ea608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * MallocExportAsRO</definition>
        <argsstring>(const void *blk)</argsstring>
        <name>MallocExportAsRO</name>
        <param>
          <type>const void *</type>
          <declname>blk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/alloc.h" line="211" column="19" declfile="H/alloc.h" declline="211" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__StackDisc_1ga2daf441172e3c48ffc8966ac53bb2286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AllocLevel</definition>
        <argsstring>(void)</argsstring>
        <name>AllocLevel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/alloc.h" line="217" column="12" bodyfile="C/alloc.c" bodystart="1689" bodyend="1692" declfile="H/alloc.h" declline="217" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__StackDisc_1ga647f214774a472ab85b854d1016d816a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int push_text_stack__</definition>
        <argsstring>(USES_REGS1)</argsstring>
        <name>push_text_stack__</name>
        <param>
          <type>USES_REGS1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/alloc.h" line="239" column="12" bodyfile="C/alloc.c" bodystart="1726" bodyend="1731" declfile="H/alloc.h" declline="239" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__StackDisc_1ga000cce2f66965c052b61633ea6a37d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pop_text_stack__</definition>
        <argsstring>(int lvl USES_REGS)</argsstring>
        <name>pop_text_stack__</name>
        <param>
          <type>int lvl</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/alloc.h" line="240" column="12" declfile="H/alloc.h" declline="240" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__StackDisc_1ga515ac2bb1a21acf7c2d71906660c0081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * pop_output_text_stack__</definition>
        <argsstring>(int lvl, const void *ox USES_REGS)</argsstring>
        <name>pop_output_text_stack__</name>
        <param>
          <type>int</type>
          <declname>lvl</declname>
        </param>
        <param>
          <type>const void *ox</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/alloc.h" line="243" column="13" declfile="H/alloc.h" declline="243" declcolumn="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__StackDisc_1ga842a753bc5c24c4b1c7e037f53439d2a" prot="public" static="no">
        <name>Malloc</name>
        <param><defname>sz</defname></param>
        <initializer>__Malloc(sz PASS_REGS)</initializer>
        <briefdescription>
<para>allocate a temporary text block </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/alloc.h" line="198" column="9" bodyfile="H/alloc.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__StackDisc_1ga821fb4a9c8927c9d864c57fb8c659d8c" prot="public" static="no">
        <name>Realloc</name>
        <param><defname>buf</defname></param>
        <param><defname>sz</defname></param>
        <initializer>__Realloc(buf, sz PASS_REGS)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/alloc.h" line="199" column="9" bodyfile="H/alloc.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__StackDisc_1ga07e62c7f6923287d6f3912de8a880ea9" prot="public" static="no">
        <name>Free</name>
        <param><defname>buf</defname></param>
        <initializer>__Free(buf PASS_REGS)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/alloc.h" line="200" column="9" bodyfile="H/alloc.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__StackDisc_1ga64eee4d560b8200de6a380f9d88cbfe7" prot="public" static="no">
        <name>MallocAtLevel</name>
        <param><defname>sz</defname></param>
        <param><defname>at</defname></param>
        <initializer>__MallocAtLevel(sz, at PASS_REGS)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/alloc.h" line="201" column="9" bodyfile="H/alloc.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__StackDisc_1gab39c26fd38bdabe98cb75946e6baf453" prot="public" static="no">
        <name>BaseMalloc</name>
        <param><defname>sz</defname></param>
        <initializer>__MallocAtLevel(sz, 1 PASS_REGS)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/alloc.h" line="210" column="9" bodyfile="H/alloc.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__StackDisc_1ga1401d91ed4cfc1f56efccf6eda6a5e40" prot="public" static="no">
        <name>MBYTE</name>
        <initializer>(1024 * 1024)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/alloc.h" line="214" column="9" bodyfile="H/alloc.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__StackDisc_1gada0513388cb2ce466d5a7bba6a7b46c8" prot="public" static="no">
        <name>push_text_stack</name>
        <param></param>
        <initializer>push_text_stack__(PASS_REGS1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/alloc.h" line="234" column="10" bodyfile="H/alloc.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__StackDisc_1ga99c49a5891b20d48fdd4eb03f7f04ea0" prot="public" static="no">
        <name>pop_text_stack</name>
        <param><defname>lvl</defname></param>
        <initializer>pop_text_stack__(lvl PASS_REGS)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/alloc.h" line="235" column="9" bodyfile="H/alloc.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__StackDisc_1ga5187f98e618418d167a704bceffecab3" prot="public" static="no">
        <name>pop_output_text_stack</name>
        <param><defname>lvl</defname></param>
        <param><defname>p</defname></param>
        <initializer>pop_output_text_stack__(lvl,p PASS_REGS)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H/alloc.h" line="236" column="9" bodyfile="H/alloc.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>memory who lives during a stack activation </para>
    </briefdescription>
    <detaileddescription>
<para>In other words, most often neds no <computeroutput>free()</computeroutput></para>
    </detaileddescription>
  </compounddef>
</doxygen>
