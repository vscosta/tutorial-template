<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classread__term__from__chars_23" kind="class" language="Prolog" prot="public">
    <compoundname>read_term_from_chars/3</compoundname>
    <briefdescription>
<para><bold>read_term_from_chars</bold>( +String , - <ref refid="classT" kindref="compound">T</ref> , + Options ) </para>
    </briefdescription>
    <detaileddescription>
<para>read a term <emphasis><ref refid="classT" kindref="compound">T</ref></emphasis> stored in a list of characters <emphasis>String</emphasis> according to <emphasis>Options</emphasis></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_String_</parametername>
</parameternamelist>
<parameterdescription>
<para>the source <emphasis>String</emphasis> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_T_</parametername>
</parameternamelist>
<parameterdescription>
<para>the output term <emphasis><ref refid="classT" kindref="compound">T</ref></emphasis>, may be any term </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_Options_</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classread__term_23" kindref="compound">read_term/3</ref> options</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Idea from SWI-Prolog, in YAP only works with strings Check <ref refid="classread__term__from__atomic_23" kindref="compound">read_term_from_atomic/3</ref> for the general version </para>
    </detaileddescription>
    <location file="/home/vsc/github/yap/os/readterm.c" line="1863" column="1" bodyfile="/home/vsc/github/yap/os/readterm.c" bodystart="1863" bodyend="-1"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
