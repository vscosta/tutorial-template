<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classarg_23" kind="class" language="Prolog" prot="public">
    <compoundname>arg/3</compoundname>
    <briefdescription>
<para><bold>arg</bold>(+ <emphasis>N</emphasis>,+ <emphasis><ref refid="classT" kindref="compound">T</ref></emphasis>, <emphasis>A</emphasis>) </para>
    </briefdescription>
    <detaileddescription>
<para>defined in the <emphasis>ISO</emphasis> standard</para>
<para>Succeeds if the argument <emphasis>N</emphasis> of the term <emphasis><ref refid="classT" kindref="compound">T</ref></emphasis> unifies with <emphasis>A</emphasis> The arguments are numbered from 1 to the arity of the term</para>
<para>The current version will generate an error if <emphasis><ref refid="classT" kindref="compound">T</ref></emphasis> or <emphasis>N</emphasis> are unbound, if <emphasis><ref refid="classT" kindref="compound">T</ref></emphasis> is not a compound term, of if <emphasis>N</emphasis> is not a positive integer Note that previous versions of YAP would fail silently under these errors </para>
    </detaileddescription>
    <location file="/home/vsc/github/yap/C/inlines.c" line="679" column="1" bodyfile="/home/vsc/github/yap/C/inlines.c" bodystart="679" bodyend="-1"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
