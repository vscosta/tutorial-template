<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="conceptset__base__module_21" kind="concept">
    <compoundname>set_base_module/1</compoundname>
    <initializer>template&lt;&gt;
concept set_base_module/1 =     </initializer>
    <briefdescription>
<para><bold>set_base_module</bold>( +Expor tingModule ) </para>
    </briefdescription>
    <detaileddescription>
<para>properties: deterministic</para>
<para>All predicates exported from <emphasis>ExportingModule</emphasis> are automatically available to the other source modules</para>
<para>This built-in was introduced by SWI-Prolog In YAP, by default, modules only inherit from <computeroutput>prolog</computeroutput> This extension allows predicates in the current module (see <ref refid="classmodule_22" kindref="compound">module/2</ref> and <ref refid="classmodule_21" kindref="compound">module/1</ref> ) to inherit from <computeroutput>user</computeroutput> or other modules </para>
    </detaileddescription>
    <location file="pl/modules.yap" line="2" column="1"/>
  </compounddef>
</doxygen>
