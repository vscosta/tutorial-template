<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="group__Profiling" kind="group">
    <compoundname>Profiling</compoundname>
    <title>Profiling Prolog Programs</title>
    <innergroup refid="group__Tick__Profiler">Tick Profiler</innergroup>
    <innergroup refid="group__Call__Counting">Counting Calls</innergroup>
    <innergroup refid="group__The__Count__Profiler">The Count Profiler</innergroup>
    <briefdescription>
<para>YAP includes two profilers. </para>
    </briefdescription>
    <detaileddescription>
<para>The count profiler keeps information on the number of times a predicate was called This information can be used to detect what are the most commonly called predicates in the program The count profiler can be compiled by setting YAP&apos;s flag profiling to <computeroutput>on</computeroutput> The time-profiler is a <computeroutput>gprof</computeroutput> profiler, and counts how many ticks are being spent on specific predicates, or on other system functions such as internal data-base accesses or garbage collects</para>
<para>The YAP profiling sub-system is currently under development Functionality for this sub-system will increase with newer implementation</para>
    </detaileddescription>
  </compounddef>
</doxygen>
