<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structopen__query__struct" kind="struct" language="C++" prot="public">
    <compoundname>open_query_struct</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structopen__query__struct_1aecedeba5b1f7d4ecc59b79b0a974f8b0" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int q_open</definition>
        <argsstring></argsstring>
        <name>q_open</name>
        <qualifiedname>open_query_struct::q_open</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/include/YapDefs.h" line="190" column="7" bodyfile="/home/vsc/github/yap/include/YapDefs.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structopen__query__struct_1a8821adef59ad8fde8ee36ffe4c383ed5" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int q_state</definition>
        <argsstring></argsstring>
        <name>q_state</name>
        <qualifiedname>open_query_struct::q_state</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/include/YapDefs.h" line="191" column="7" bodyfile="/home/vsc/github/yap/include/YapDefs.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structopen__query__struct_1addc500d9b6ee0b90dffa04819dc6df39" prot="public" static="no" mutable="no">
        <type>YAP_handle_t</type>
        <definition>YAP_handle_t q_g</definition>
        <argsstring></argsstring>
        <name>q_g</name>
        <qualifiedname>open_query_struct::q_g</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/include/YapDefs.h" line="192" column="16" bodyfile="/home/vsc/github/yap/include/YapDefs.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structopen__query__struct_1a797a4bed958472db51b40ae0c9cae718" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structpred__entry" kindref="compound">pred_entry</ref> *</type>
        <definition>struct pred_entry* q_pe</definition>
        <argsstring></argsstring>
        <name>q_pe</name>
        <qualifiedname>open_query_struct::q_pe</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/include/YapDefs.h" line="193" column="19" bodyfile="/home/vsc/github/yap/include/YapDefs.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structopen__query__struct_1a79c2271bf02eed853f92dfedcb5a456c" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structyami" kindref="compound">yami</ref> *</type>
        <definition>struct yami* q_p</definition>
        <argsstring></argsstring>
        <name>q_p</name>
        <qualifiedname>open_query_struct::q_p</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/include/YapDefs.h" line="194" column="13" bodyfile="/home/vsc/github/yap/include/YapDefs.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structopen__query__struct_1a3ea374115d803cd14857b23271657cc0" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structyami" kindref="compound">yami</ref> *</type>
        <definition>struct yami * q_cp</definition>
        <argsstring></argsstring>
        <name>q_cp</name>
        <qualifiedname>open_query_struct::q_cp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/include/YapDefs.h" line="194" column="17" bodyfile="/home/vsc/github/yap/include/YapDefs.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structopen__query__struct_1aaa489a5943390b3e1f50490eb0c77ee2" prot="public" static="no" mutable="no">
        <type>jmp_buf</type>
        <definition>jmp_buf q_env</definition>
        <argsstring></argsstring>
        <name>q_env</name>
        <qualifiedname>open_query_struct::q_env</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/include/YapDefs.h" line="195" column="11" bodyfile="/home/vsc/github/yap/include/YapDefs.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structopen__query__struct_1aa81a2263fb99f108e98793780b4c7721" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int q_flags</definition>
        <argsstring></argsstring>
        <name>q_flags</name>
        <qualifiedname>open_query_struct::q_flags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/include/YapDefs.h" line="196" column="7" bodyfile="/home/vsc/github/yap/include/YapDefs.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structopen__query__struct_1a6f91d6122d03ffcf23e64270e3c2fe87" prot="public" static="no" mutable="no">
        <type><ref refid="structYAP__dogoalinfo" kindref="compound">YAP_dogoalinfo</ref></type>
        <definition>YAP_dogoalinfo q_h</definition>
        <argsstring></argsstring>
        <name>q_h</name>
        <qualifiedname>open_query_struct::q_h</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/include/YapDefs.h" line="197" column="18" bodyfile="/home/vsc/github/yap/include/YapDefs.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structopen__query__struct_1a3f83038f4185213d69ad1f1f0d4748e9" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structopen__query__struct" kindref="compound">open_query_struct</ref> *</type>
        <definition>struct open_query_struct* oq</definition>
        <argsstring></argsstring>
        <name>oq</name>
        <qualifiedname>open_query_struct::oq</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/include/YapDefs.h" line="198" column="26" bodyfile="/home/vsc/github/yap/include/YapDefs.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="7">
        <label>AtomEntryStruct</label>
        <link refid="structAtomEntryStruct"/>
        <childnode refid="7" relation="usage">
          <edgelabel>NextOfAE</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>PropsOfAE</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>blob</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>DB_STRUCT</label>
        <link refid="structDB__STRUCT"/>
        <childnode refid="6" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>Parent</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>Code</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>Next</edgelabel>
          <edgelabel>Prev</edgelabel>
          <edgelabel>n</edgelabel>
          <edgelabel>p</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>DBT</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>DB_TERM</label>
        <link refid="structDB__TERM"/>
        <childnode refid="9" relation="usage">
          <edgelabel>NextDBT</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>DBRefs</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>FunctorEntryStruct</label>
        <link refid="structFunctorEntryStruct"/>
        <childnode refid="3" relation="usage">
          <edgelabel>NextOfPE</edgelabel>
          <edgelabel>PropsOfFE</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>NameOfFE</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>PropEntryStruct</label>
        <link refid="structPropEntryStruct"/>
        <childnode refid="3" relation="usage">
          <edgelabel>NextOfPE</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>YAP_dogoalinfo</label>
        <link refid="structYAP__dogoalinfo"/>
        <childnode refid="4" relation="usage">
          <edgelabel>cp</edgelabel>
          <edgelabel>p</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>atom_blob</label>
        <link refid="structatom__blob"/>
      </node>
      <node id="5">
        <label>logic_upd_clause</label>
        <link refid="structlogic__upd__clause"/>
        <childnode refid="6" relation="usage">
          <edgelabel>Id</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>ClCode</edgelabel>
          <edgelabel>ClExt</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>ClSource</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>ClOwner</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ClNext</edgelabel>
          <edgelabel>ClPrev</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>ClPred</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>logic_upd_index</label>
        <link refid="structlogic__upd__index"/>
        <childnode refid="12" relation="usage">
          <edgelabel>ChildIndex</edgelabel>
          <edgelabel>ParentIndex</edgelabel>
          <edgelabel>PrevSiblingIndex</edgelabel>
          <edgelabel>SiblingIndex</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>ClPred</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>ClCode</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>open_query_struct</label>
        <link refid="structopen__query__struct"/>
        <childnode refid="2" relation="usage">
          <edgelabel>q_pe</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>q_cp</edgelabel>
          <edgelabel>q_p</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>q_h</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>oq</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>pred_entry</label>
        <link refid="structpred__entry"/>
        <childnode refid="3" relation="usage">
          <edgelabel>NextOfPE</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>CodeOfPred</edgelabel>
          <edgelabel>FirstClause</edgelabel>
          <edgelabel>LastClause</edgelabel>
          <edgelabel>MetaEntryOfPred</edgelabel>
          <edgelabel>TrueCodeOfPred</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>FunctorOfPred</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>OwnerFile</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>StatisticsForPred</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>NextPredOfHash</edgelabel>
          <edgelabel>NextPredOfModule</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>profile_data</label>
        <link refid="structprofile__data"/>
      </node>
      <node id="11">
        <label>struct_dbentry</label>
        <link refid="structstruct__dbentry"/>
        <childnode refid="3" relation="usage">
          <edgelabel>NextOfPE</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>FunctorOfDB</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>F0</edgelabel>
          <edgelabel>First</edgelabel>
          <edgelabel>L0</edgelabel>
          <edgelabel>Last</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>yami</label>
        <link refid="structyami"/>
        <childnode refid="4" relation="usage">
          <edgelabel>F</edgelabel>
          <edgelabel>T</edgelabel>
          <edgelabel>d</edgelabel>
          <edgelabel>f</edgelabel>
          <edgelabel>l</edgelabel>
          <edgelabel>l1</edgelabel>
          <edgelabel>l2</edgelabel>
          <edgelabel>l3</edgelabel>
          <edgelabel>l4</edgelabel>
          <edgelabel>n</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ClBase</edgelabel>
          <edgelabel>d</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>f</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>I</edgelabel>
          <edgelabel>block</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>p</edgelabel>
          <edgelabel>p0</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/vsc/github/yap/include/YapDefs.h" line="189" column="1" bodyfile="/home/vsc/github/yap/include/YapDefs.h" bodystart="189" bodyend="199"/>
    <listofallmembers>
      <member refid="structopen__query__struct_1a3f83038f4185213d69ad1f1f0d4748e9" prot="public" virt="non-virtual"><scope>open_query_struct</scope><name>oq</name></member>
      <member refid="structopen__query__struct_1a3ea374115d803cd14857b23271657cc0" prot="public" virt="non-virtual"><scope>open_query_struct</scope><name>q_cp</name></member>
      <member refid="structopen__query__struct_1aaa489a5943390b3e1f50490eb0c77ee2" prot="public" virt="non-virtual"><scope>open_query_struct</scope><name>q_env</name></member>
      <member refid="structopen__query__struct_1aa81a2263fb99f108e98793780b4c7721" prot="public" virt="non-virtual"><scope>open_query_struct</scope><name>q_flags</name></member>
      <member refid="structopen__query__struct_1addc500d9b6ee0b90dffa04819dc6df39" prot="public" virt="non-virtual"><scope>open_query_struct</scope><name>q_g</name></member>
      <member refid="structopen__query__struct_1a6f91d6122d03ffcf23e64270e3c2fe87" prot="public" virt="non-virtual"><scope>open_query_struct</scope><name>q_h</name></member>
      <member refid="structopen__query__struct_1aecedeba5b1f7d4ecc59b79b0a974f8b0" prot="public" virt="non-virtual"><scope>open_query_struct</scope><name>q_open</name></member>
      <member refid="structopen__query__struct_1a79c2271bf02eed853f92dfedcb5a456c" prot="public" virt="non-virtual"><scope>open_query_struct</scope><name>q_p</name></member>
      <member refid="structopen__query__struct_1a797a4bed958472db51b40ae0c9cae718" prot="public" virt="non-virtual"><scope>open_query_struct</scope><name>q_pe</name></member>
      <member refid="structopen__query__struct_1a8821adef59ad8fde8ee36ffe4c383ed5" prot="public" virt="non-virtual"><scope>open_query_struct</scope><name>q_state</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
