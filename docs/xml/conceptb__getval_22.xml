<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="conceptb__getval_22" kind="concept">
    <compoundname>b_getval/2</compoundname>
    <initializer>template&lt;&gt;
concept b_getval/2 =     </initializer>
    <briefdescription>
<para><bold>b_getval</bold>(+ <emphasis>Name</emphasis>, - <emphasis>Value</emphasis>) </para>
    </briefdescription>
    <detaileddescription>
<para><bold>b_getval</bold>(+ <emphasis>Name</emphasis>,- <emphasis>Value</emphasis>)</para>
<para>Get the value associated with the global variable <emphasis>Name</emphasis> and unify it with <emphasis>Value</emphasis> Note that this unification may further instantiate the value of the global variable If this is undesirable the normal precautions (double negation or <ref refid="classcopy__term_22" kindref="compound">copy_term/2</ref> ) must be taken The <ref refid="classb__getval_22" kindref="compound">b_getval/2</ref> predicate generates errors if <emphasis>Name</emphasis> is not an atom or the requested variable does not exist</para>
<para>Notice that for compatibility with other systems <emphasis>Name</emphasis> <emphasis>must</emphasis> be already associated with a term: otherwise the system will generate an error</para>
<para>Get the value associated with the global variable <emphasis>Name</emphasis> and unify it with <emphasis>Value</emphasis> Note that this unification may further instantiate [the value of the global variable If this is undesirable the normal precautions (double negation or <ref refid="classcopy__term_22" kindref="compound">copy_term/2</ref> ) must be taken The <ref refid="classb__getval_22" kindref="compound">b_getval/2</ref> predicate generates errors if <emphasis>Name</emphasis> is not an atom or the requested variable does not exist </para>
    </detaileddescription>
    <location file="pl/control.yap" line="1" column="1"/>
  </compounddef>
</doxygen>
