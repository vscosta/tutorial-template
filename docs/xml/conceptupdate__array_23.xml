<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="conceptupdate__array_23" kind="concept">
    <compoundname>update_array/3</compoundname>
    <initializer>template&lt;&gt;
concept update_array/3 =     </initializer>
    <briefdescription>
<para><bold>update_array</bold>(+ <emphasis>Name</emphasis>, + <emphasis>Index</emphasis>, ? <emphasis>Value</emphasis>) </para>
    </briefdescription>
    <detaileddescription>
<para>Attribute value <emphasis>Value</emphasis> to <emphasis>Name</emphasis>[ <emphasis>Index</emphasis>] Type restrictions must be respected for static arrays This operation is available for dynamic arrays if <computeroutput>MULTI_ASSIGNMENT_VARIABLES</computeroutput> is enabled (true by default) Backtracking undoes <emphasis><ref refid="classupdate__array_23" kindref="compound">update_array/3</ref> </emphasis> for dynamic arrays, but not for static arrays</para>
<para>Note that <ref refid="classupdate__array_23" kindref="compound">update_array/3</ref> actually uses <computeroutput><ref refid="classsetarg_23" kindref="compound">setarg/3</ref> </computeroutput> to update elements of dynamic arrays, and <computeroutput><ref refid="classsetarg_23" kindref="compound">setarg/3</ref> </computeroutput> spends an extra cell for every update For intensive operations we suggest it may be less expensive to unify each element of the array with a mutable terms and to use the operations on mutable terms </para>
    </detaileddescription>
    <location file="C/arrays.c" line="1735" column="1"/>
  </compounddef>
</doxygen>
