<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classYAPPrologPredicate" kind="class" language="C++" prot="public">
    <compoundname>YAPPrologPredicate</compoundname>
    <basecompoundref refid="classYAPPredicate" prot="public" virt="non-virtual">YAPPredicate</basecompoundref>
    <includes refid="tmp_2yapdb_8hh" local="no">yapdb.hh</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classYAPPrologPredicate_1a52d0facb165e90a8397f7818823f497a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>YAPPrologPredicate</definition>
        <argsstring>(YAPTerm t)</argsstring>
        <name>YAPPrologPredicate</name>
        <qualifiedname>YAPPrologPredicate::YAPPrologPredicate</qualifiedname>
        <param>
          <type><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="305" column="3" bodyfile="/home/vsc/github/yap/CXX/tmp/yapdb.hh" bodystart="305" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classYAPPrologPredicate_1a10e64505f6584d725663835d3e282241" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>YAPPrologPredicate</definition>
        <argsstring>(const char *s, arity_t arity)</argsstring>
        <name>YAPPrologPredicate</name>
        <qualifiedname>YAPPrologPredicate::YAPPrologPredicate</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>arity_t</type>
          <declname>arity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="306" column="3" bodyfile="/home/vsc/github/yap/CXX/tmp/yapdb.hh" bodystart="306" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classYAPPrologPredicate_1a8ee89487baca2836b8048cf403dd9d95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>YAPPrologPredicate</definition>
        <argsstring>(YAPAtom s, arity_t arity)</argsstring>
        <name>YAPPrologPredicate</name>
        <qualifiedname>YAPPrologPredicate::YAPPrologPredicate</qualifiedname>
        <param>
          <type><ref refid="classYAPAtom" kindref="compound">YAPAtom</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>arity_t</type>
          <declname>arity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="307" column="3" bodyfile="/home/vsc/github/yap/CXX/tmp/yapdb.hh" bodystart="307" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classYAPPrologPredicate_1a7b6e4b896ac6593642739a562f3c819b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool assertClause</definition>
        <argsstring>(YAPTerm clause, bool last=true, YAPTerm source=YAPTerm())</argsstring>
        <name>assertClause</name>
        <qualifiedname>YAPPrologPredicate::assertClause</qualifiedname>
        <param>
          <type><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref></type>
          <declname>clause</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>last</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref></type>
          <declname>source</declname>
          <defval><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref>()</defval>
        </param>
        <briefdescription>
<para>add a new clause </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="309" column="8" bodyfile="/home/vsc/github/yap/CXX/yapi.cpp" bodystart="1169" bodyend="1176"/>
      </memberdef>
      <memberdef kind="function" id="classYAPPrologPredicate_1a30b83d3e77254b3eb778681ba50bcdd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool assertFact</definition>
        <argsstring>(YAPTerm *tuple, bool last=true)</argsstring>
        <name>assertFact</name>
        <qualifiedname>YAPPrologPredicate::assertFact</qualifiedname>
        <param>
          <type><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref> *</type>
          <declname>tuple</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>last</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>add a new tuple </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="312" column="8" bodyfile="/home/vsc/github/yap/CXX/yapi.cpp" bodystart="1178" bodyend="1180"/>
      </memberdef>
      <memberdef kind="function" id="classYAPPrologPredicate_1aa42d7b5670afd61bf7eeacf8996c60bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * retractClause</definition>
        <argsstring>(YAPTerm skeleton, bool all=false)</argsstring>
        <name>retractClause</name>
        <qualifiedname>YAPPrologPredicate::retractClause</qualifiedname>
        <param>
          <type><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref></type>
          <declname>skeleton</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>all</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>retract at least the first clause matching the predicate </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="314" column="8" bodyfile="/home/vsc/github/yap/CXX/yapi.cpp" bodystart="1182" bodyend="1184"/>
      </memberdef>
      <memberdef kind="function" id="classYAPPrologPredicate_1a66f2213bfd8ef4b51392076745d767aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref> *</type>
        <definition>YAPTerm * nextClause</definition>
        <argsstring>()</argsstring>
        <name>nextClause</name>
        <qualifiedname>YAPPrologPredicate::nextClause</qualifiedname>
        <briefdescription>
<para>return the Nth clause (if source is available) </para>
        </briefdescription>
        <detaileddescription>
<para>return the Nth clause (if source is available) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="318" column="11" bodyfile="/home/vsc/github/yap/CXX/tmp/yapdb.hh" bodystart="318" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classYAPPrologPredicate_1a52d0facb165e90a8397f7818823f497a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>YAPPrologPredicate</definition>
        <argsstring>(YAPTerm t)</argsstring>
        <name>YAPPrologPredicate</name>
        <qualifiedname>YAPPrologPredicate::YAPPrologPredicate</qualifiedname>
        <param>
          <type><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="283" column="3" bodyfile="/home/vsc/github/yap/CXX/yapdb.hh" bodystart="283" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classYAPPrologPredicate_1a10e64505f6584d725663835d3e282241" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>YAPPrologPredicate</definition>
        <argsstring>(const char *s, arity_t arity)</argsstring>
        <name>YAPPrologPredicate</name>
        <qualifiedname>YAPPrologPredicate::YAPPrologPredicate</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>arity_t</type>
          <declname>arity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="284" column="3" bodyfile="/home/vsc/github/yap/CXX/yapdb.hh" bodystart="284" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classYAPPrologPredicate_1a8ee89487baca2836b8048cf403dd9d95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>YAPPrologPredicate</definition>
        <argsstring>(YAPAtom s, arity_t arity)</argsstring>
        <name>YAPPrologPredicate</name>
        <qualifiedname>YAPPrologPredicate::YAPPrologPredicate</qualifiedname>
        <param>
          <type><ref refid="classYAPAtom" kindref="compound">YAPAtom</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>arity_t</type>
          <declname>arity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="285" column="3" bodyfile="/home/vsc/github/yap/CXX/yapdb.hh" bodystart="285" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classYAPPrologPredicate_1a7b6e4b896ac6593642739a562f3c819b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool assertClause</definition>
        <argsstring>(YAPTerm clause, bool last=true, YAPTerm source=YAPTerm())</argsstring>
        <name>assertClause</name>
        <qualifiedname>YAPPrologPredicate::assertClause</qualifiedname>
        <param>
          <type><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref></type>
          <declname>clause</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>last</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref></type>
          <declname>source</declname>
          <defval><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref>()</defval>
        </param>
        <briefdescription>
<para>add a new clause </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="287" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classYAPPrologPredicate_1a30b83d3e77254b3eb778681ba50bcdd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool assertFact</definition>
        <argsstring>(YAPTerm *tuple, bool last=true)</argsstring>
        <name>assertFact</name>
        <qualifiedname>YAPPrologPredicate::assertFact</qualifiedname>
        <param>
          <type><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref> *</type>
          <declname>tuple</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>last</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>add a new tuple </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="290" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classYAPPrologPredicate_1aa42d7b5670afd61bf7eeacf8996c60bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * retractClause</definition>
        <argsstring>(YAPTerm skeleton, bool all=false)</argsstring>
        <name>retractClause</name>
        <qualifiedname>YAPPrologPredicate::retractClause</qualifiedname>
        <param>
          <type><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref></type>
          <declname>skeleton</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>all</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>retract at least the first clause matching the predicate </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="292" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classYAPPrologPredicate_1a66f2213bfd8ef4b51392076745d767aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classYAPTerm" kindref="compound">YAPTerm</ref> *</type>
        <definition>YAPTerm * nextClause</definition>
        <argsstring>()</argsstring>
        <name>nextClause</name>
        <qualifiedname>YAPPrologPredicate::nextClause</qualifiedname>
        <briefdescription>
<para>return the Nth clause (if source is available) </para>
        </briefdescription>
        <detaileddescription>
<para>return the Nth clause (if source is available) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/CXX/yapdb.hh" line="296" column="11" bodyfile="/home/vsc/github/yap/CXX/yapdb.hh" bodystart="296" bodyend="296"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>PrologPredicate. </para>
    </briefdescription>
    <detaileddescription>
<para>This class interfaces with Predicates Implemented in Prolog</para>
<para>This class interfaces with Predicates Implemented in Prolog </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>YAPModuleProp</label>
        <link refid="classYAPModuleProp"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>YAPPredicate</label>
        <link refid="classYAPPredicate"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>YAPPrologPredicate</label>
        <link refid="classYAPPrologPredicate"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>YAPProp</label>
        <link refid="classYAPProp"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>AtomEntryStruct</label>
        <link refid="structAtomEntryStruct"/>
        <childnode refid="10" relation="usage">
          <edgelabel>NextOfAE</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>PropsOfAE</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>blob</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>DB_STRUCT</label>
        <link refid="structDB__STRUCT"/>
        <childnode refid="9" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>Parent</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>Code</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>Next</edgelabel>
          <edgelabel>Prev</edgelabel>
          <edgelabel>n</edgelabel>
          <edgelabel>p</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>DBT</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>DB_TERM</label>
        <link refid="structDB__TERM"/>
        <childnode refid="12" relation="usage">
          <edgelabel>NextDBT</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>DBRefs</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>FunctorEntryStruct</label>
        <link refid="structFunctorEntryStruct"/>
        <childnode refid="6" relation="usage">
          <edgelabel>NextOfPE</edgelabel>
          <edgelabel>PropsOfFE</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>NameOfFE</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>PropEntryStruct</label>
        <link refid="structPropEntryStruct"/>
        <childnode refid="6" relation="usage">
          <edgelabel>NextOfPE</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>YAPModuleProp</label>
        <link refid="classYAPModuleProp"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>YAPPredicate</label>
        <link refid="classYAPPredicate"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ap</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>YAPPrologPredicate</label>
        <link refid="classYAPPrologPredicate"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>YAPProp</label>
        <link refid="classYAPProp"/>
      </node>
      <node id="11">
        <label>atom_blob</label>
        <link refid="structatom__blob"/>
      </node>
      <node id="8">
        <label>logic_upd_clause</label>
        <link refid="structlogic__upd__clause"/>
        <childnode refid="9" relation="usage">
          <edgelabel>Id</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>ClCode</edgelabel>
          <edgelabel>ClExt</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>ClSource</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>ClOwner</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>ClNext</edgelabel>
          <edgelabel>ClPrev</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ClPred</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>logic_upd_index</label>
        <link refid="structlogic__upd__index"/>
        <childnode refid="15" relation="usage">
          <edgelabel>ChildIndex</edgelabel>
          <edgelabel>ParentIndex</edgelabel>
          <edgelabel>PrevSiblingIndex</edgelabel>
          <edgelabel>SiblingIndex</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ClPred</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>ClCode</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>pred_entry</label>
        <link refid="structpred__entry"/>
        <childnode refid="6" relation="usage">
          <edgelabel>NextOfPE</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>CodeOfPred</edgelabel>
          <edgelabel>FirstClause</edgelabel>
          <edgelabel>LastClause</edgelabel>
          <edgelabel>MetaEntryOfPred</edgelabel>
          <edgelabel>TrueCodeOfPred</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>FunctorOfPred</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>OwnerFile</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>StatisticsForPred</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>NextPredOfHash</edgelabel>
          <edgelabel>NextPredOfModule</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>profile_data</label>
        <link refid="structprofile__data"/>
      </node>
      <node id="14">
        <label>struct_dbentry</label>
        <link refid="structstruct__dbentry"/>
        <childnode refid="6" relation="usage">
          <edgelabel>NextOfPE</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>FunctorOfDB</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>F0</edgelabel>
          <edgelabel>First</edgelabel>
          <edgelabel>L0</edgelabel>
          <edgelabel>Last</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>yami</label>
        <link refid="structyami"/>
        <childnode refid="7" relation="usage">
          <edgelabel>F</edgelabel>
          <edgelabel>T</edgelabel>
          <edgelabel>d</edgelabel>
          <edgelabel>f</edgelabel>
          <edgelabel>l</edgelabel>
          <edgelabel>l1</edgelabel>
          <edgelabel>l2</edgelabel>
          <edgelabel>l3</edgelabel>
          <edgelabel>l4</edgelabel>
          <edgelabel>n</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>ClBase</edgelabel>
          <edgelabel>d</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>f</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>I</edgelabel>
          <edgelabel>block</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>p</edgelabel>
          <edgelabel>p0</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/vsc/github/yap/CXX/tmp/yapdb.hh" line="303" column="1" bodyfile="/home/vsc/github/yap/CXX/tmp/yapdb.hh" bodystart="303" bodyend="319"/>
    <listofallmembers>
      <member refid="classYAPPredicate_1a839d6526c02047d6014f3f70ccbf77ca" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>ap</name></member>
      <member refid="classYAPPredicate_1a1a6c0ed3b23d695428b3cc2659036e30" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>arity</name></member>
      <member refid="classYAPPredicate_1a1a6c0ed3b23d695428b3cc2659036e30" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>arity</name></member>
      <member refid="classYAPPredicate_1aa6191e913472b983093c01c1bf932226" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>asPred</name></member>
      <member refid="classYAPPredicate_1aa6191e913472b983093c01c1bf932226" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>asPred</name></member>
      <member refid="classYAPPrologPredicate_1a7b6e4b896ac6593642739a562f3c819b" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>assertClause</name></member>
      <member refid="classYAPPrologPredicate_1a7b6e4b896ac6593642739a562f3c819b" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>assertClause</name></member>
      <member refid="classYAPPrologPredicate_1a30b83d3e77254b3eb778681ba50bcdd3" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>assertFact</name></member>
      <member refid="classYAPPrologPredicate_1a30b83d3e77254b3eb778681ba50bcdd3" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>assertFact</name></member>
      <member refid="classYAPPredicate_1ab4c33ce3d95491d0ebf1cdd176e5798d" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>functor</name></member>
      <member refid="classYAPPredicate_1ab4c33ce3d95491d0ebf1cdd176e5798d" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>functor</name></member>
      <member refid="classYAPPredicate_1af610666f80f3e2cc32141aac455386a9" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>getArity</name></member>
      <member refid="classYAPPredicate_1af610666f80f3e2cc32141aac455386a9" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>getArity</name></member>
      <member refid="classYAPPredicate_1a221827607deb87db2a667e3464069dfd" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>getPred</name></member>
      <member refid="classYAPPredicate_1a221827607deb87db2a667e3464069dfd" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>getPred</name></member>
      <member refid="classYAPPredicate_1ad7e7e243814ba75f01ab17f9bdea20c5" prot="public" virt="virtual"><scope>YAPPrologPredicate</scope><name>module</name></member>
      <member refid="classYAPPredicate_1ad7e7e243814ba75f01ab17f9bdea20c5" prot="public" virt="virtual"><scope>YAPPrologPredicate</scope><name>module</name></member>
      <member refid="classYAPPredicate_1aa81cc38dff90358b272f46b7f442b96f" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>name</name></member>
      <member refid="classYAPPredicate_1aa81cc38dff90358b272f46b7f442b96f" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>name</name></member>
      <member refid="classYAPPrologPredicate_1a66f2213bfd8ef4b51392076745d767aa" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>nextClause</name></member>
      <member refid="classYAPPrologPredicate_1a66f2213bfd8ef4b51392076745d767aa" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>nextClause</name></member>
      <member refid="classYAPPredicate_1a034c990d9a63b743fd7db59da5455fad" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>predEntry</name></member>
      <member refid="classYAPPredicate_1a034c990d9a63b743fd7db59da5455fad" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>predEntry</name></member>
      <member refid="classYAPPrologPredicate_1aa42d7b5670afd61bf7eeacf8996c60bf" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>retractClause</name></member>
      <member refid="classYAPPrologPredicate_1aa42d7b5670afd61bf7eeacf8996c60bf" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>retractClause</name></member>
      <member refid="classYAPModuleProp_1adf690c4e6af7f45d7825ad773b361c7f" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPModuleProp</name></member>
      <member refid="classYAPModuleProp_1ab14e7d554901cdc212b884cae816f5de" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPModuleProp</name></member>
      <member refid="classYAPPredicate_1a255d049e4e7504d950d7d5c3aa88b123" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a736af68fff04dcf3e65d2cafe9a94208" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1aaafc77158efa32b43c50a4d18414a0e2" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a99c37898eb0dffd137ad1df69c44cc96" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a90447039b725dc6f517258415fd8684f" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a1ddef13a05f27efc4f924b996039add1" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a6f15eb837f0254301396dabefa9847be" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a6e63817a11e3cd53a2fcf7104d853b21" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1ae5dc855b114b682b9c539b4ba60d7c87" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1af30be87590acccb6ce7157ce2244e182" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1aab7e9cb818ca49a91301cb7cd7a89e43" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a131daa736323a89d0e1c8c5c3c8c8408" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a1b010f7b47026ff7ea2fe226fe19748e" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a5ee2f0a3479a7c05d820e7aa33aad41d" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a497c3162a2df06c3d589c7e89b254e51" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a9c40b8f42f91ea7e952c28ba4c9f04c9" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a3818a65b9b966890fb413553aa63e8d5" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1ad3c7235fd07739c3234e2e01044db777" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1aa580424b7ce0f88c0e4687489dfc02dd" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a255d049e4e7504d950d7d5c3aa88b123" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a736af68fff04dcf3e65d2cafe9a94208" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1aaafc77158efa32b43c50a4d18414a0e2" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a99c37898eb0dffd137ad1df69c44cc96" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a90447039b725dc6f517258415fd8684f" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a1ddef13a05f27efc4f924b996039add1" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a6f15eb837f0254301396dabefa9847be" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a6e63817a11e3cd53a2fcf7104d853b21" prot="protected" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1ae5dc855b114b682b9c539b4ba60d7c87" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1af30be87590acccb6ce7157ce2244e182" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1aab7e9cb818ca49a91301cb7cd7a89e43" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a131daa736323a89d0e1c8c5c3c8c8408" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a1b010f7b47026ff7ea2fe226fe19748e" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a5ee2f0a3479a7c05d820e7aa33aad41d" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a497c3162a2df06c3d589c7e89b254e51" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a9c40b8f42f91ea7e952c28ba4c9f04c9" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1a3818a65b9b966890fb413553aa63e8d5" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1ad3c7235fd07739c3234e2e01044db777" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPredicate_1aa580424b7ce0f88c0e4687489dfc02dd" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPredicate</name></member>
      <member refid="classYAPPrologPredicate_1a52d0facb165e90a8397f7818823f497a" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPrologPredicate</name></member>
      <member refid="classYAPPrologPredicate_1a10e64505f6584d725663835d3e282241" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPrologPredicate</name></member>
      <member refid="classYAPPrologPredicate_1a8ee89487baca2836b8048cf403dd9d95" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPrologPredicate</name></member>
      <member refid="classYAPPrologPredicate_1a52d0facb165e90a8397f7818823f497a" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPrologPredicate</name></member>
      <member refid="classYAPPrologPredicate_1a10e64505f6584d725663835d3e282241" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPrologPredicate</name></member>
      <member refid="classYAPPrologPredicate_1a8ee89487baca2836b8048cf403dd9d95" prot="public" virt="non-virtual"><scope>YAPPrologPredicate</scope><name>YAPPrologPredicate</name></member>
      <member refid="classYAPProp_1a5c6ec2f85493ee40cd1d06d51e56d90d" prot="public" virt="virtual"><scope>YAPPrologPredicate</scope><name>~YAPProp</name></member>
      <member refid="classYAPProp_1a5c6ec2f85493ee40cd1d06d51e56d90d" prot="public" virt="virtual"><scope>YAPPrologPredicate</scope><name>~YAPProp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
