<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="index_8c" kind="file" language="C++">
    <compoundname>index.c</compoundname>
    <includes refid="absmi_8h" local="yes">absmi.h</includes>
    <includes refid="YapCompile_8h" local="yes">YapCompile.h</includes>
    <includes refid="index_8h" local="yes">index.h</includes>
    <includes refid="cut__c_8h" local="yes">cut_c.h</includes>
    <includes refid="findclause_8h" local="yes">findclause.h</includes>
    <includes refid="headclause_8h" local="yes">headclause.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/vsc/github/yap/C/index.c</label>
        <link refid="index_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Atoms.h</label>
        <link refid="Atoms_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>Regs.h</label>
        <link refid="Regs_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ScannerTypes.h</label>
        <link refid="ScannerTypes_8h_source"/>
      </node>
      <node id="28">
        <label>TermExt.h</label>
        <link refid="TermExt_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Yap.h</label>
        <link refid="Yap_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>YapArenas.h</label>
        <link refid="YapArenas_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>YapCompile.h</label>
        <link refid="YapCompile_8h_source"/>
      </node>
      <node id="30">
        <label>YapCompoundTerm.h</label>
        <link refid="YapCompoundTerm_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>YapEval.h</label>
        <link refid="YapEval_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>YapFlags.h</label>
        <link refid="YapFlags_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>YapGFlagInfo.h</label>
        <link refid="YapGFlagInfo_8h"/>
      </node>
      <node id="37">
        <label>YapHandles.h</label>
        <link refid="YapHandles_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>YapHeap.h</label>
        <link refid="YapHeap_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>YapLFlagInfo.h</label>
        <link refid="YapLFlagInfo_8h"/>
      </node>
      <node id="27">
        <label>YapOpcodes.h</label>
        <link refid="YapOpcodes_8h_source"/>
      </node>
      <node id="36">
        <label>YapSignals.h</label>
        <link refid="YapSignals_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>YapTags.h</label>
        <link refid="YapTags_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>YapText.h</label>
        <link refid="YapText_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>Yapproto.h</label>
        <link refid="Yapproto_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>Yatom.h</label>
        <link refid="Yatom_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>absmi.h</label>
        <link refid="absmi_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>alloc.h</label>
        <link refid="alloc_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>amidefs.h</label>
        <link refid="amidefs_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>amiops.h</label>
        <link refid="amiops_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>arrays.h</label>
        <link refid="arrays_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>clause.h</label>
        <link refid="clause_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>corout.h</label>
        <link refid="corout_8h_source"/>
      </node>
      <node id="61">
        <label>cut_c.h</label>
        <link refid="cut__c_8h_source"/>
      </node>
      <node id="62">
        <label>findclause.h</label>
        <link refid="findclause_8h_source"/>
      </node>
      <node id="43">
        <label>generated/h0globals.h</label>
        <link refid="h0globals_8h_source"/>
      </node>
      <node id="42">
        <label>generated/h0struct.h</label>
        <link refid="h0struct_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>generated/hlocals.h</label>
        <link refid="hlocals_8h_source"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>generated/tatoms.h</label>
        <link refid="tatoms_8h_source"/>
      </node>
      <node id="35">
        <label>gprof.h</label>
        <link refid="gprof_8h_source"/>
      </node>
      <node id="63">
        <label>headclause.h</label>
        <link refid="headclause_8h_source"/>
      </node>
      <node id="60">
        <label>index.h</label>
        <link refid="index_8h_source"/>
      </node>
      <node id="6">
        <label>inline-only.h</label>
        <link refid="inline-only_8h_source"/>
      </node>
      <node id="45">
        <label>locals.h</label>
        <link refid="locals_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>nolocks.h</label>
        <link refid="nolocks_8h_source"/>
      </node>
      <node id="55">
        <label>terms.h</label>
        <link refid="terms_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>threads.h</label>
        <link refid="threads_8h_source"/>
      </node>
      <node id="58">
        <label>trim_trail.h</label>
        <link refid="trim__trail_8h_source"/>
      </node>
      <node id="50">
        <label>GitSHA1.h</label>
        <link refid="GitSHA1_8h_source"/>
      </node>
      <node id="7">
        <label>YapDefs.h</label>
        <link refid="YapDefs_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>YapError.h</label>
        <link refid="YapError_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>YapErrors.h</label>
        <link refid="YapErrors_8h"/>
      </node>
      <node id="19">
        <label>YapFormat.h</label>
        <link refid="YapFormat_8h_source"/>
      </node>
      <node id="21">
        <label>YapInit.h</label>
        <link refid="YapInit_8h"/>
      </node>
      <node id="10">
        <label>YapTerm.h</label>
        <link refid="YapTerm_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>YapUTF8.h</label>
        <link refid="YapUTF8_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>../os/encoding.h</label>
        <link refid="encoding_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>YapConfig.h</label>
      </node>
      <node id="14">
        <label>YapIOConfig.h</label>
      </node>
      <node id="11">
        <label>YapTermConfig.h</label>
      </node>
      <node id="12">
        <label>config.h</label>
      </node>
      <node id="46">
        <label>dlocals.h</label>
      </node>
      <node id="29">
        <label>stddef.h</label>
      </node>
      <node id="8">
        <label>stdio.h</label>
      </node>
      <node id="9">
        <label>stdlib.h</label>
      </node>
      <node id="15">
        <label>string.h</label>
      </node>
      <node id="53">
        <label>utf8proc.h</label>
      </node>
      <node id="23">
        <label>wchar.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="index_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" prot="public" static="no">
        <name>NULL</name>
        <initializer>(void *)0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="646" column="9" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="646" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="index_8c_1afc0f6ffc5ddd1952cc5395761d97bd0c" prot="public" static="no">
        <name>SET_JLBL</name>
        <param><defname>X</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="656" column="10" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="656" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="index_8c_1a506229747564138401f270819f9216a0" prot="public" static="no">
        <name>M_EVEN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1004" column="9"/>
      </memberdef>
      <memberdef kind="define" id="index_8c_1a2321acedf8db23e930c08b7bee54e7b7" prot="public" static="no">
        <name>arg_from_x</name>
        <param><defname>I</defname></param>
        <initializer>(I)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="3338" column="9" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="3338" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="index_8c_1a1a643079f4e2cb0a9ff0093276560c53" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt do_index</definition>
        <argsstring>(ClauseDef *, ClauseDef *, struct intermediates *, UInt, UInt, int, int, CELL *)</argsstring>
        <name>do_index</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <defname>min</defname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <defname>max</defname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <defname>cint</defname>
        </param>
        <param>
          <type>UInt</type>
          <defname>argno</defname>
        </param>
        <param>
          <type>UInt</type>
          <defname>fail_l</defname>
        </param>
        <param>
          <type>int</type>
          <defname>first</defname>
        </param>
        <param>
          <type>int</type>
          <defname>clleft</defname>
        </param>
        <param>
          <type>CELL *</type>
          <defname>top</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2519" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2519" bodyend="2659" declfile="/home/vsc/github/yap/C/index.c" declline="659" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a8ee1d9a83fd41f66c6ed50eece4e936e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt do_compound_index</definition>
        <argsstring>(ClauseDef *, ClauseDef *, Term *t, struct intermediates *, UInt, UInt, UInt, UInt, int, int, int, CELL *, int)</argsstring>
        <name>do_compound_index</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <defname>min0</defname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <defname>max0</defname>
        </param>
        <param>
          <type>Term *</type>
          <declname>t</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <defname>cint</defname>
        </param>
        <param>
          <type>UInt</type>
          <defname>i</defname>
        </param>
        <param>
          <type>UInt</type>
          <defname>arity</defname>
        </param>
        <param>
          <type>UInt</type>
          <defname>argno</defname>
        </param>
        <param>
          <type>UInt</type>
          <defname>fail_l</defname>
        </param>
        <param>
          <type>int</type>
          <defname>first</defname>
        </param>
        <param>
          <type>int</type>
          <defname>last_arg</defname>
        </param>
        <param>
          <type>int</type>
          <defname>clleft</defname>
        </param>
        <param>
          <type>CELL *</type>
          <defname>top</defname>
        </param>
        <param>
          <type>int</type>
          <defname>done_work</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2687" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2687" bodyend="2768" declfile="/home/vsc/github/yap/C/index.c" declline="661" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a8a5c1bcfc47d5b70ce1c771925210104" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt do_dbref_index</definition>
        <argsstring>(ClauseDef *, ClauseDef *, Term, struct intermediates *, UInt, UInt, int, int, CELL *)</argsstring>
        <name>do_dbref_index</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <defname>min</defname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <defname>max</defname>
        </param>
        <param>
          <type>Term</type>
          <defname>t</defname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <defname>cint</defname>
        </param>
        <param>
          <type>UInt</type>
          <defname>argno</defname>
        </param>
        <param>
          <type>UInt</type>
          <defname>fail_l</defname>
        </param>
        <param>
          <type>int</type>
          <defname>first</defname>
        </param>
        <param>
          <type>int</type>
          <defname>clleft</defname>
        </param>
        <param>
          <type>CELL *</type>
          <defname>top</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2770" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2770" bodyend="2796" declfile="/home/vsc/github/yap/C/index.c" declline="664" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a6abc51fdb3e462bc60c154413199e0da" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt do_blob_index</definition>
        <argsstring>(ClauseDef *, ClauseDef *, Term, struct intermediates *, UInt, UInt, int, int, CELL *, int)</argsstring>
        <name>do_blob_index</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <defname>min</defname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <defname>max</defname>
        </param>
        <param>
          <type>Term</type>
          <defname>t</defname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <defname>cint</defname>
        </param>
        <param>
          <type>UInt</type>
          <defname>argno</defname>
        </param>
        <param>
          <type>UInt</type>
          <defname>fail_l</defname>
        </param>
        <param>
          <type>int</type>
          <defname>first</defname>
        </param>
        <param>
          <type>int</type>
          <defname>clleft</defname>
        </param>
        <param>
          <type>CELL *</type>
          <defname>top</defname>
        </param>
        <param>
          <type>int</type>
          <defname>blob</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2798" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2798" bodyend="2833" declfile="/home/vsc/github/yap/C/index.c" declline="667" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1afe866bbe8d8dce7867d61aea299289ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt cleanup_sw_on_clauses</definition>
        <argsstring>(CELL larg, UInt sz, OPCODE ecls)</argsstring>
        <name>cleanup_sw_on_clauses</name>
        <param>
          <type>CELL</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>OPCODE</type>
          <declname>ecls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="671" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="671" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a0adee000d9bbf3203f2004344a0810c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt recover_from_failed_susp_on_cls</definition>
        <argsstring>(struct intermediates *cint, UInt sz)</argsstring>
        <name>recover_from_failed_susp_on_cls</name>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="716" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="716" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a1bf4e3b4968d6dc1d90e96dd40f5be22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int smaller</definition>
        <argsstring>(Term t1, Term t2)</argsstring>
        <name>smaller</name>
        <param>
          <type>Term</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="809" column="19" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="809" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ad8637c4387fc32a4dc55ad5211c69bcb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int smaller_or_eq</definition>
        <argsstring>(Term t1, Term t2)</argsstring>
        <name>smaller_or_eq</name>
        <param>
          <type>Term</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="817" column="19" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="817" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ac88d10594a1c5f3fa05e5138687e7c46" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void clcpy</definition>
        <argsstring>(ClauseDef *d, ClauseDef *s)</argsstring>
        <name>clcpy</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="825" column="20" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="825" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a21f04c84a92418dc4248c1fc185bbf2d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void insort</definition>
        <argsstring>(ClauseDef base[], CELL *p, CELL *q, int my_p)</argsstring>
        <name>insort</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref></type>
          <declname>base</declname>
          <array>[]</array>
        </param>
        <param>
          <type>CELL *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>CELL *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>my_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="829" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="829" bodyend="866"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1abcce268b6c70e222d57b4ecbeefa72ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void msort</definition>
        <argsstring>(ClauseDef *base, CELL *pt, Int size, int my_p)</argsstring>
        <name>msort</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>CELL *</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>Int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>my_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="869" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="869" bodyend="939"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ae2e2fa47bfd4ea35e87afaa717001cf0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void copy_back</definition>
        <argsstring>(ClauseDef *dest, CELL *pt, int max)</argsstring>
        <name>copy_back</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>CELL *</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="941" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="941" bodyend="973"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ab9cbbb1a482eaa28fd76262068864fcb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sort_group</definition>
        <argsstring>(GroupDef *grp, CELL *top, struct intermediates *cint)</argsstring>
        <name>sort_group</name>
        <param>
          <type><ref refid="structGroupDef" kindref="compound">GroupDef</ref> *</type>
          <declname>grp</declname>
        </param>
        <param>
          <type>CELL *</type>
          <declname>top</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="976" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="976" bodyend="1010"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a268b4c16353791f18583378b609e68f0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int init_regcopy</definition>
        <argsstring>(wamreg regs[MAX_REG_COPIES], wamreg copy)</argsstring>
        <name>init_regcopy</name>
        <param>
          <type>wamreg</type>
          <declname>regs</declname>
          <array>[MAX_REG_COPIES]</array>
        </param>
        <param>
          <type>wamreg</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1013" column="12" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1013" bodyend="1016"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1abe98481cc8386874d2aa73b06629812c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int is_regcopy</definition>
        <argsstring>(wamreg regs[MAX_REG_COPIES], int regs_count, wamreg copy)</argsstring>
        <name>is_regcopy</name>
        <param>
          <type>wamreg</type>
          <declname>regs</declname>
          <array>[MAX_REG_COPIES]</array>
        </param>
        <param>
          <type>int</type>
          <declname>regs_count</declname>
        </param>
        <param>
          <type>wamreg</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1019" column="12" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1019" bodyend="1030"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1aceeb1848e00bc14f105f053ccd5e026a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int delete_regcopy</definition>
        <argsstring>(wamreg regs[MAX_REG_COPIES], int regs_count, wamreg copy)</argsstring>
        <name>delete_regcopy</name>
        <param>
          <type>wamreg</type>
          <declname>regs</declname>
          <array>[MAX_REG_COPIES]</array>
        </param>
        <param>
          <type>int</type>
          <declname>regs_count</declname>
        </param>
        <param>
          <type>wamreg</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1033" column="12" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1033" bodyend="1046"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a681c6bd28853cc7a052e7f6610f61a3b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int add_regcopy</definition>
        <argsstring>(wamreg regs[MAX_REG_COPIES], int regs_count, Int source, Int copy)</argsstring>
        <name>add_regcopy</name>
        <param>
          <type>wamreg</type>
          <declname>regs</declname>
          <array>[MAX_REG_COPIES]</array>
        </param>
        <param>
          <type>int</type>
          <declname>regs_count</declname>
        </param>
        <param>
          <type>Int</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Int</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1049" column="12" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1049" bodyend="1065"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1add3fd2d7fa3e13d2f6bc3922626e82f9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int link_regcopies</definition>
        <argsstring>(wamreg regs[MAX_REG_COPIES], int regs_count, Int c1, Int c2)</argsstring>
        <name>link_regcopies</name>
        <param>
          <type>wamreg</type>
          <declname>regs</declname>
          <array>[MAX_REG_COPIES]</array>
        </param>
        <param>
          <type>int</type>
          <declname>regs_count</declname>
        </param>
        <param>
          <type>Int</type>
          <declname>c1</declname>
        </param>
        <param>
          <type>Int</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1068" column="19" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1068" bodyend="1082"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a9a14f689ba4836d68260e707d6acdfdf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void add_info</definition>
        <argsstring>(ClauseDef *clause, UInt regno)</argsstring>
        <name>add_info</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>clause</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>regno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1084" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1084" bodyend="1092"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a04aa68e7038e32bf2bda96ec1d5e9cec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void add_head_info</definition>
        <argsstring>(ClauseDef *clause, UInt regno)</argsstring>
        <name>add_head_info</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>clause</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>regno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1094" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1094" bodyend="1099"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ad4dfcc0d4e7cda0fbaa763235dfb9021" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void move_next</definition>
        <argsstring>(ClauseDef *clause, UInt regno)</argsstring>
        <name>move_next</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>clause</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>regno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1101" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1101" bodyend="1163"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1adcb9bf482a8600d25409b363e0a0f282" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void add_arg_info</definition>
        <argsstring>(ClauseDef *clause, PredEntry *ap, UInt argno)</argsstring>
        <name>add_arg_info</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>clause</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>argno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1165" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1165" bodyend="1424"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a3a94cf7ba7b787085483512f50b56650" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void skip_to_arg</definition>
        <argsstring>(ClauseDef *clause, PredEntry *ap, UInt argno, int at_point)</argsstring>
        <name>skip_to_arg</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>clause</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>argno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>at_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1426" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1426" bodyend="1521"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a7a7f95881051f5c236dc7e488c4e86d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt groups_in</definition>
        <argsstring>(ClauseDef *min, ClauseDef *max, GroupDef *grp, struct intermediates *cint)</argsstring>
        <name>groups_in</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>max</declname>
        </param>
        <param>
          <type><ref refid="structGroupDef" kindref="compound">GroupDef</ref> *</type>
          <declname>grp</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1523" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1523" bodyend="1594"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a9897f83c6145525fed115aae458d81e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt new_label</definition>
        <argsstring>(struct intermediates *cint)</argsstring>
        <name>new_label</name>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1596" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1596" bodyend="1600"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1afac83c6a41fadfac1bf428e89cdade92" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Int</type>
        <definition>static Int has_cut</definition>
        <argsstring>(yamop *pc, PredEntry *ap)</argsstring>
        <name>has_cut</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>pc</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1602" column="12" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1602" bodyend="1615"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1afcb608ee39067085abfdc8a0f0e426a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void emit_trust</definition>
        <argsstring>(ClauseDef *cl, struct intermediates *cint, UInt nxtlbl, int clauses)</argsstring>
        <name>emit_trust</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>nxtlbl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clauses</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1617" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1617" bodyend="1640"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a5c85458fb97028f94869dba73a3ee1e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void emit_retry</definition>
        <argsstring>(ClauseDef *cl, struct intermediates *cint, int clauses)</argsstring>
        <name>emit_retry</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clauses</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1642" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1642" bodyend="1659"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1afef87266aae05dc8ca7979c8bce42b7b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>compiler_vm_op</type>
        <definition>static compiler_vm_op emit_optry</definition>
        <argsstring>(int var_group, int first, int clauses, int clleft, PredEntry *ap)</argsstring>
        <name>emit_optry</name>
        <param>
          <type>int</type>
          <declname>var_group</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clauses</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clleft</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1661" column="23" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1661" bodyend="1687"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1abc321359afca74246cafe9e275fb0083" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void emit_try</definition>
        <argsstring>(ClauseDef *cl, struct intermediates *cint, int var_group, int first, int clauses, int clleft, UInt nxtlbl)</argsstring>
        <name>emit_try</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <param>
          <type>int</type>
          <declname>var_group</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clauses</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clleft</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>nxtlbl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1689" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1689" bodyend="1706"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a53668783e40e80885382f41d31853410" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structTypeSwitch" kindref="compound">TypeSwitch</ref> *</type>
        <definition>static TypeSwitch * emit_type_switch</definition>
        <argsstring>(compiler_vm_op op, struct intermediates *cint)</argsstring>
        <name>emit_type_switch</name>
        <param>
          <type>compiler_vm_op</type>
          <declname>op</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1708" column="19" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1708" bodyend="1711"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a28ff7bf2638145636933ad7c8ec983f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
        <definition>static yamop * emit_switch_space</definition>
        <argsstring>(UInt n, UInt item_size, struct intermediates *cint, CELL func_mask)</argsstring>
        <name>emit_switch_space</name>
        <param>
          <type>UInt</type>
          <declname>n</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>item_size</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <param>
          <type>CELL</type>
          <declname>func_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1713" column="14" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1713" bodyend="1753"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a35cd9853ab7c49b0fa35303c5684e31b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structAtomSwiEntry" kindref="compound">AtomSwiEntry</ref> *</type>
        <definition>static AtomSwiEntry * emit_cswitch</definition>
        <argsstring>(COUNT n, yamop *fail_l, struct intermediates *cint)</argsstring>
        <name>emit_cswitch</name>
        <param>
          <type>COUNT</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>fail_l</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1755" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1755" bodyend="1789"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1aaa894d9197d2ee0d8d3170dd0293f9c3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structAtomSwiEntry" kindref="compound">AtomSwiEntry</ref> *</type>
        <definition>static AtomSwiEntry * lookup_c_hash</definition>
        <argsstring>(Term t, yamop *tab, COUNT entries)</argsstring>
        <name>lookup_c_hash</name>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>tab</declname>
        </param>
        <param>
          <type>COUNT</type>
          <declname>entries</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1791" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1791" bodyend="1806"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a37f50bfbd1d08bf523d8c38c66fd9bd0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structAtomSwiEntry" kindref="compound">AtomSwiEntry</ref> *</type>
        <definition>static AtomSwiEntry * fetch_centry</definition>
        <argsstring>(AtomSwiEntry *cebase, Term wt, int i, int n)</argsstring>
        <name>fetch_centry</name>
        <param>
          <type><ref refid="structAtomSwiEntry" kindref="compound">AtomSwiEntry</ref> *</type>
          <declname>cebase</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>wt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1808" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1808" bodyend="1819"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a5de53765399660d5886b70c57ce28c2f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structFuncSwiEntry" kindref="compound">FuncSwiEntry</ref> *</type>
        <definition>static FuncSwiEntry * emit_fswitch</definition>
        <argsstring>(COUNT n, yamop *fail_l, struct intermediates *cint)</argsstring>
        <name>emit_fswitch</name>
        <param>
          <type>COUNT</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>fail_l</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1821" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1821" bodyend="1854"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a2b1c924fea998ef6a0381655530c11b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structFuncSwiEntry" kindref="compound">FuncSwiEntry</ref> *</type>
        <definition>static FuncSwiEntry * lookup_f_hash</definition>
        <argsstring>(Functor f, yamop *tab, COUNT entries)</argsstring>
        <name>lookup_f_hash</name>
        <param>
          <type><ref refid="structFunctorEntryStruct" kindref="compound">Functor</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>tab</declname>
        </param>
        <param>
          <type>COUNT</type>
          <declname>entries</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1856" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1856" bodyend="1872"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a1cbc1e8ec3556197c784af78aeb1138e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structFuncSwiEntry" kindref="compound">FuncSwiEntry</ref> *</type>
        <definition>static FuncSwiEntry * fetch_fentry</definition>
        <argsstring>(FuncSwiEntry *febase, Functor ft, int i, int n)</argsstring>
        <name>fetch_fentry</name>
        <param>
          <type><ref refid="structFuncSwiEntry" kindref="compound">FuncSwiEntry</ref> *</type>
          <declname>febase</declname>
        </param>
        <param>
          <type><ref refid="structFunctorEntryStruct" kindref="compound">Functor</ref></type>
          <declname>ft</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1874" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1874" bodyend="1886"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a40f4b7086158d5fe0c1128e56944892f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt do_var_clauses</definition>
        <argsstring>(ClauseDef *c0, ClauseDef *cf, int var_group, struct intermediates *cint, int first, int clleft, UInt nxtlbl, UInt argno0)</argsstring>
        <name>do_var_clauses</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>c0</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>var_group</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clleft</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>nxtlbl</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>argno0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1889" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1889" bodyend="1935"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a5e69054d23ea69d6a4176707c14b8e14" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt do_var_group</definition>
        <argsstring>(GroupDef *grp, struct intermediates *cint, int var_group, int first, int clleft, UInt nxtlbl, UInt argno0)</argsstring>
        <name>do_var_group</name>
        <param>
          <type><ref refid="structGroupDef" kindref="compound">GroupDef</ref> *</type>
          <declname>grp</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <param>
          <type>int</type>
          <declname>var_group</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clleft</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>nxtlbl</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>argno0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1937" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1937" bodyend="1942"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ac9ebb0ef12b48d77cc211f54b69dacc2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt count_consts</definition>
        <argsstring>(GroupDef *grp)</argsstring>
        <name>count_consts</name>
        <param>
          <type><ref refid="structGroupDef" kindref="compound">GroupDef</ref> *</type>
          <declname>grp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1945" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1945" bodyend="1961"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a64ca6c4d592ff1bc4a45de880ed17f3c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt count_blobs</definition>
        <argsstring>(GroupDef *grp)</argsstring>
        <name>count_blobs</name>
        <param>
          <type><ref refid="structGroupDef" kindref="compound">GroupDef</ref> *</type>
          <declname>grp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1963" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1963" bodyend="1976"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ada4a18f546fc914d1deaa53c1026e0ff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt count_funcs</definition>
        <argsstring>(GroupDef *grp)</argsstring>
        <name>count_funcs</name>
        <param>
          <type><ref refid="structGroupDef" kindref="compound">GroupDef</ref> *</type>
          <declname>grp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1979" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1979" bodyend="1995"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ab67da4690fc16561f60a7115e54198e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt emit_single_switch_case</definition>
        <argsstring>(ClauseDef *min, struct intermediates *cint, int first, int clleft, UInt nxtlbl)</argsstring>
        <name>emit_single_switch_case</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clleft</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>nxtlbl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="1997" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="1997" bodyend="2017"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1abf0b92b85e1db0b95353df3ebe650dc0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt suspend_indexing</definition>
        <argsstring>(ClauseDef *min, ClauseDef *max, PredEntry *ap, struct intermediates *cint)</argsstring>
        <name>suspend_indexing</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>max</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2019" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2019" bodyend="2085"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a89822b6844b5746e636d3b3c1ec91b4c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void recover_ecls_block</definition>
        <argsstring>(yamop *ipc)</argsstring>
        <name>recover_ecls_block</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2087" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2087" bodyend="2118"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1aa7a968242a810c8fd43165d997a69a09" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt do_var_entries</definition>
        <argsstring>(GroupDef *grp, Term t, struct intermediates *cint, UInt argno, int first, int clleft, UInt nxtlbl)</argsstring>
        <name>do_var_entries</name>
        <param>
          <type><ref refid="structGroupDef" kindref="compound">GroupDef</ref> *</type>
          <declname>grp</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>argno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clleft</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>nxtlbl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2120" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2120" bodyend="2129"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a1cb26ac2ecc5e7216b310b053edc05f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt do_consts</definition>
        <argsstring>(GroupDef *grp, Term t, struct intermediates *cint, int compound_term, CELL *sreg, UInt arity, int last_arg, UInt argno, int first, UInt nxtlbl, int clleft, CELL *top)</argsstring>
        <name>do_consts</name>
        <param>
          <type><ref refid="structGroupDef" kindref="compound">GroupDef</ref> *</type>
          <declname>grp</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <param>
          <type>int</type>
          <declname>compound_term</declname>
        </param>
        <param>
          <type>CELL *</type>
          <declname>sreg</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>arity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>last_arg</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>argno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>nxtlbl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clleft</declname>
        </param>
        <param>
          <type>CELL *</type>
          <declname>top</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2131" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2131" bodyend="2181"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ab7e8c4f1a340f53bff689bebe01683b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void do_blobs</definition>
        <argsstring>(GroupDef *grp, Term t, struct intermediates *cint, UInt argno, int first, UInt nxtlbl, int clleft, CELL *top)</argsstring>
        <name>do_blobs</name>
        <param>
          <type><ref refid="structGroupDef" kindref="compound">GroupDef</ref> *</type>
          <declname>grp</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>argno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>nxtlbl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clleft</declname>
        </param>
        <param>
          <type>CELL *</type>
          <declname>top</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2183" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2183" bodyend="2211"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a3ce5c613afce1fa35f0291119ef0cd3f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt do_funcs</definition>
        <argsstring>(GroupDef *grp, Term t, struct intermediates *cint, UInt argno, int first, int last_arg, UInt nxtlbl, int clleft, CELL *top)</argsstring>
        <name>do_funcs</name>
        <param>
          <type><ref refid="structGroupDef" kindref="compound">GroupDef</ref> *</type>
          <declname>grp</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>argno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>last_arg</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>nxtlbl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clleft</declname>
        </param>
        <param>
          <type>CELL *</type>
          <declname>top</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2213" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2213" bodyend="2272"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1aab4be4d8aec68d005e640efb1b87e4f8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt do_pair</definition>
        <argsstring>(GroupDef *grp, Term t, struct intermediates *cint, UInt argno, int first, int last_arg, UInt nxtlbl, int clleft, CELL *top)</argsstring>
        <name>do_pair</name>
        <param>
          <type><ref refid="structGroupDef" kindref="compound">GroupDef</ref> *</type>
          <declname>grp</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>argno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>last_arg</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>nxtlbl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clleft</declname>
        </param>
        <param>
          <type>CELL *</type>
          <declname>top</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2274" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2274" bodyend="2305"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a24e848849255bedadca36120e41c98e4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void group_prologue</definition>
        <argsstring>(int compound_term, UInt argno, int first, struct intermediates *cint)</argsstring>
        <name>group_prologue</name>
        <param>
          <type>int</type>
          <declname>compound_term</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>argno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2307" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2307" bodyend="2316"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a3ea90e8bca3e2311fcd7221d6c266413" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void emit_protection_choicepoint</definition>
        <argsstring>(int first, int clleft, UInt nxtlbl, struct intermediates *cint)</argsstring>
        <name>emit_protection_choicepoint</name>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clleft</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>nxtlbl</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2319" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2319" bodyend="2340"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a0dba59afb27cc1294eb35e9e4b74201b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
        <definition>static ClauseDef * cls_move</definition>
        <argsstring>(ClauseDef *min, PredEntry *ap, ClauseDef *max, int compound_term, UInt argno, int last_arg)</argsstring>
        <name>cls_move</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>max</declname>
        </param>
        <param>
          <type>int</type>
          <declname>compound_term</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>argno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>last_arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2342" column="18" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2342" bodyend="2368"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a414d6f714b9bfe4e91992a2910abab2c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void purge_pvar</definition>
        <argsstring>(GroupDef *group)</argsstring>
        <name>purge_pvar</name>
        <param>
          <type><ref refid="structGroupDef" kindref="compound">GroupDef</ref> *</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2370" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2370" bodyend="2387"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1abe3afb2d5cee87d9f474a5a4a56fb5d3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt *</type>
        <definition>static UInt * do_nonvar_group</definition>
        <argsstring>(GroupDef *grp, Term t, UInt compound_term, CELL *sreg, UInt arity, UInt labl, struct intermediates *cint, UInt argno, int first, int last_arg, UInt nxtlbl, int clleft, CELL *top)</argsstring>
        <name>do_nonvar_group</name>
        <param>
          <type><ref refid="structGroupDef" kindref="compound">GroupDef</ref> *</type>
          <declname>grp</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>compound_term</declname>
        </param>
        <param>
          <type>CELL *</type>
          <declname>sreg</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>arity</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>labl</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>argno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>last_arg</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>nxtlbl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>clleft</declname>
        </param>
        <param>
          <type>CELL *</type>
          <declname>top</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2389" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2389" bodyend="2434"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a7bae4511cd54153832d6eb5aa3451bf6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt do_optims</definition>
        <argsstring>(GroupDef *group, int ngroups, UInt fail_l, ClauseDef *min, struct intermediates *cint)</argsstring>
        <name>do_optims</name>
        <param>
          <type><ref refid="structGroupDef" kindref="compound">GroupDef</ref> *</type>
          <declname>group</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ngroups</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>fail_l</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2436" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2436" bodyend="2455"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a185c28eeafdace21bb1a6ced0b2a591c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int cls_info</definition>
        <argsstring>(ClauseDef *min, ClauseDef *max, UInt argno)</argsstring>
        <name>cls_info</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>max</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>argno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2457" column="12" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2457" bodyend="2470"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ab98d6b73ae4e50c6eb2ba0c06b288497" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int cls_head_info</definition>
        <argsstring>(ClauseDef *min, ClauseDef *max, UInt argno, int in_idb)</argsstring>
        <name>cls_head_info</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>max</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>argno</declname>
        </param>
        <param>
          <type>int</type>
          <declname>in_idb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2472" column="12" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2472" bodyend="2517"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a877d96977ce1096904010749f0a9f11b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
        <definition>static ClauseDef * copy_clauses</definition>
        <argsstring>(ClauseDef *max0, ClauseDef *min0, CELL *top, struct intermediates *cint)</argsstring>
        <name>copy_clauses</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>max0</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>min0</declname>
        </param>
        <param>
          <type>CELL *</type>
          <declname>top</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2661" column="18" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2661" bodyend="2673"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a2babf56f87abe273b6ada6fec18a6af7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int several_tags</definition>
        <argsstring>(ClauseDef *min, ClauseDef *max)</argsstring>
        <name>several_tags</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2676" column="12" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2676" bodyend="2684"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a79d6c35399f9e1e5b434175f819180c7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void init_clauses</definition>
        <argsstring>(ClauseDef *cl, PredEntry *ap)</argsstring>
        <name>init_clauses</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cl</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2835" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2835" bodyend="2858"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a3b9b5a67f8123e1b27c60b871702a4ce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void init_log_upd_clauses</definition>
        <argsstring>(ClauseDef *cl, PredEntry *ap)</argsstring>
        <name>init_log_upd_clauses</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cl</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2860" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2860" bodyend="2868"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1aa37b4eb11c05bd69241485b3aba7d828" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UInt</type>
        <definition>static UInt compile_index</definition>
        <argsstring>(struct intermediates *cint)</argsstring>
        <name>compile_index</name>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2870" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2870" bodyend="2921"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ab12d71a71253fa9a3c70a4aa457809c3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void CleanCls</definition>
        <argsstring>(struct intermediates *cint)</argsstring>
        <name>CleanCls</name>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2923" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2923" bodyend="2930"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ae8a933c47fa280dbba9715b522c413a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
        <definition>yamop * Yap_PredIsIndexable</definition>
        <argsstring>(PredEntry *ap, UInt NSlots, yamop *next_pc)</argsstring>
        <name>Yap_PredIsIndexable</name>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>NSlots</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>next_pc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="2932" column="7" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="2932" bodyend="3043"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a53fcb4d1286387de9a0dcaf0d6ce37a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structistack__entry" kindref="compound">istack_entry</ref> *</type>
        <definition>static istack_entry * push_stack</definition>
        <argsstring>(istack_entry *sp, Int arg, Term Tag, Term extra, struct intermediates *cint)</argsstring>
        <name>push_stack</name>
        <param>
          <type><ref refid="structistack__entry" kindref="compound">istack_entry</ref> *</type>
          <declname>sp</declname>
        </param>
        <param>
          <type>Int</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>Tag</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>extra</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="3045" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="3045" bodyend="3058"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a962ed092503795d67aa908ade6006229" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structistack__entry" kindref="compound">istack_entry</ref> *</type>
        <definition>static istack_entry * install_clause</definition>
        <argsstring>(ClauseDef *cls, PredEntry *ap, istack_entry *stack)</argsstring>
        <name>install_clause</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cls</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structistack__entry" kindref="compound">istack_entry</ref> *</type>
          <declname>stack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="3060" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="3060" bodyend="3108"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a3e560dd4456defc5b37848d604521735" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
        <definition>static ClauseDef * install_clauses</definition>
        <argsstring>(ClauseDef *cls, PredEntry *ap, istack_entry *stack, yamop *beg, yamop *end)</argsstring>
        <name>install_clauses</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cls</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structistack__entry" kindref="compound">istack_entry</ref> *</type>
          <declname>stack</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>beg</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="3110" column="18" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="3110" bodyend="3169"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a4d5ba6752dc59196c360829c4ade92e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
        <definition>static ClauseDef * install_clauseseq</definition>
        <argsstring>(ClauseDef *cls, PredEntry *ap, istack_entry *stack, yamop **beg, yamop **end)</argsstring>
        <name>install_clauseseq</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cls</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structistack__entry" kindref="compound">istack_entry</ref> *</type>
          <declname>stack</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> **</type>
          <declname>beg</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> **</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="3171" column="18" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="3171" bodyend="3203"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ae7a46819467d63faaf633e1935f77b68" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void reinstall_clauses</definition>
        <argsstring>(ClauseDef *cls, ClauseDef *end, PredEntry *ap, istack_entry *stack)</argsstring>
        <name>reinstall_clauses</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cls</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structistack__entry" kindref="compound">istack_entry</ref> *</type>
          <declname>stack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="3205" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="3205" bodyend="3211"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a910eb50dd54b82f94a2f74a109298750" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structistack__entry" kindref="compound">istack_entry</ref> *</type>
        <definition>static istack_entry * install_log_upd_clause</definition>
        <argsstring>(ClauseDef *cls, PredEntry *ap, istack_entry *stack)</argsstring>
        <name>install_log_upd_clause</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cls</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structistack__entry" kindref="compound">istack_entry</ref> *</type>
          <declname>stack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="3213" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="3213" bodyend="3258"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a68376d75c567864be45f96175ae2227d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
        <definition>static ClauseDef * install_log_upd_clauses</definition>
        <argsstring>(ClauseDef *cls, PredEntry *ap, istack_entry *stack, yamop *beg, yamop *end)</argsstring>
        <name>install_log_upd_clauses</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cls</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structistack__entry" kindref="compound">istack_entry</ref> *</type>
          <declname>stack</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>beg</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="3260" column="18" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="3260" bodyend="3288"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ac1a2fa6307153cacc0d49e0b6b6e7745" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
        <definition>static ClauseDef * install_log_upd_clauseseq</definition>
        <argsstring>(ClauseDef *cls, PredEntry *ap, istack_entry *stack, yamop **beg, yamop **end)</argsstring>
        <name>install_log_upd_clauseseq</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cls</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structistack__entry" kindref="compound">istack_entry</ref> *</type>
          <declname>stack</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> **</type>
          <declname>beg</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> **</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="3290" column="18" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="3290" bodyend="3322"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a49c81a881422388df81be8b6b9bd8b0a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void reinstall_log_upd_clauses</definition>
        <argsstring>(ClauseDef *cls, ClauseDef *end, PredEntry *ap, istack_entry *stack)</argsstring>
        <name>reinstall_log_upd_clauses</name>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cls</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structistack__entry" kindref="compound">istack_entry</ref> *</type>
          <declname>stack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="3324" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="3324" bodyend="3330"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ab0e2a4c18aa312d342ddddbf85efc30d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structAtomSwiEntry" kindref="compound">AtomSwiEntry</ref> *</type>
        <definition>static AtomSwiEntry * lookup_c</definition>
        <argsstring>(Term t, yamop *tab, COUNT entries)</argsstring>
        <name>lookup_c</name>
        <param>
          <type>Term</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>tab</declname>
        </param>
        <param>
          <type>COUNT</type>
          <declname>entries</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="3342" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="3342" bodyend="3352"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a812683042c5cad867e158e031bc264d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structFuncSwiEntry" kindref="compound">FuncSwiEntry</ref> *</type>
        <definition>static FuncSwiEntry * lookup_f</definition>
        <argsstring>(Functor f, yamop *tab, COUNT entries)</argsstring>
        <name>lookup_f</name>
        <param>
          <type><ref refid="structFunctorEntryStruct" kindref="compound">Functor</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>tab</declname>
        </param>
        <param>
          <type>COUNT</type>
          <declname>entries</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="3354" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="3354" bodyend="3364"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a448a2c6b9bd40c120aa2360f03a9e881" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COUNT</type>
        <definition>static COUNT count_clauses_left</definition>
        <argsstring>(yamop *cl, PredEntry *ap)</argsstring>
        <name>count_clauses_left</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>cl</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="3366" column="14" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="3366" bodyend="3393"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a35c2fef117f7702bfbfe5524c784c2e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="unionclause__ptr" kindref="compound">ClausePointer</ref></type>
        <definition>static ClausePointer index_jmp</definition>
        <argsstring>(ClausePointer cur, ClausePointer parent, yamop *ipc, int is_lu, yamop *e_code)</argsstring>
        <name>index_jmp</name>
        <param>
          <type><ref refid="unionclause__ptr" kindref="compound">ClausePointer</ref></type>
          <declname>cur</declname>
        </param>
        <param>
          <type><ref refid="unionclause__ptr" kindref="compound">ClausePointer</ref></type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>is_lu</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>e_code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="3399" column="22" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="3399" bodyend="3456"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a7502a9c5ee46b4093c4e988d2ba6595f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="unionclause__ptr" kindref="compound">ClausePointer</ref></type>
        <definition>static ClausePointer code_to_indexcl</definition>
        <argsstring>(yamop *ipc, int is_lu)</argsstring>
        <name>code_to_indexcl</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>is_lu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="3458" column="22" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="3458" bodyend="3465"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a956bea8382d194686b9473c1e95bbefb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void increase_expand_depth</definition>
        <argsstring>(yamop *ipc, struct intermediates *cint)</argsstring>
        <name>increase_expand_depth</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="3468" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="3468" bodyend="3479"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1afed98d7ab4fd379f503beea4c8b29bf1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void zero_expand_depth</definition>
        <argsstring>(PredEntry *ap, struct intermediates *cint)</argsstring>
        <name>zero_expand_depth</name>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="3481" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="3481" bodyend="3484"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1aa014043424cf0d8a97867b115e3a4aaa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structyami" kindref="compound">yamop</ref> **</type>
        <definition>static yamop ** expand_index</definition>
        <argsstring>(struct intermediates *cint)</argsstring>
        <name>expand_index</name>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="3486" column="14" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="3486" bodyend="4094"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a67e834f04b4cda160aa6e0189ded64af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
        <definition>static yamop * ExpandIndex</definition>
        <argsstring>(PredEntry *ap, int ExtraArgs, yamop *nextop USES_REGS)</argsstring>
        <name>ExpandIndex</name>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ExtraArgs</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *nextop</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4096" column="14" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4096" bodyend="4270"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a5678542bf0c8b81ab3e1d43710714fdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
        <definition>yamop * Yap_ExpandIndex</definition>
        <argsstring>(PredEntry *ap, UInt nargs)</argsstring>
        <name>Yap_ExpandIndex</name>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>UInt</type>
          <declname>nargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4272" column="7" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4272" bodyend="4275"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a059b2141cea9bfcd9a480c2c1bf1a422" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
        <definition>static path_stack_entry * push_path</definition>
        <argsstring>(path_stack_entry *sp, yamop **pipc, ClauseDef *clp, struct intermediates *cint)</argsstring>
        <name>push_path</name>
        <param>
          <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
          <declname>sp</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> **</type>
          <declname>pipc</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>clp</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4277" column="25" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4277" bodyend="4291"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a7c8b0227d9f807eade257331ea333435" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
        <definition>static path_stack_entry * fetch_new_block</definition>
        <argsstring>(path_stack_entry *sp, yamop **pipc, PredEntry *ap, struct intermediates *cint)</argsstring>
        <name>fetch_new_block</name>
        <param>
          <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
          <declname>sp</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> **</type>
          <declname>pipc</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4293" column="25" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4293" bodyend="4310"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a3f0a2bfae7293c43607adc5c6c4beef7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
        <definition>static path_stack_entry * init_block_stack</definition>
        <argsstring>(path_stack_entry *sp, yamop *ipc, PredEntry *ap)</argsstring>
        <name>init_block_stack</name>
        <param>
          <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
          <declname>sp</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4312" column="25" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4312" bodyend="4324"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a999a83951f293491ec86a2d0ebed37ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
        <definition>static path_stack_entry * cross_block</definition>
        <argsstring>(path_stack_entry *sp, yamop **pipc, PredEntry *ap, struct intermediates *cint)</argsstring>
        <name>cross_block</name>
        <param>
          <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
          <declname>sp</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> **</type>
          <declname>pipc</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4326" column="25" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4326" bodyend="4362"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1aca7df9ccef3bb59bd696eba6465ab433" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
        <definition>static yamop * pop_path</definition>
        <argsstring>(path_stack_entry **spp, ClauseDef *clp, PredEntry *ap, struct intermediates *cint)</argsstring>
        <name>pop_path</name>
        <param>
          <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> **</type>
          <declname>spp</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>clp</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4364" column="14" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4364" bodyend="4383"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a841507d98143f24af0ba62fff174fa9a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int table_fe_overflow</definition>
        <argsstring>(yamop *pc, Functor f)</argsstring>
        <name>table_fe_overflow</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>pc</declname>
        </param>
        <param>
          <type><ref refid="structFunctorEntryStruct" kindref="compound">Functor</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4385" column="12" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4385" bodyend="4400"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ad1f87cc9be586e42b39506c751498870" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int table_ae_overflow</definition>
        <argsstring>(yamop *pc, Term at)</argsstring>
        <name>table_ae_overflow</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>pc</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4402" column="12" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4402" bodyend="4417"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a65a1860f92122aeed151b98b9904d41c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void replace_index_block</definition>
        <argsstring>(ClauseUnion *parent_block, yamop *cod, yamop *ncod, PredEntry *ap)</argsstring>
        <name>replace_index_block</name>
        <param>
          <type><ref refid="unionclause__obj" kindref="compound">ClauseUnion</ref> *</type>
          <declname>parent_block</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>cod</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ncod</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4419" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4419" bodyend="4467"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a3343985b0fa2c12c721a16cffe0c220a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structAtomSwiEntry" kindref="compound">AtomSwiEntry</ref> *</type>
        <definition>static AtomSwiEntry * expand_ctable</definition>
        <argsstring>(yamop *pc, ClauseUnion *blk, struct intermediates *cint, Term at)</argsstring>
        <name>expand_ctable</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>pc</declname>
        </param>
        <param>
          <type><ref refid="unionclause__obj" kindref="compound">ClauseUnion</ref> *</type>
          <declname>blk</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4469" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4469" bodyend="4530"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a040f962b2b6a0f60f634147d905525c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structFuncSwiEntry" kindref="compound">FuncSwiEntry</ref> *</type>
        <definition>static FuncSwiEntry * expand_ftable</definition>
        <argsstring>(yamop *pc, ClauseUnion *blk, struct intermediates *cint, Functor f)</argsstring>
        <name>expand_ftable</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>pc</declname>
        </param>
        <param>
          <type><ref refid="unionclause__obj" kindref="compound">ClauseUnion</ref> *</type>
          <declname>blk</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <param>
          <type><ref refid="structFunctorEntryStruct" kindref="compound">Functor</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4532" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4532" bodyend="4596"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1afbd42bb1ac31e3c14c4eb0c298394023" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void clean_ref_to_clause</definition>
        <argsstring>(LogUpdClause *tgl)</argsstring>
        <name>clean_ref_to_clause</name>
        <param>
          <type><ref refid="structlogic__upd__clause" kindref="compound">LogUpdClause</ref> *</type>
          <declname>tgl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4598" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4598" bodyend="4605"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a7a15b011c477c4c11709bef1ac6022fb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="unionclause__obj" kindref="compound">ClauseUnion</ref> *</type>
        <definition>static ClauseUnion * current_block</definition>
        <argsstring>(path_stack_entry *sp)</argsstring>
        <name>current_block</name>
        <param>
          <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
          <declname>sp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4607" column="20" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4607" bodyend="4611"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a6f63869e8fc6dcabcd186bbf9d395ee8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
        <definition>static path_stack_entry * kill_block</definition>
        <argsstring>(path_stack_entry *sp, PredEntry *ap)</argsstring>
        <name>kill_block</name>
        <param>
          <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
          <declname>sp</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4613" column="25" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4613" bodyend="4627"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a96ba304874eadb062439db60ed4abcfc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlogic__upd__clause" kindref="compound">LogUpdClause</ref> *</type>
        <definition>static LogUpdClause * find_last_clause</definition>
        <argsstring>(yamop *start)</argsstring>
        <name>find_last_clause</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4629" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4629" bodyend="4634"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a79f928845ef6f8260a63c7224c998c51" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void remove_clause_from_index</definition>
        <argsstring>(yamop *header, LogUpdClause *cl)</argsstring>
        <name>remove_clause_from_index</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="structlogic__upd__clause" kindref="compound">LogUpdClause</ref> *</type>
          <declname>cl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4636" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4636" bodyend="4669"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a9a71d1a7870be1657b4e7a797961fb69" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void remove_dirty_clauses_from_index</definition>
        <argsstring>(yamop *header)</argsstring>
        <name>remove_dirty_clauses_from_index</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4671" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4671" bodyend="4755"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a36ef7e228556305785bb3b5a045874b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
        <definition>static path_stack_entry * kill_clause</definition>
        <argsstring>(yamop *ipc, yamop *bg, yamop *lt, path_stack_entry *sp0, PredEntry *ap)</argsstring>
        <name>kill_clause</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>bg</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>lt</declname>
        </param>
        <param>
          <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
          <declname>sp0</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4757" column="25" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4757" bodyend="4813"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ab0a4e47ec78d0a62d23eb70ee23432cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
        <definition>static path_stack_entry * expanda_block</definition>
        <argsstring>(path_stack_entry *sp, PredEntry *ap, ClauseDef *cls, int group1, yamop *alt, struct intermediates *cint)</argsstring>
        <name>expanda_block</name>
        <param>
          <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
          <declname>sp</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cls</declname>
        </param>
        <param>
          <type>int</type>
          <declname>group1</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>alt</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4815" column="25" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4815" bodyend="4822"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a2b99ba42231ce738605b052f1a84bac3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
        <definition>static path_stack_entry * expandz_block</definition>
        <argsstring>(path_stack_entry *sp, PredEntry *ap, ClauseDef *cls, int group1, yamop *alt, struct intermediates *cint)</argsstring>
        <name>expandz_block</name>
        <param>
          <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
          <declname>sp</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cls</declname>
        </param>
        <param>
          <type>int</type>
          <declname>group1</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>alt</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4824" column="25" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4824" bodyend="4831"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a408a4cd27ad69d5db88b90ae0ab610ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlogic__upd__clause" kindref="compound">LogUpdClause</ref> *</type>
        <definition>static LogUpdClause * lu_clause</definition>
        <argsstring>(yamop *ipc, PredEntry *ap)</argsstring>
        <name>lu_clause</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4833" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4833" bodyend="4839"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a0da3a0ad736a0dc59957941f5213a886" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structstatic__clause" kindref="compound">StaticClause</ref> *</type>
        <definition>static StaticClause * find_static_clause</definition>
        <argsstring>(PredEntry *ap, yamop *ipc)</argsstring>
        <name>find_static_clause</name>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4841" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4841" bodyend="4849"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ac852affe36f9cb34ff674fb551935073" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structstatic__clause" kindref="compound">StaticClause</ref> *</type>
        <definition>static StaticClause * static_clause</definition>
        <argsstring>(yamop *ipc, PredEntry *ap, int trust)</argsstring>
        <name>static_clause</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>int</type>
          <declname>trust</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4851" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4851" bodyend="4901"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ab9b3e31716f66a8826e9eb6217904db5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structstatic__clause" kindref="compound">StaticClause</ref> *</type>
        <definition>static StaticClause * simple_static_clause</definition>
        <argsstring>(yamop *ipc, PredEntry *ap)</argsstring>
        <name>simple_static_clause</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4903" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4903" bodyend="4909"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1af0e5fcd066c59949257df503ed9d36f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
        <definition>static path_stack_entry * kill_unsafe_block</definition>
        <argsstring>(path_stack_entry *sp, op_numbers op, PredEntry *ap, int first, int remove, ClauseDef *cls)</argsstring>
        <name>kill_unsafe_block</name>
        <param>
          <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
          <declname>sp</declname>
        </param>
        <param>
          <type>op_numbers</type>
          <declname>op</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>remove</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4912" column="25" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4912" bodyend="4955"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a9b373cac2356903b681706e64218e2cc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int compacta_expand_clauses</definition>
        <argsstring>(yamop *ipc)</argsstring>
        <name>compacta_expand_clauses</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4957" column="12" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4957" bodyend="4977"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a60e4b0dbeb53da026dcd3295edadf3ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int compactz_expand_clauses</definition>
        <argsstring>(yamop *ipc)</argsstring>
        <name>compactz_expand_clauses</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="4979" column="12" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="4979" bodyend="5001"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a0918ec451149706185253caf19f61242" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
        <definition>static yamop * add_to_expand_clauses</definition>
        <argsstring>(path_stack_entry **spp, yamop *ipc, ClauseDef *cls, PredEntry *ap, int first, struct intermediates *cint)</argsstring>
        <name>add_to_expand_clauses</name>
        <param>
          <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> **</type>
          <declname>spp</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cls</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="5004" column="14" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="5004" bodyend="5046"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1aa2011d664f762abb57583fef2f248aba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void nullify_expand_clause</definition>
        <argsstring>(yamop *ipc, path_stack_entry *sp, ClauseDef *cls)</argsstring>
        <name>nullify_expand_clause</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <param>
          <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
          <declname>sp</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="5049" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="5049" bodyend="5077"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a69c39ca10ff7c60bd3b7ad10ffdf7e20" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
        <definition>static yamop * add_try</definition>
        <argsstring>(PredEntry *ap, ClauseDef *cls, yamop *next, struct intermediates *cint)</argsstring>
        <name>add_try</name>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cls</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>next</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="5079" column="14" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="5079" bodyend="5101"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1afa0decb987262a03980d86eb16daaa38" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
        <definition>static yamop * add_trust</definition>
        <argsstring>(LogUpdIndex *icl, ClauseDef *cls, struct intermediates *cint)</argsstring>
        <name>add_trust</name>
        <param>
          <type><ref refid="structlogic__upd__index" kindref="compound">LogUpdIndex</ref> *</type>
          <declname>icl</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cls</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="5103" column="14" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="5103" bodyend="5131"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1aa8865e875ffe0d99f33b6ca66e5589b2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void add_to_index</definition>
        <argsstring>(struct intermediates *cint, int first, path_stack_entry *sp, ClauseDef *cls)</argsstring>
        <name>add_to_index</name>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
          <declname>sp</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="5133" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="5133" bodyend="5564"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a1809b6c93e5eedf12893fbc4abbdbbf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Yap_AddClauseToIndex</definition>
        <argsstring>(PredEntry *ap, yamop *beg, int first)</argsstring>
        <name>Yap_AddClauseToIndex</name>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="5566" column="6" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="5566" bodyend="5611"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1af15d89e45cce4709cb484b5e42c1d6be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void contract_ftable</definition>
        <argsstring>(yamop *ipc, ClauseUnion *blk, PredEntry *ap, Functor f)</argsstring>
        <name>contract_ftable</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <param>
          <type><ref refid="unionclause__obj" kindref="compound">ClauseUnion</ref> *</type>
          <declname>blk</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structFunctorEntryStruct" kindref="compound">Functor</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="5613" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="5613" bodyend="5626"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ac1fce5fc96b3d5a67750caf3efbd4439" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void contract_ctable</definition>
        <argsstring>(yamop *ipc, ClauseUnion *blk, PredEntry *ap, Term at)</argsstring>
        <name>contract_ctable</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <param>
          <type><ref refid="unionclause__obj" kindref="compound">ClauseUnion</ref> *</type>
          <declname>blk</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="5628" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="5628" bodyend="5641"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ab189a3de84898669a140377748501c88" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void remove_from_index</definition>
        <argsstring>(PredEntry *ap, path_stack_entry *sp, ClauseDef *cls, yamop *bg, yamop *lt, struct intermediates *cint)</argsstring>
        <name>remove_from_index</name>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structpath__stack__entry" kindref="compound">path_stack_entry</ref> *</type>
          <declname>sp</declname>
        </param>
        <param>
          <type><ref refid="structStructClauseDef" kindref="compound">ClauseDef</ref> *</type>
          <declname>cls</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>bg</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>lt</declname>
        </param>
        <param>
          <type>struct <ref refid="structintermediates" kindref="compound">intermediates</ref> *</type>
          <declname>cint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="5643" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="5643" bodyend="6001"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a8c56e8336e49c56fc2bc32e2f3c2ff3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Yap_RemoveClauseFromIndex</definition>
        <argsstring>(PredEntry *ap, yamop *beg)</argsstring>
        <name>Yap_RemoveClauseFromIndex</name>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>beg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="6004" column="6" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="6004" bodyend="6118"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ab3f4aa2682a83862de0dddfa9024949a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void store_clause_choice_point</definition>
        <argsstring>(Term t1, Term tb, Term tr, yamop *ipc, PredEntry *pe, yamop *ap_pc, yamop *cp_pc USES_REGS)</argsstring>
        <name>store_clause_choice_point</name>
        <param>
          <type>Term</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>tb</declname>
        </param>
        <param>
          <type>Term</type>
          <declname>tr</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>pe</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ap_pc</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *cp_pc</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="6120" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="6120" bodyend="6150"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a24d0c3530c691e1852d2867171e69d19" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void update_clause_choice_point</definition>
        <argsstring>(yamop *ipc, yamop *ap_pc USES_REGS)</argsstring>
        <name>update_clause_choice_point</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *ap_pc</type>
          <declname>USES_REGS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="6152" column="13" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="6152" bodyend="6157"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a85ba3f85dd82cbe8d007ce930bbb54c7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlogic__upd__clause" kindref="compound">LogUpdClause</ref> *</type>
        <definition>static LogUpdClause * to_clause</definition>
        <argsstring>(yamop *ipc, PredEntry *ap)</argsstring>
        <name>to_clause</name>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="6159" column="21" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="6159" bodyend="6166"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1a7f17524cfd6491edced73f922f4ad7d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlogic__upd__clause" kindref="compound">LogUpdClause</ref> *</type>
        <definition>LogUpdClause * Yap_FollowIndexingCode</definition>
        <argsstring>(PredEntry *ap, yamop *ipc, yhandle_t yht, yamop *ap_pc, yamop *cp_pc)</argsstring>
        <name>Yap_FollowIndexingCode</name>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ipc</declname>
        </param>
        <param>
          <type>yhandle_t</type>
          <declname>yht</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>ap_pc</declname>
        </param>
        <param>
          <type><ref refid="structyami" kindref="compound">yamop</ref> *</type>
          <declname>cp_pc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="6168" column="14" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="6168" bodyend="6785"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ac393c739557971abb82f25e9c05c5e08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlogic__upd__clause" kindref="compound">LogUpdClause</ref> *</type>
        <definition>LogUpdClause * Yap_NthClause</definition>
        <argsstring>(PredEntry *ap, Int ncls)</argsstring>
        <name>Yap_NthClause</name>
        <param>
          <type><ref refid="structpred__entry" kindref="compound">PredEntry</ref> *</type>
          <declname>ap</declname>
        </param>
        <param>
          <type>Int</type>
          <declname>ncls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="6787" column="14" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="6787" bodyend="6999"/>
      </memberdef>
      <memberdef kind="function" id="index_8c_1ac18b36624a1143fc8369972f5cca047d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Yap_CleanUpIndex</definition>
        <argsstring>(LogUpdIndex *blk)</argsstring>
        <name>Yap_CleanUpIndex</name>
        <param>
          <type><ref refid="structlogic__upd__index" kindref="compound">LogUpdIndex</ref> *</type>
          <declname>blk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vsc/github/yap/C/index.c" line="7001" column="6" bodyfile="/home/vsc/github/yap/C/index.c" bodystart="7001" bodyend="7016"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/vsc/github/yap/C/index.c"/>
  </compounddef>
</doxygen>
