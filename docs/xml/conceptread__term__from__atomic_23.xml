<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="conceptread__term__from__atomic_23" kind="concept">
    <compoundname>read_term_from_atomic/3</compoundname>
    <initializer>template&lt;&gt;
concept read_term_from_atomic/3 =     </initializer>
    <briefdescription>
<para><bold>read_term_from_atomic</bold>( +Atomic , - <ref refid="classT" kindref="compound">T</ref> , +Options ) </para>
    </briefdescription>
    <detaileddescription>
<para>read a term <emphasis><ref refid="classT" kindref="compound">T</ref></emphasis> stored in text <emphasis>Atomic</emphasis> according to <emphasis>Options</emphasis></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&lt;em&gt;Atomic&lt;/em&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>the source may be an atom, string, list of codes, or list of chars </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;em&gt;T&lt;/em&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>the output term <emphasis><ref refid="classT" kindref="compound">T</ref></emphasis>, may be any term </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;em&gt;Options&lt;/em&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classread__term_23" kindref="compound">read_term/3</ref> options</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Idea originally from SWI-Prolog, but in YAP we separate atomic and atom Encoding is fixed in atoms and strings </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="os/readterm.c" line="1780" column="1"/>
  </compounddef>
</doxygen>
