<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="group__dgraphs" kind="group">
    <compoundname>dgraphs</compoundname>
    <title>Directed Graphs</title>
    <innerclass refid="classdgraph__new_21" prot="public">dgraph_new/1</innerclass>
    <innerclass refid="classdgraph__add__edge_24" prot="public">dgraph_add_edge/4</innerclass>
    <innerclass refid="classdgraph__add__edges_23" prot="public">dgraph_add_edges/3</innerclass>
    <innerclass refid="classdgraph__add__vertices_23" prot="public">dgraph_add_vertices/3</innerclass>
    <innerclass refid="classdgraph__add__vertex_23" prot="public">dgraph_add_vertex/3</innerclass>
    <innerclass refid="classdgraph__edges_22" prot="public">dgraph_edges/2</innerclass>
    <innerclass refid="classdgraph__vertices_22" prot="public">dgraph_vertices/2</innerclass>
    <innerclass refid="classdgraph__neighbours_23" prot="public">dgraph_neighbours/3</innerclass>
    <innerclass refid="classdgraph__neighbors_23" prot="public">dgraph_neighbors/3</innerclass>
    <innerclass refid="classdgraph__complement_22" prot="public">dgraph_complement/2</innerclass>
    <innerclass refid="classdgraph__del__edge_24" prot="public">dgraph_del_edge/4</innerclass>
    <innerclass refid="classdgraph__del__edges_23" prot="public">dgraph_del_edges/3</innerclass>
    <innerclass refid="classdgraph__del__vertex_23" prot="public">dgraph_del_vertex/3</innerclass>
    <innerclass refid="classdgraph__del__vertices_23" prot="public">dgraph_del_vertices/3</innerclass>
    <innerclass refid="classdgraph__transpose_22" prot="public">dgraph_transpose/2</innerclass>
    <innerclass refid="classdgraph__transitive__closure_22" prot="public">dgraph_transitive_closure/2</innerclass>
    <innerclass refid="classdgraph__symmetric__closure_22" prot="public">dgraph_symmetric_closure/2</innerclass>
    <innerclass refid="classdgraph__top__sort_22" prot="public">dgraph_top_sort/2</innerclass>
    <innerclass refid="classdgraph__top__sort_23" prot="public">dgraph_top_sort/3</innerclass>
    <innerclass refid="classugraph__to__dgraph_22" prot="public">ugraph_to_dgraph/2</innerclass>
    <innerclass refid="classdgraph__to__ugraph_22" prot="public">dgraph_to_ugraph/2</innerclass>
    <innerclass refid="classdgraph__edge_23" prot="public">dgraph_edge/3</innerclass>
    <innerclass refid="classdgraph__min__path_25" prot="public">dgraph_min_path/5</innerclass>
    <innerclass refid="classdgraph__max__path_25" prot="public">dgraph_max_path/5</innerclass>
    <innerclass refid="classdgraph__min__paths_23" prot="public">dgraph_min_paths/3</innerclass>
    <innerclass refid="classdgraph__path_24" prot="public">dgraph_path/4</innerclass>
    <innerclass refid="classdgraph__path_23" prot="public">dgraph_path/3</innerclass>
    <innerclass refid="classdgraph__isomorphic_24" prot="public">dgraph_isomorphic/4</innerclass>
    <innerclass refid="classdgraph__reachable_23" prot="public">dgraph_reachable/3</innerclass>
    <innerclass refid="classdgraph__leaves_22" prot="public">dgraph_leaves/2</innerclass>
    <briefdescription>
<para>The following graph manipulation routines use the red-black tree library to try to avoid linear-time scans of the graph for all graph operations. </para>
    </briefdescription>
    <detaileddescription>
<para>Graphs are represented as a red-black tree, where the key is the vertex, and the associated value is a list of vertices reachable from that vertex through an edge (ie, a list of edges)</para>
    </detaileddescription>
  </compounddef>
</doxygen>
