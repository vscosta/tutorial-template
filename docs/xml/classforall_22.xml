<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classforall_22" kind="class" language="Prolog" prot="public">
    <compoundname>forall/2</compoundname>
    <briefdescription>
<para><bold>forall</bold>(: <emphasis>Cond</emphasis>,: <emphasis>Action</emphasis>) </para>
    </briefdescription>
    <detaileddescription>
<para><bold>forall</bold>(+ <emphasis>Cond</emphasis>,+ <emphasis>Action</emphasis>)</para>
<para>For all alternative bindings of <emphasis>Cond</emphasis> <emphasis>Action</emphasis> can be proven The example verifies that all arithmetic statements in the list <emphasis>L</emphasis> are correct It does not say which is wrong if one proves wrong</para>
<para><programlisting filename=".prolog"><codeline><highlight class="keyword">?-<sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">forall(member(</highlight><highlight class="charliteral">Result</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">=</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">Formula</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="vhldigit">2</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">=</highlight><highlight class="normal"><sp/></highlight><highlight class="vhldigit">1</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">+</highlight><highlight class="normal"><sp/></highlight><highlight class="vhldigit">1</highlight><highlight class="normal">,<sp/></highlight><highlight class="vhldigit">4</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">=</highlight><highlight class="normal"><sp/></highlight><highlight class="vhldigit">2</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">*</highlight><highlight class="normal"><sp/></highlight><highlight class="vhldigit">2</highlight><highlight class="normal">]),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">Result</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">=:=</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">Formula</highlight><highlight class="normal">)</highlight><highlight class="keyword">.</highlight></codeline>
</programlisting></para>
<para>For all alternative bindings of <emphasis>Cond</emphasis> <emphasis>Action</emphasis> can be proven The next example verifies that all arithmetic statements in the list <emphasis>L</emphasis> are correct It does not say which is wrong if one proves wrong</para>
<para><programlisting><codeline><highlight class="keyword">?-<sp/></highlight><highlight class="stringliteral"></highlight><highlight class="normal">forall(member(</highlight><highlight class="charliteral">Result</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">=</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">Formula</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="vhldigit">2</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">=</highlight><highlight class="normal"><sp/></highlight><highlight class="vhldigit">1</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">+</highlight><highlight class="normal"><sp/></highlight><highlight class="vhldigit">1</highlight><highlight class="normal">,<sp/></highlight><highlight class="vhldigit">4</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">=</highlight><highlight class="normal"><sp/></highlight><highlight class="vhldigit">2</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">*</highlight><highlight class="normal"><sp/></highlight><highlight class="vhldigit">2</highlight><highlight class="normal">]),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">Result</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">=:=</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">Formula</highlight><highlight class="normal">)</highlight><highlight class="keyword">.</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="/home/vsc/github/yap/pl/control.yap" line="1" column="1" bodyfile="/home/vsc/github/yap/pl/control.yap" bodystart="1" bodyend="-1"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
