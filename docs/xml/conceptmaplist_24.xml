<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="conceptmaplist_24" kind="concept">
    <compoundname>maplist/4</compoundname>
    <initializer>template&lt;&gt;
concept maplist/4 =     </initializer>
    <briefdescription>
<para><bold>maplist</bold>(3:Pred,+ List1,+ List2,+ List4) </para>
    </briefdescription>
    <detaileddescription>
<para><bold>maplist</bold>(: Pred, ? L1, ? L2, ? L3)</para>
<para>Apply <emphasis>Pred</emphasis> on all successive triples of elements from <emphasis>List1</emphasis>, <emphasis>List2</emphasis> and <emphasis>List3</emphasis> Fails if <emphasis>Pred</emphasis> can not be applied to a triple See the example above</para>
<para><emphasis>L1</emphasis>, <emphasis>L2</emphasis>, and <emphasis>L3</emphasis> are such that <computeroutput>call( _Pred_, _A1_, _A2_, _A3_)</computeroutput> holds for every corresponding element in lists <emphasis>L1</emphasis>, <emphasis>L2</emphasis>, and <emphasis>L3</emphasis> </para>
    </detaileddescription>
    <location file="library/maplist.yap" line="1" column="1"/>
  </compounddef>
</doxygen>
